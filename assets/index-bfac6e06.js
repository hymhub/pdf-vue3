(function(){const d=document.createElement("link").relList;if(d&&d.supports&&d.supports("modulepreload"))return;for(const u of document.querySelectorAll('link[rel="modulepreload"]'))h(u);new MutationObserver(u=>{for(const M of u)if(M.type==="childList")for(const e of M.addedNodes)e.tagName==="LINK"&&e.rel==="modulepreload"&&h(e)}).observe(document,{childList:!0,subtree:!0});function m(u){const M={};return u.integrity&&(M.integrity=u.integrity),u.referrerPolicy&&(M.referrerPolicy=u.referrerPolicy),u.crossOrigin==="use-credentials"?M.credentials="include":u.crossOrigin==="anonymous"?M.credentials="omit":M.credentials="same-origin",M}function h(u){if(u.ep)return;u.ep=!0;const M=m(u);fetch(u.href,M)}})();function makeMap(c,d){const m=Object.create(null),h=c.split(",");for(let u=0;u<h.length;u++)m[h[u]]=!0;return d?u=>!!m[u.toLowerCase()]:u=>!!m[u]}const EMPTY_OBJ={},EMPTY_ARR=[],NOOP=()=>{},NO=()=>!1,onRE=/^on[^a-z]/,isOn=c=>onRE.test(c),isModelListener=c=>c.startsWith("onUpdate:"),extend=Object.assign,remove=(c,d)=>{const m=c.indexOf(d);m>-1&&c.splice(m,1)},hasOwnProperty$1=Object.prototype.hasOwnProperty,hasOwn=(c,d)=>hasOwnProperty$1.call(c,d),isArray=Array.isArray,isMap=c=>toTypeString(c)==="[object Map]",isSet=c=>toTypeString(c)==="[object Set]",isFunction=c=>typeof c=="function",isString=c=>typeof c=="string",isSymbol=c=>typeof c=="symbol",isObject=c=>c!==null&&typeof c=="object",isPromise=c=>isObject(c)&&isFunction(c.then)&&isFunction(c.catch),objectToString=Object.prototype.toString,toTypeString=c=>objectToString.call(c),toRawType=c=>toTypeString(c).slice(8,-1),isPlainObject=c=>toTypeString(c)==="[object Object]",isIntegerKey=c=>isString(c)&&c!=="NaN"&&c[0]!=="-"&&""+parseInt(c,10)===c,isReservedProp=makeMap(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),cacheStringFunction=c=>{const d=Object.create(null);return m=>d[m]||(d[m]=c(m))},camelizeRE=/-(\w)/g,camelize=cacheStringFunction(c=>c.replace(camelizeRE,(d,m)=>m?m.toUpperCase():"")),hyphenateRE=/\B([A-Z])/g,hyphenate=cacheStringFunction(c=>c.replace(hyphenateRE,"-$1").toLowerCase()),capitalize=cacheStringFunction(c=>c.charAt(0).toUpperCase()+c.slice(1)),toHandlerKey=cacheStringFunction(c=>c?`on${capitalize(c)}`:""),hasChanged=(c,d)=>!Object.is(c,d),invokeArrayFns=(c,d)=>{for(let m=0;m<c.length;m++)c[m](d)},def=(c,d,m)=>{Object.defineProperty(c,d,{configurable:!0,enumerable:!1,value:m})},looseToNumber=c=>{const d=parseFloat(c);return isNaN(d)?c:d};let _globalThis;const getGlobalThis=()=>_globalThis||(_globalThis=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function normalizeStyle(c){if(isArray(c)){const d={};for(let m=0;m<c.length;m++){const h=c[m],u=isString(h)?parseStringStyle(h):normalizeStyle(h);if(u)for(const M in u)d[M]=u[M]}return d}else{if(isString(c))return c;if(isObject(c))return c}}const listDelimiterRE=/;(?![^(]*\))/g,propertyDelimiterRE=/:([^]+)/,styleCommentRE=/\/\*[^]*?\*\//g;function parseStringStyle(c){const d={};return c.replace(styleCommentRE,"").split(listDelimiterRE).forEach(m=>{if(m){const h=m.split(propertyDelimiterRE);h.length>1&&(d[h[0].trim()]=h[1].trim())}}),d}function normalizeClass(c){let d="";if(isString(c))d=c;else if(isArray(c))for(let m=0;m<c.length;m++){const h=normalizeClass(c[m]);h&&(d+=h+" ")}else if(isObject(c))for(const m in c)c[m]&&(d+=m+" ");return d.trim()}const specialBooleanAttrs="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",isSpecialBooleanAttr=makeMap(specialBooleanAttrs);function includeBooleanAttr(c){return!!c||c===""}const toDisplayString=c=>isString(c)?c:c==null?"":isArray(c)||isObject(c)&&(c.toString===objectToString||!isFunction(c.toString))?JSON.stringify(c,replacer,2):String(c),replacer=(c,d)=>d&&d.__v_isRef?replacer(c,d.value):isMap(d)?{[`Map(${d.size})`]:[...d.entries()].reduce((m,[h,u])=>(m[`${h} =>`]=u,m),{})}:isSet(d)?{[`Set(${d.size})`]:[...d.values()]}:isObject(d)&&!isArray(d)&&!isPlainObject(d)?String(d):d;let activeEffectScope;class EffectScope{constructor(d=!1){this.detached=d,this._active=!0,this.effects=[],this.cleanups=[],this.parent=activeEffectScope,!d&&activeEffectScope&&(this.index=(activeEffectScope.scopes||(activeEffectScope.scopes=[])).push(this)-1)}get active(){return this._active}run(d){if(this._active){const m=activeEffectScope;try{return activeEffectScope=this,d()}finally{activeEffectScope=m}}}on(){activeEffectScope=this}off(){activeEffectScope=this.parent}stop(d){if(this._active){let m,h;for(m=0,h=this.effects.length;m<h;m++)this.effects[m].stop();for(m=0,h=this.cleanups.length;m<h;m++)this.cleanups[m]();if(this.scopes)for(m=0,h=this.scopes.length;m<h;m++)this.scopes[m].stop(!0);if(!this.detached&&this.parent&&!d){const u=this.parent.scopes.pop();u&&u!==this&&(this.parent.scopes[this.index]=u,u.index=this.index)}this.parent=void 0,this._active=!1}}}function recordEffectScope(c,d=activeEffectScope){d&&d.active&&d.effects.push(c)}function getCurrentScope(){return activeEffectScope}const createDep=c=>{const d=new Set(c);return d.w=0,d.n=0,d},wasTracked=c=>(c.w&trackOpBit)>0,newTracked=c=>(c.n&trackOpBit)>0,initDepMarkers=({deps:c})=>{if(c.length)for(let d=0;d<c.length;d++)c[d].w|=trackOpBit},finalizeDepMarkers=c=>{const{deps:d}=c;if(d.length){let m=0;for(let h=0;h<d.length;h++){const u=d[h];wasTracked(u)&&!newTracked(u)?u.delete(c):d[m++]=u,u.w&=~trackOpBit,u.n&=~trackOpBit}d.length=m}},targetMap=new WeakMap;let effectTrackDepth=0,trackOpBit=1;const maxMarkerBits=30;let activeEffect;const ITERATE_KEY=Symbol(""),MAP_KEY_ITERATE_KEY=Symbol("");class ReactiveEffect{constructor(d,m=null,h){this.fn=d,this.scheduler=m,this.active=!0,this.deps=[],this.parent=void 0,recordEffectScope(this,h)}run(){if(!this.active)return this.fn();let d=activeEffect,m=shouldTrack;for(;d;){if(d===this)return;d=d.parent}try{return this.parent=activeEffect,activeEffect=this,shouldTrack=!0,trackOpBit=1<<++effectTrackDepth,effectTrackDepth<=maxMarkerBits?initDepMarkers(this):cleanupEffect(this),this.fn()}finally{effectTrackDepth<=maxMarkerBits&&finalizeDepMarkers(this),trackOpBit=1<<--effectTrackDepth,activeEffect=this.parent,shouldTrack=m,this.parent=void 0,this.deferStop&&this.stop()}}stop(){activeEffect===this?this.deferStop=!0:this.active&&(cleanupEffect(this),this.onStop&&this.onStop(),this.active=!1)}}function cleanupEffect(c){const{deps:d}=c;if(d.length){for(let m=0;m<d.length;m++)d[m].delete(c);d.length=0}}let shouldTrack=!0;const trackStack=[];function pauseTracking(){trackStack.push(shouldTrack),shouldTrack=!1}function resetTracking(){const c=trackStack.pop();shouldTrack=c===void 0?!0:c}function track(c,d,m){if(shouldTrack&&activeEffect){let h=targetMap.get(c);h||targetMap.set(c,h=new Map);let u=h.get(m);u||h.set(m,u=createDep()),trackEffects(u)}}function trackEffects(c,d){let m=!1;effectTrackDepth<=maxMarkerBits?newTracked(c)||(c.n|=trackOpBit,m=!wasTracked(c)):m=!c.has(activeEffect),m&&(c.add(activeEffect),activeEffect.deps.push(c))}function trigger(c,d,m,h,u,M){const e=targetMap.get(c);if(!e)return;let n=[];if(d==="clear")n=[...e.values()];else if(m==="length"&&isArray(c)){const Y=Number(h);e.forEach((I,T)=>{(T==="length"||T>=Y)&&n.push(I)})}else switch(m!==void 0&&n.push(e.get(m)),d){case"add":isArray(c)?isIntegerKey(m)&&n.push(e.get("length")):(n.push(e.get(ITERATE_KEY)),isMap(c)&&n.push(e.get(MAP_KEY_ITERATE_KEY)));break;case"delete":isArray(c)||(n.push(e.get(ITERATE_KEY)),isMap(c)&&n.push(e.get(MAP_KEY_ITERATE_KEY)));break;case"set":isMap(c)&&n.push(e.get(ITERATE_KEY));break}if(n.length===1)n[0]&&triggerEffects(n[0]);else{const Y=[];for(const I of n)I&&Y.push(...I);triggerEffects(createDep(Y))}}function triggerEffects(c,d){const m=isArray(c)?c:[...c];for(const h of m)h.computed&&triggerEffect(h);for(const h of m)h.computed||triggerEffect(h)}function triggerEffect(c,d){(c!==activeEffect||c.allowRecurse)&&(c.scheduler?c.scheduler():c.run())}const isNonTrackableKeys=makeMap("__proto__,__v_isRef,__isVue"),builtInSymbols=new Set(Object.getOwnPropertyNames(Symbol).filter(c=>c!=="arguments"&&c!=="caller").map(c=>Symbol[c]).filter(isSymbol)),get$1=createGetter(),shallowGet=createGetter(!1,!0),readonlyGet=createGetter(!0),arrayInstrumentations=createArrayInstrumentations();function createArrayInstrumentations(){const c={};return["includes","indexOf","lastIndexOf"].forEach(d=>{c[d]=function(...m){const h=toRaw(this);for(let M=0,e=this.length;M<e;M++)track(h,"get",M+"");const u=h[d](...m);return u===-1||u===!1?h[d](...m.map(toRaw)):u}}),["push","pop","shift","unshift","splice"].forEach(d=>{c[d]=function(...m){pauseTracking();const h=toRaw(this)[d].apply(this,m);return resetTracking(),h}}),c}function hasOwnProperty(c){const d=toRaw(this);return track(d,"has",c),d.hasOwnProperty(c)}function createGetter(c=!1,d=!1){return function(h,u,M){if(u==="__v_isReactive")return!c;if(u==="__v_isReadonly")return c;if(u==="__v_isShallow")return d;if(u==="__v_raw"&&M===(c?d?shallowReadonlyMap:readonlyMap:d?shallowReactiveMap:reactiveMap).get(h))return h;const e=isArray(h);if(!c){if(e&&hasOwn(arrayInstrumentations,u))return Reflect.get(arrayInstrumentations,u,M);if(u==="hasOwnProperty")return hasOwnProperty}const n=Reflect.get(h,u,M);return(isSymbol(u)?builtInSymbols.has(u):isNonTrackableKeys(u))||(c||track(h,"get",u),d)?n:isRef(n)?e&&isIntegerKey(u)?n:n.value:isObject(n)?c?readonly(n):reactive(n):n}}const set$1=createSetter(),shallowSet=createSetter(!0);function createSetter(c=!1){return function(m,h,u,M){let e=m[h];if(isReadonly(e)&&isRef(e)&&!isRef(u))return!1;if(!c&&(!isShallow(u)&&!isReadonly(u)&&(e=toRaw(e),u=toRaw(u)),!isArray(m)&&isRef(e)&&!isRef(u)))return e.value=u,!0;const n=isArray(m)&&isIntegerKey(h)?Number(h)<m.length:hasOwn(m,h),Y=Reflect.set(m,h,u,M);return m===toRaw(M)&&(n?hasChanged(u,e)&&trigger(m,"set",h,u):trigger(m,"add",h,u)),Y}}function deleteProperty(c,d){const m=hasOwn(c,d);c[d];const h=Reflect.deleteProperty(c,d);return h&&m&&trigger(c,"delete",d,void 0),h}function has$1(c,d){const m=Reflect.has(c,d);return(!isSymbol(d)||!builtInSymbols.has(d))&&track(c,"has",d),m}function ownKeys(c){return track(c,"iterate",isArray(c)?"length":ITERATE_KEY),Reflect.ownKeys(c)}const mutableHandlers={get:get$1,set:set$1,deleteProperty,has:has$1,ownKeys},readonlyHandlers={get:readonlyGet,set(c,d){return!0},deleteProperty(c,d){return!0}},shallowReactiveHandlers=extend({},mutableHandlers,{get:shallowGet,set:shallowSet}),toShallow=c=>c,getProto=c=>Reflect.getPrototypeOf(c);function get(c,d,m=!1,h=!1){c=c.__v_raw;const u=toRaw(c),M=toRaw(d);m||(d!==M&&track(u,"get",d),track(u,"get",M));const{has:e}=getProto(u),n=h?toShallow:m?toReadonly:toReactive;if(e.call(u,d))return n(c.get(d));if(e.call(u,M))return n(c.get(M));c!==u&&c.get(d)}function has(c,d=!1){const m=this.__v_raw,h=toRaw(m),u=toRaw(c);return d||(c!==u&&track(h,"has",c),track(h,"has",u)),c===u?m.has(c):m.has(c)||m.has(u)}function size(c,d=!1){return c=c.__v_raw,!d&&track(toRaw(c),"iterate",ITERATE_KEY),Reflect.get(c,"size",c)}function add(c){c=toRaw(c);const d=toRaw(this);return getProto(d).has.call(d,c)||(d.add(c),trigger(d,"add",c,c)),this}function set(c,d){d=toRaw(d);const m=toRaw(this),{has:h,get:u}=getProto(m);let M=h.call(m,c);M||(c=toRaw(c),M=h.call(m,c));const e=u.call(m,c);return m.set(c,d),M?hasChanged(d,e)&&trigger(m,"set",c,d):trigger(m,"add",c,d),this}function deleteEntry(c){const d=toRaw(this),{has:m,get:h}=getProto(d);let u=m.call(d,c);u||(c=toRaw(c),u=m.call(d,c)),h&&h.call(d,c);const M=d.delete(c);return u&&trigger(d,"delete",c,void 0),M}function clear(){const c=toRaw(this),d=c.size!==0,m=c.clear();return d&&trigger(c,"clear",void 0,void 0),m}function createForEach(c,d){return function(h,u){const M=this,e=M.__v_raw,n=toRaw(e),Y=d?toShallow:c?toReadonly:toReactive;return!c&&track(n,"iterate",ITERATE_KEY),e.forEach((I,T)=>h.call(u,Y(I),Y(T),M))}}function createIterableMethod(c,d,m){return function(...h){const u=this.__v_raw,M=toRaw(u),e=isMap(M),n=c==="entries"||c===Symbol.iterator&&e,Y=c==="keys"&&e,I=u[c](...h),T=m?toShallow:d?toReadonly:toReactive;return!d&&track(M,"iterate",Y?MAP_KEY_ITERATE_KEY:ITERATE_KEY),{next(){const{value:o,done:C}=I.next();return C?{value:o,done:C}:{value:n?[T(o[0]),T(o[1])]:T(o),done:C}},[Symbol.iterator](){return this}}}}function createReadonlyMethod(c){return function(...d){return c==="delete"?!1:this}}function createInstrumentations(){const c={get(M){return get(this,M)},get size(){return size(this)},has,add,set,delete:deleteEntry,clear,forEach:createForEach(!1,!1)},d={get(M){return get(this,M,!1,!0)},get size(){return size(this)},has,add,set,delete:deleteEntry,clear,forEach:createForEach(!1,!0)},m={get(M){return get(this,M,!0)},get size(){return size(this,!0)},has(M){return has.call(this,M,!0)},add:createReadonlyMethod("add"),set:createReadonlyMethod("set"),delete:createReadonlyMethod("delete"),clear:createReadonlyMethod("clear"),forEach:createForEach(!0,!1)},h={get(M){return get(this,M,!0,!0)},get size(){return size(this,!0)},has(M){return has.call(this,M,!0)},add:createReadonlyMethod("add"),set:createReadonlyMethod("set"),delete:createReadonlyMethod("delete"),clear:createReadonlyMethod("clear"),forEach:createForEach(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(M=>{c[M]=createIterableMethod(M,!1,!1),m[M]=createIterableMethod(M,!0,!1),d[M]=createIterableMethod(M,!1,!0),h[M]=createIterableMethod(M,!0,!0)}),[c,m,d,h]}const[mutableInstrumentations,readonlyInstrumentations,shallowInstrumentations,shallowReadonlyInstrumentations]=createInstrumentations();function createInstrumentationGetter(c,d){const m=d?c?shallowReadonlyInstrumentations:shallowInstrumentations:c?readonlyInstrumentations:mutableInstrumentations;return(h,u,M)=>u==="__v_isReactive"?!c:u==="__v_isReadonly"?c:u==="__v_raw"?h:Reflect.get(hasOwn(m,u)&&u in h?m:h,u,M)}const mutableCollectionHandlers={get:createInstrumentationGetter(!1,!1)},shallowCollectionHandlers={get:createInstrumentationGetter(!1,!0)},readonlyCollectionHandlers={get:createInstrumentationGetter(!0,!1)},reactiveMap=new WeakMap,shallowReactiveMap=new WeakMap,readonlyMap=new WeakMap,shallowReadonlyMap=new WeakMap;function targetTypeMap(c){switch(c){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function getTargetType(c){return c.__v_skip||!Object.isExtensible(c)?0:targetTypeMap(toRawType(c))}function reactive(c){return isReadonly(c)?c:createReactiveObject(c,!1,mutableHandlers,mutableCollectionHandlers,reactiveMap)}function shallowReactive(c){return createReactiveObject(c,!1,shallowReactiveHandlers,shallowCollectionHandlers,shallowReactiveMap)}function readonly(c){return createReactiveObject(c,!0,readonlyHandlers,readonlyCollectionHandlers,readonlyMap)}function createReactiveObject(c,d,m,h,u){if(!isObject(c)||c.__v_raw&&!(d&&c.__v_isReactive))return c;const M=u.get(c);if(M)return M;const e=getTargetType(c);if(e===0)return c;const n=new Proxy(c,e===2?h:m);return u.set(c,n),n}function isReactive(c){return isReadonly(c)?isReactive(c.__v_raw):!!(c&&c.__v_isReactive)}function isReadonly(c){return!!(c&&c.__v_isReadonly)}function isShallow(c){return!!(c&&c.__v_isShallow)}function isProxy(c){return isReactive(c)||isReadonly(c)}function toRaw(c){const d=c&&c.__v_raw;return d?toRaw(d):c}function markRaw(c){return def(c,"__v_skip",!0),c}const toReactive=c=>isObject(c)?reactive(c):c,toReadonly=c=>isObject(c)?readonly(c):c;function trackRefValue(c){shouldTrack&&activeEffect&&(c=toRaw(c),trackEffects(c.dep||(c.dep=createDep())))}function triggerRefValue(c,d){c=toRaw(c);const m=c.dep;m&&triggerEffects(m)}function isRef(c){return!!(c&&c.__v_isRef===!0)}function ref(c){return createRef(c,!1)}function createRef(c,d){return isRef(c)?c:new RefImpl(c,d)}class RefImpl{constructor(d,m){this.__v_isShallow=m,this.dep=void 0,this.__v_isRef=!0,this._rawValue=m?d:toRaw(d),this._value=m?d:toReactive(d)}get value(){return trackRefValue(this),this._value}set value(d){const m=this.__v_isShallow||isShallow(d)||isReadonly(d);d=m?d:toRaw(d),hasChanged(d,this._rawValue)&&(this._rawValue=d,this._value=m?d:toReactive(d),triggerRefValue(this))}}function unref(c){return isRef(c)?c.value:c}const shallowUnwrapHandlers={get:(c,d,m)=>unref(Reflect.get(c,d,m)),set:(c,d,m,h)=>{const u=c[d];return isRef(u)&&!isRef(m)?(u.value=m,!0):Reflect.set(c,d,m,h)}};function proxyRefs(c){return isReactive(c)?c:new Proxy(c,shallowUnwrapHandlers)}class ComputedRefImpl{constructor(d,m,h,u){this._setter=m,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this._dirty=!0,this.effect=new ReactiveEffect(d,()=>{this._dirty||(this._dirty=!0,triggerRefValue(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!u,this.__v_isReadonly=h}get value(){const d=toRaw(this);return trackRefValue(d),(d._dirty||!d._cacheable)&&(d._dirty=!1,d._value=d.effect.run()),d._value}set value(d){this._setter(d)}}function computed$1(c,d,m=!1){let h,u;const M=isFunction(c);return M?(h=c,u=NOOP):(h=c.get,u=c.set),new ComputedRefImpl(h,u,M||!u,m)}function warn(c,...d){}function callWithErrorHandling(c,d,m,h){let u;try{u=h?c(...h):c()}catch(M){handleError(M,d,m)}return u}function callWithAsyncErrorHandling(c,d,m,h){if(isFunction(c)){const M=callWithErrorHandling(c,d,m,h);return M&&isPromise(M)&&M.catch(e=>{handleError(e,d,m)}),M}const u=[];for(let M=0;M<c.length;M++)u.push(callWithAsyncErrorHandling(c[M],d,m,h));return u}function handleError(c,d,m,h=!0){const u=d?d.vnode:null;if(d){let M=d.parent;const e=d.proxy,n=m;for(;M;){const I=M.ec;if(I){for(let T=0;T<I.length;T++)if(I[T](c,e,n)===!1)return}M=M.parent}const Y=d.appContext.config.errorHandler;if(Y){callWithErrorHandling(Y,null,10,[c,e,n]);return}}logError(c,m,u,h)}function logError(c,d,m,h=!0){console.error(c)}let isFlushing=!1,isFlushPending=!1;const queue=[];let flushIndex=0;const pendingPostFlushCbs=[];let activePostFlushCbs=null,postFlushIndex=0;const resolvedPromise=Promise.resolve();let currentFlushPromise=null;function nextTick(c){const d=currentFlushPromise||resolvedPromise;return c?d.then(this?c.bind(this):c):d}function findInsertionIndex(c){let d=flushIndex+1,m=queue.length;for(;d<m;){const h=d+m>>>1;getId(queue[h])<c?d=h+1:m=h}return d}function queueJob(c){(!queue.length||!queue.includes(c,isFlushing&&c.allowRecurse?flushIndex+1:flushIndex))&&(c.id==null?queue.push(c):queue.splice(findInsertionIndex(c.id),0,c),queueFlush())}function queueFlush(){!isFlushing&&!isFlushPending&&(isFlushPending=!0,currentFlushPromise=resolvedPromise.then(flushJobs))}function invalidateJob(c){const d=queue.indexOf(c);d>flushIndex&&queue.splice(d,1)}function queuePostFlushCb(c){isArray(c)?pendingPostFlushCbs.push(...c):(!activePostFlushCbs||!activePostFlushCbs.includes(c,c.allowRecurse?postFlushIndex+1:postFlushIndex))&&pendingPostFlushCbs.push(c),queueFlush()}function flushPreFlushCbs(c,d=isFlushing?flushIndex+1:0){for(;d<queue.length;d++){const m=queue[d];m&&m.pre&&(queue.splice(d,1),d--,m())}}function flushPostFlushCbs(c){if(pendingPostFlushCbs.length){const d=[...new Set(pendingPostFlushCbs)];if(pendingPostFlushCbs.length=0,activePostFlushCbs){activePostFlushCbs.push(...d);return}for(activePostFlushCbs=d,activePostFlushCbs.sort((m,h)=>getId(m)-getId(h)),postFlushIndex=0;postFlushIndex<activePostFlushCbs.length;postFlushIndex++)activePostFlushCbs[postFlushIndex]();activePostFlushCbs=null,postFlushIndex=0}}const getId=c=>c.id==null?1/0:c.id,comparator=(c,d)=>{const m=getId(c)-getId(d);if(m===0){if(c.pre&&!d.pre)return-1;if(d.pre&&!c.pre)return 1}return m};function flushJobs(c){isFlushPending=!1,isFlushing=!0,queue.sort(comparator);const d=NOOP;try{for(flushIndex=0;flushIndex<queue.length;flushIndex++){const m=queue[flushIndex];m&&m.active!==!1&&callWithErrorHandling(m,null,14)}}finally{flushIndex=0,queue.length=0,flushPostFlushCbs(),isFlushing=!1,currentFlushPromise=null,(queue.length||pendingPostFlushCbs.length)&&flushJobs()}}function emit(c,d,...m){if(c.isUnmounted)return;const h=c.vnode.props||EMPTY_OBJ;let u=m;const M=d.startsWith("update:"),e=M&&d.slice(7);if(e&&e in h){const T=`${e==="modelValue"?"model":e}Modifiers`,{number:o,trim:C}=h[T]||EMPTY_OBJ;C&&(u=m.map(J=>isString(J)?J.trim():J)),o&&(u=m.map(looseToNumber))}let n,Y=h[n=toHandlerKey(d)]||h[n=toHandlerKey(camelize(d))];!Y&&M&&(Y=h[n=toHandlerKey(hyphenate(d))]),Y&&callWithAsyncErrorHandling(Y,c,6,u);const I=h[n+"Once"];if(I){if(!c.emitted)c.emitted={};else if(c.emitted[n])return;c.emitted[n]=!0,callWithAsyncErrorHandling(I,c,6,u)}}function normalizeEmitsOptions(c,d,m=!1){const h=d.emitsCache,u=h.get(c);if(u!==void 0)return u;const M=c.emits;let e={},n=!1;if(!isFunction(c)){const Y=I=>{const T=normalizeEmitsOptions(I,d,!0);T&&(n=!0,extend(e,T))};!m&&d.mixins.length&&d.mixins.forEach(Y),c.extends&&Y(c.extends),c.mixins&&c.mixins.forEach(Y)}return!M&&!n?(isObject(c)&&h.set(c,null),null):(isArray(M)?M.forEach(Y=>e[Y]=null):extend(e,M),isObject(c)&&h.set(c,e),e)}function isEmitListener(c,d){return!c||!isOn(d)?!1:(d=d.slice(2).replace(/Once$/,""),hasOwn(c,d[0].toLowerCase()+d.slice(1))||hasOwn(c,hyphenate(d))||hasOwn(c,d))}let currentRenderingInstance=null,currentScopeId=null;function setCurrentRenderingInstance(c){const d=currentRenderingInstance;return currentRenderingInstance=c,currentScopeId=c&&c.type.__scopeId||null,d}function withCtx(c,d=currentRenderingInstance,m){if(!d||c._n)return c;const h=(...u)=>{h._d&&setBlockTracking(-1);const M=setCurrentRenderingInstance(d);let e;try{e=c(...u)}finally{setCurrentRenderingInstance(M),h._d&&setBlockTracking(1)}return e};return h._n=!0,h._c=!0,h._d=!0,h}function markAttrsAccessed(){}function renderComponentRoot(c){const{type:d,vnode:m,proxy:h,withProxy:u,props:M,propsOptions:[e],slots:n,attrs:Y,emit:I,render:T,renderCache:o,data:C,setupState:J,ctx:v,inheritAttrs:Q}=c;let $,q;const x=setCurrentRenderingInstance(c);try{if(m.shapeFlag&4){const r=u||h;$=normalizeVNode(T.call(r,r,o,M,J,C,v)),q=Y}else{const r=d;$=normalizeVNode(r.length>1?r(M,{attrs:Y,slots:n,emit:I}):r(M,null)),q=d.props?Y:getFunctionalFallthrough(Y)}}catch(r){blockStack.length=0,handleError(r,c,1),$=createVNode(Comment)}let D=$;if(q&&Q!==!1){const r=Object.keys(q),{shapeFlag:w}=D;r.length&&w&7&&(e&&r.some(isModelListener)&&(q=filterModelListeners(q,e)),D=cloneVNode(D,q))}return m.dirs&&(D=cloneVNode(D),D.dirs=D.dirs?D.dirs.concat(m.dirs):m.dirs),m.transition&&(D.transition=m.transition),$=D,setCurrentRenderingInstance(x),$}const getFunctionalFallthrough=c=>{let d;for(const m in c)(m==="class"||m==="style"||isOn(m))&&((d||(d={}))[m]=c[m]);return d},filterModelListeners=(c,d)=>{const m={};for(const h in c)(!isModelListener(h)||!(h.slice(9)in d))&&(m[h]=c[h]);return m};function shouldUpdateComponent(c,d,m){const{props:h,children:u,component:M}=c,{props:e,children:n,patchFlag:Y}=d,I=M.emitsOptions;if(d.dirs||d.transition)return!0;if(m&&Y>=0){if(Y&1024)return!0;if(Y&16)return h?hasPropsChanged(h,e,I):!!e;if(Y&8){const T=d.dynamicProps;for(let o=0;o<T.length;o++){const C=T[o];if(e[C]!==h[C]&&!isEmitListener(I,C))return!0}}}else return(u||n)&&(!n||!n.$stable)?!0:h===e?!1:h?e?hasPropsChanged(h,e,I):!0:!!e;return!1}function hasPropsChanged(c,d,m){const h=Object.keys(d);if(h.length!==Object.keys(c).length)return!0;for(let u=0;u<h.length;u++){const M=h[u];if(d[M]!==c[M]&&!isEmitListener(m,M))return!0}return!1}function updateHOCHostEl({vnode:c,parent:d},m){for(;d&&d.subTree===c;)(c=d.vnode).el=m,d=d.parent}const isSuspense=c=>c.__isSuspense;function queueEffectWithSuspense(c,d){d&&d.pendingBranch?isArray(c)?d.effects.push(...c):d.effects.push(c):queuePostFlushCb(c)}function watchEffect(c,d){return doWatch(c,null,d)}const INITIAL_WATCHER_VALUE={};function watch(c,d,m){return doWatch(c,d,m)}function doWatch(c,d,{immediate:m,deep:h,flush:u,onTrack:M,onTrigger:e}=EMPTY_OBJ){var n;const Y=getCurrentScope()===((n=currentInstance)==null?void 0:n.scope)?currentInstance:null;let I,T=!1,o=!1;if(isRef(c)?(I=()=>c.value,T=isShallow(c)):isReactive(c)?(I=()=>c,h=!0):isArray(c)?(o=!0,T=c.some(r=>isReactive(r)||isShallow(r)),I=()=>c.map(r=>{if(isRef(r))return r.value;if(isReactive(r))return traverse(r);if(isFunction(r))return callWithErrorHandling(r,Y,2)})):isFunction(c)?d?I=()=>callWithErrorHandling(c,Y,2):I=()=>{if(!(Y&&Y.isUnmounted))return C&&C(),callWithAsyncErrorHandling(c,Y,3,[J])}:I=NOOP,d&&h){const r=I;I=()=>traverse(r())}let C,J=r=>{C=x.onStop=()=>{callWithErrorHandling(r,Y,4)}},v;if(isInSSRComponentSetup)if(J=NOOP,d?m&&callWithAsyncErrorHandling(d,Y,3,[I(),o?[]:void 0,J]):I(),u==="sync"){const r=useSSRContext();v=r.__watcherHandles||(r.__watcherHandles=[])}else return NOOP;let Q=o?new Array(c.length).fill(INITIAL_WATCHER_VALUE):INITIAL_WATCHER_VALUE;const $=()=>{if(x.active)if(d){const r=x.run();(h||T||(o?r.some((w,j)=>hasChanged(w,Q[j])):hasChanged(r,Q)))&&(C&&C(),callWithAsyncErrorHandling(d,Y,3,[r,Q===INITIAL_WATCHER_VALUE?void 0:o&&Q[0]===INITIAL_WATCHER_VALUE?[]:Q,J]),Q=r)}else x.run()};$.allowRecurse=!!d;let q;u==="sync"?q=$:u==="post"?q=()=>queuePostRenderEffect($,Y&&Y.suspense):($.pre=!0,Y&&($.id=Y.uid),q=()=>queueJob($));const x=new ReactiveEffect(I,q);d?m?$():Q=x.run():u==="post"?queuePostRenderEffect(x.run.bind(x),Y&&Y.suspense):x.run();const D=()=>{x.stop(),Y&&Y.scope&&remove(Y.scope.effects,x)};return v&&v.push(D),D}function instanceWatch(c,d,m){const h=this.proxy,u=isString(c)?c.includes(".")?createPathGetter(h,c):()=>h[c]:c.bind(h,h);let M;isFunction(d)?M=d:(M=d.handler,m=d);const e=currentInstance;setCurrentInstance(this);const n=doWatch(u,M.bind(h),m);return e?setCurrentInstance(e):unsetCurrentInstance(),n}function createPathGetter(c,d){const m=d.split(".");return()=>{let h=c;for(let u=0;u<m.length&&h;u++)h=h[m[u]];return h}}function traverse(c,d){if(!isObject(c)||c.__v_skip||(d=d||new Set,d.has(c)))return c;if(d.add(c),isRef(c))traverse(c.value,d);else if(isArray(c))for(let m=0;m<c.length;m++)traverse(c[m],d);else if(isSet(c)||isMap(c))c.forEach(m=>{traverse(m,d)});else if(isPlainObject(c))for(const m in c)traverse(c[m],d);return c}function invokeDirectiveHook(c,d,m,h){const u=c.dirs,M=d&&d.dirs;for(let e=0;e<u.length;e++){const n=u[e];M&&(n.oldValue=M[e].value);let Y=n.dir[h];Y&&(pauseTracking(),callWithAsyncErrorHandling(Y,m,8,[c.el,n,c,d]),resetTracking())}}function defineComponent(c,d){return isFunction(c)?(()=>extend({name:c.name},d,{setup:c}))():c}const isAsyncWrapper=c=>!!c.type.__asyncLoader,isKeepAlive=c=>c.type.__isKeepAlive;function onActivated(c,d){registerKeepAliveHook(c,"a",d)}function onDeactivated(c,d){registerKeepAliveHook(c,"da",d)}function registerKeepAliveHook(c,d,m=currentInstance){const h=c.__wdc||(c.__wdc=()=>{let u=m;for(;u;){if(u.isDeactivated)return;u=u.parent}return c()});if(injectHook(d,h,m),m){let u=m.parent;for(;u&&u.parent;)isKeepAlive(u.parent.vnode)&&injectToKeepAliveRoot(h,d,m,u),u=u.parent}}function injectToKeepAliveRoot(c,d,m,h){const u=injectHook(d,c,h,!0);onUnmounted(()=>{remove(h[d],u)},m)}function injectHook(c,d,m=currentInstance,h=!1){if(m){const u=m[c]||(m[c]=[]),M=d.__weh||(d.__weh=(...e)=>{if(m.isUnmounted)return;pauseTracking(),setCurrentInstance(m);const n=callWithAsyncErrorHandling(d,m,c,e);return unsetCurrentInstance(),resetTracking(),n});return h?u.unshift(M):u.push(M),M}}const createHook=c=>(d,m=currentInstance)=>(!isInSSRComponentSetup||c==="sp")&&injectHook(c,(...h)=>d(...h),m),onBeforeMount=createHook("bm"),onMounted=createHook("m"),onBeforeUpdate=createHook("bu"),onUpdated=createHook("u"),onBeforeUnmount=createHook("bum"),onUnmounted=createHook("um"),onServerPrefetch=createHook("sp"),onRenderTriggered=createHook("rtg"),onRenderTracked=createHook("rtc");function onErrorCaptured(c,d=currentInstance){injectHook("ec",c,d)}const NULL_DYNAMIC_COMPONENT=Symbol.for("v-ndc");function renderList(c,d,m,h){let u;const M=m&&m[h];if(isArray(c)||isString(c)){u=new Array(c.length);for(let e=0,n=c.length;e<n;e++)u[e]=d(c[e],e,void 0,M&&M[e])}else if(typeof c=="number"){u=new Array(c);for(let e=0;e<c;e++)u[e]=d(e+1,e,void 0,M&&M[e])}else if(isObject(c))if(c[Symbol.iterator])u=Array.from(c,(e,n)=>d(e,n,void 0,M&&M[n]));else{const e=Object.keys(c);u=new Array(e.length);for(let n=0,Y=e.length;n<Y;n++){const I=e[n];u[n]=d(c[I],I,n,M&&M[n])}}else u=[];return m&&(m[h]=u),u}function renderSlot(c,d,m={},h,u){if(currentRenderingInstance.isCE||currentRenderingInstance.parent&&isAsyncWrapper(currentRenderingInstance.parent)&&currentRenderingInstance.parent.isCE)return d!=="default"&&(m.name=d),createVNode("slot",m,h&&h());let M=c[d];M&&M._c&&(M._d=!1),openBlock();const e=M&&ensureValidVNode(M(m)),n=createBlock(Fragment,{key:m.key||e&&e.key||`_${d}`},e||(h?h():[]),e&&c._===1?64:-2);return!u&&n.scopeId&&(n.slotScopeIds=[n.scopeId+"-s"]),M&&M._c&&(M._d=!0),n}function ensureValidVNode(c){return c.some(d=>isVNode(d)?!(d.type===Comment||d.type===Fragment&&!ensureValidVNode(d.children)):!0)?c:null}const getPublicInstance=c=>c?isStatefulComponent(c)?getExposeProxy(c)||c.proxy:getPublicInstance(c.parent):null,publicPropertiesMap=extend(Object.create(null),{$:c=>c,$el:c=>c.vnode.el,$data:c=>c.data,$props:c=>c.props,$attrs:c=>c.attrs,$slots:c=>c.slots,$refs:c=>c.refs,$parent:c=>getPublicInstance(c.parent),$root:c=>getPublicInstance(c.root),$emit:c=>c.emit,$options:c=>resolveMergedOptions(c),$forceUpdate:c=>c.f||(c.f=()=>queueJob(c.update)),$nextTick:c=>c.n||(c.n=nextTick.bind(c.proxy)),$watch:c=>instanceWatch.bind(c)}),hasSetupBinding=(c,d)=>c!==EMPTY_OBJ&&!c.__isScriptSetup&&hasOwn(c,d),PublicInstanceProxyHandlers={get({_:c},d){const{ctx:m,setupState:h,data:u,props:M,accessCache:e,type:n,appContext:Y}=c;let I;if(d[0]!=="$"){const J=e[d];if(J!==void 0)switch(J){case 1:return h[d];case 2:return u[d];case 4:return m[d];case 3:return M[d]}else{if(hasSetupBinding(h,d))return e[d]=1,h[d];if(u!==EMPTY_OBJ&&hasOwn(u,d))return e[d]=2,u[d];if((I=c.propsOptions[0])&&hasOwn(I,d))return e[d]=3,M[d];if(m!==EMPTY_OBJ&&hasOwn(m,d))return e[d]=4,m[d];shouldCacheAccess&&(e[d]=0)}}const T=publicPropertiesMap[d];let o,C;if(T)return d==="$attrs"&&track(c,"get",d),T(c);if((o=n.__cssModules)&&(o=o[d]))return o;if(m!==EMPTY_OBJ&&hasOwn(m,d))return e[d]=4,m[d];if(C=Y.config.globalProperties,hasOwn(C,d))return C[d]},set({_:c},d,m){const{data:h,setupState:u,ctx:M}=c;return hasSetupBinding(u,d)?(u[d]=m,!0):h!==EMPTY_OBJ&&hasOwn(h,d)?(h[d]=m,!0):hasOwn(c.props,d)||d[0]==="$"&&d.slice(1)in c?!1:(M[d]=m,!0)},has({_:{data:c,setupState:d,accessCache:m,ctx:h,appContext:u,propsOptions:M}},e){let n;return!!m[e]||c!==EMPTY_OBJ&&hasOwn(c,e)||hasSetupBinding(d,e)||(n=M[0])&&hasOwn(n,e)||hasOwn(h,e)||hasOwn(publicPropertiesMap,e)||hasOwn(u.config.globalProperties,e)},defineProperty(c,d,m){return m.get!=null?c._.accessCache[d]=0:hasOwn(m,"value")&&this.set(c,d,m.value,null),Reflect.defineProperty(c,d,m)}};function useSlots(){return getContext().slots}function getContext(){const c=getCurrentInstance();return c.setupContext||(c.setupContext=createSetupContext(c))}function normalizePropsOrEmits(c){return isArray(c)?c.reduce((d,m)=>(d[m]=null,d),{}):c}let shouldCacheAccess=!0;function applyOptions(c){const d=resolveMergedOptions(c),m=c.proxy,h=c.ctx;shouldCacheAccess=!1,d.beforeCreate&&callHook(d.beforeCreate,c,"bc");const{data:u,computed:M,methods:e,watch:n,provide:Y,inject:I,created:T,beforeMount:o,mounted:C,beforeUpdate:J,updated:v,activated:Q,deactivated:$,beforeDestroy:q,beforeUnmount:x,destroyed:D,unmounted:r,render:w,renderTracked:j,renderTriggered:f,errorCaptured:sl,serverPrefetch:tl,expose:B,inheritAttrs:cl,components:al,directives:Tl,filters:nl}=d;if(I&&resolveInjections(I,h,null),e)for(const F in e){const H=e[F];isFunction(H)&&(h[F]=H.bind(m))}if(u){const F=u.call(m,m);isObject(F)&&(c.data=reactive(F))}if(shouldCacheAccess=!0,M)for(const F in M){const H=M[F],P=isFunction(H)?H.bind(m,m):isFunction(H.get)?H.get.bind(m,m):NOOP,g=!isFunction(H)&&isFunction(H.set)?H.set.bind(m):NOOP,K=computed({get:P,set:g});Object.defineProperty(h,F,{enumerable:!0,configurable:!0,get:()=>K.value,set:il=>K.value=il})}if(n)for(const F in n)createWatcher(n[F],h,m,F);if(Y){const F=isFunction(Y)?Y.call(m):Y;Reflect.ownKeys(F).forEach(H=>{provide(H,F[H])})}T&&callHook(T,c,"c");function E(F,H){isArray(H)?H.forEach(P=>F(P.bind(m))):H&&F(H.bind(m))}if(E(onBeforeMount,o),E(onMounted,C),E(onBeforeUpdate,J),E(onUpdated,v),E(onActivated,Q),E(onDeactivated,$),E(onErrorCaptured,sl),E(onRenderTracked,j),E(onRenderTriggered,f),E(onBeforeUnmount,x),E(onUnmounted,r),E(onServerPrefetch,tl),isArray(B))if(B.length){const F=c.exposed||(c.exposed={});B.forEach(H=>{Object.defineProperty(F,H,{get:()=>m[H],set:P=>m[H]=P})})}else c.exposed||(c.exposed={});w&&c.render===NOOP&&(c.render=w),cl!=null&&(c.inheritAttrs=cl),al&&(c.components=al),Tl&&(c.directives=Tl)}function resolveInjections(c,d,m=NOOP){isArray(c)&&(c=normalizeInject(c));for(const h in c){const u=c[h];let M;isObject(u)?"default"in u?M=inject(u.from||h,u.default,!0):M=inject(u.from||h):M=inject(u),isRef(M)?Object.defineProperty(d,h,{enumerable:!0,configurable:!0,get:()=>M.value,set:e=>M.value=e}):d[h]=M}}function callHook(c,d,m){callWithAsyncErrorHandling(isArray(c)?c.map(h=>h.bind(d.proxy)):c.bind(d.proxy),d,m)}function createWatcher(c,d,m,h){const u=h.includes(".")?createPathGetter(m,h):()=>m[h];if(isString(c)){const M=d[c];isFunction(M)&&watch(u,M)}else if(isFunction(c))watch(u,c.bind(m));else if(isObject(c))if(isArray(c))c.forEach(M=>createWatcher(M,d,m,h));else{const M=isFunction(c.handler)?c.handler.bind(m):d[c.handler];isFunction(M)&&watch(u,M,c)}}function resolveMergedOptions(c){const d=c.type,{mixins:m,extends:h}=d,{mixins:u,optionsCache:M,config:{optionMergeStrategies:e}}=c.appContext,n=M.get(d);let Y;return n?Y=n:!u.length&&!m&&!h?Y=d:(Y={},u.length&&u.forEach(I=>mergeOptions(Y,I,e,!0)),mergeOptions(Y,d,e)),isObject(d)&&M.set(d,Y),Y}function mergeOptions(c,d,m,h=!1){const{mixins:u,extends:M}=d;M&&mergeOptions(c,M,m,!0),u&&u.forEach(e=>mergeOptions(c,e,m,!0));for(const e in d)if(!(h&&e==="expose")){const n=internalOptionMergeStrats[e]||m&&m[e];c[e]=n?n(c[e],d[e]):d[e]}return c}const internalOptionMergeStrats={data:mergeDataFn,props:mergeEmitsOrPropsOptions,emits:mergeEmitsOrPropsOptions,methods:mergeObjectOptions,computed:mergeObjectOptions,beforeCreate:mergeAsArray,created:mergeAsArray,beforeMount:mergeAsArray,mounted:mergeAsArray,beforeUpdate:mergeAsArray,updated:mergeAsArray,beforeDestroy:mergeAsArray,beforeUnmount:mergeAsArray,destroyed:mergeAsArray,unmounted:mergeAsArray,activated:mergeAsArray,deactivated:mergeAsArray,errorCaptured:mergeAsArray,serverPrefetch:mergeAsArray,components:mergeObjectOptions,directives:mergeObjectOptions,watch:mergeWatchOptions,provide:mergeDataFn,inject:mergeInject};function mergeDataFn(c,d){return d?c?function(){return extend(isFunction(c)?c.call(this,this):c,isFunction(d)?d.call(this,this):d)}:d:c}function mergeInject(c,d){return mergeObjectOptions(normalizeInject(c),normalizeInject(d))}function normalizeInject(c){if(isArray(c)){const d={};for(let m=0;m<c.length;m++)d[c[m]]=c[m];return d}return c}function mergeAsArray(c,d){return c?[...new Set([].concat(c,d))]:d}function mergeObjectOptions(c,d){return c?extend(Object.create(null),c,d):d}function mergeEmitsOrPropsOptions(c,d){return c?isArray(c)&&isArray(d)?[...new Set([...c,...d])]:extend(Object.create(null),normalizePropsOrEmits(c),normalizePropsOrEmits(d??{})):d}function mergeWatchOptions(c,d){if(!c)return d;if(!d)return c;const m=extend(Object.create(null),c);for(const h in d)m[h]=mergeAsArray(c[h],d[h]);return m}function createAppContext(){return{app:null,config:{isNativeTag:NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let uid$1=0;function createAppAPI(c,d){return function(h,u=null){isFunction(h)||(h=extend({},h)),u!=null&&!isObject(u)&&(u=null);const M=createAppContext(),e=new Set;let n=!1;const Y=M.app={_uid:uid$1++,_component:h,_props:u,_container:null,_context:M,_instance:null,version,get config(){return M.config},set config(I){},use(I,...T){return e.has(I)||(I&&isFunction(I.install)?(e.add(I),I.install(Y,...T)):isFunction(I)&&(e.add(I),I(Y,...T))),Y},mixin(I){return M.mixins.includes(I)||M.mixins.push(I),Y},component(I,T){return T?(M.components[I]=T,Y):M.components[I]},directive(I,T){return T?(M.directives[I]=T,Y):M.directives[I]},mount(I,T,o){if(!n){const C=createVNode(h,u);return C.appContext=M,T&&d?d(C,I):c(C,I,o),n=!0,Y._container=I,I.__vue_app__=Y,getExposeProxy(C.component)||C.component.proxy}},unmount(){n&&(c(null,Y._container),delete Y._container.__vue_app__)},provide(I,T){return M.provides[I]=T,Y},runWithContext(I){currentApp=Y;try{return I()}finally{currentApp=null}}};return Y}}let currentApp=null;function provide(c,d){if(currentInstance){let m=currentInstance.provides;const h=currentInstance.parent&&currentInstance.parent.provides;h===m&&(m=currentInstance.provides=Object.create(h)),m[c]=d}}function inject(c,d,m=!1){const h=currentInstance||currentRenderingInstance;if(h||currentApp){const u=h?h.parent==null?h.vnode.appContext&&h.vnode.appContext.provides:h.parent.provides:currentApp._context.provides;if(u&&c in u)return u[c];if(arguments.length>1)return m&&isFunction(d)?d.call(h&&h.proxy):d}}function initProps(c,d,m,h=!1){const u={},M={};def(M,InternalObjectKey,1),c.propsDefaults=Object.create(null),setFullProps(c,d,u,M);for(const e in c.propsOptions[0])e in u||(u[e]=void 0);m?c.props=h?u:shallowReactive(u):c.type.props?c.props=u:c.props=M,c.attrs=M}function updateProps(c,d,m,h){const{props:u,attrs:M,vnode:{patchFlag:e}}=c,n=toRaw(u),[Y]=c.propsOptions;let I=!1;if((h||e>0)&&!(e&16)){if(e&8){const T=c.vnode.dynamicProps;for(let o=0;o<T.length;o++){let C=T[o];if(isEmitListener(c.emitsOptions,C))continue;const J=d[C];if(Y)if(hasOwn(M,C))J!==M[C]&&(M[C]=J,I=!0);else{const v=camelize(C);u[v]=resolvePropValue(Y,n,v,J,c,!1)}else J!==M[C]&&(M[C]=J,I=!0)}}}else{setFullProps(c,d,u,M)&&(I=!0);let T;for(const o in n)(!d||!hasOwn(d,o)&&((T=hyphenate(o))===o||!hasOwn(d,T)))&&(Y?m&&(m[o]!==void 0||m[T]!==void 0)&&(u[o]=resolvePropValue(Y,n,o,void 0,c,!0)):delete u[o]);if(M!==n)for(const o in M)(!d||!hasOwn(d,o))&&(delete M[o],I=!0)}I&&trigger(c,"set","$attrs")}function setFullProps(c,d,m,h){const[u,M]=c.propsOptions;let e=!1,n;if(d)for(let Y in d){if(isReservedProp(Y))continue;const I=d[Y];let T;u&&hasOwn(u,T=camelize(Y))?!M||!M.includes(T)?m[T]=I:(n||(n={}))[T]=I:isEmitListener(c.emitsOptions,Y)||(!(Y in h)||I!==h[Y])&&(h[Y]=I,e=!0)}if(M){const Y=toRaw(m),I=n||EMPTY_OBJ;for(let T=0;T<M.length;T++){const o=M[T];m[o]=resolvePropValue(u,Y,o,I[o],c,!hasOwn(I,o))}}return e}function resolvePropValue(c,d,m,h,u,M){const e=c[m];if(e!=null){const n=hasOwn(e,"default");if(n&&h===void 0){const Y=e.default;if(e.type!==Function&&!e.skipFactory&&isFunction(Y)){const{propsDefaults:I}=u;m in I?h=I[m]:(setCurrentInstance(u),h=I[m]=Y.call(null,d),unsetCurrentInstance())}else h=Y}e[0]&&(M&&!n?h=!1:e[1]&&(h===""||h===hyphenate(m))&&(h=!0))}return h}function normalizePropsOptions(c,d,m=!1){const h=d.propsCache,u=h.get(c);if(u)return u;const M=c.props,e={},n=[];let Y=!1;if(!isFunction(c)){const T=o=>{Y=!0;const[C,J]=normalizePropsOptions(o,d,!0);extend(e,C),J&&n.push(...J)};!m&&d.mixins.length&&d.mixins.forEach(T),c.extends&&T(c.extends),c.mixins&&c.mixins.forEach(T)}if(!M&&!Y)return isObject(c)&&h.set(c,EMPTY_ARR),EMPTY_ARR;if(isArray(M))for(let T=0;T<M.length;T++){const o=camelize(M[T]);validatePropName(o)&&(e[o]=EMPTY_OBJ)}else if(M)for(const T in M){const o=camelize(T);if(validatePropName(o)){const C=M[T],J=e[o]=isArray(C)||isFunction(C)?{type:C}:extend({},C);if(J){const v=getTypeIndex(Boolean,J.type),Q=getTypeIndex(String,J.type);J[0]=v>-1,J[1]=Q<0||v<Q,(v>-1||hasOwn(J,"default"))&&n.push(o)}}}const I=[e,n];return isObject(c)&&h.set(c,I),I}function validatePropName(c){return c[0]!=="$"}function getType(c){const d=c&&c.toString().match(/^\s*(function|class) (\w+)/);return d?d[2]:c===null?"null":""}function isSameType(c,d){return getType(c)===getType(d)}function getTypeIndex(c,d){return isArray(d)?d.findIndex(m=>isSameType(m,c)):isFunction(d)&&isSameType(d,c)?0:-1}const isInternalKey=c=>c[0]==="_"||c==="$stable",normalizeSlotValue=c=>isArray(c)?c.map(normalizeVNode):[normalizeVNode(c)],normalizeSlot=(c,d,m)=>{if(d._n)return d;const h=withCtx((...u)=>normalizeSlotValue(d(...u)),m);return h._c=!1,h},normalizeObjectSlots=(c,d,m)=>{const h=c._ctx;for(const u in c){if(isInternalKey(u))continue;const M=c[u];if(isFunction(M))d[u]=normalizeSlot(u,M,h);else if(M!=null){const e=normalizeSlotValue(M);d[u]=()=>e}}},normalizeVNodeSlots=(c,d)=>{const m=normalizeSlotValue(d);c.slots.default=()=>m},initSlots=(c,d)=>{if(c.vnode.shapeFlag&32){const m=d._;m?(c.slots=toRaw(d),def(d,"_",m)):normalizeObjectSlots(d,c.slots={})}else c.slots={},d&&normalizeVNodeSlots(c,d);def(c.slots,InternalObjectKey,1)},updateSlots=(c,d,m)=>{const{vnode:h,slots:u}=c;let M=!0,e=EMPTY_OBJ;if(h.shapeFlag&32){const n=d._;n?m&&n===1?M=!1:(extend(u,d),!m&&n===1&&delete u._):(M=!d.$stable,normalizeObjectSlots(d,u)),e=d}else d&&(normalizeVNodeSlots(c,d),e={default:1});if(M)for(const n in u)!isInternalKey(n)&&!(n in e)&&delete u[n]};function setRef(c,d,m,h,u=!1){if(isArray(c)){c.forEach((C,J)=>setRef(C,d&&(isArray(d)?d[J]:d),m,h,u));return}if(isAsyncWrapper(h)&&!u)return;const M=h.shapeFlag&4?getExposeProxy(h.component)||h.component.proxy:h.el,e=u?null:M,{i:n,r:Y}=c,I=d&&d.r,T=n.refs===EMPTY_OBJ?n.refs={}:n.refs,o=n.setupState;if(I!=null&&I!==Y&&(isString(I)?(T[I]=null,hasOwn(o,I)&&(o[I]=null)):isRef(I)&&(I.value=null)),isFunction(Y))callWithErrorHandling(Y,n,12,[e,T]);else{const C=isString(Y),J=isRef(Y);if(C||J){const v=()=>{if(c.f){const Q=C?hasOwn(o,Y)?o[Y]:T[Y]:Y.value;u?isArray(Q)&&remove(Q,M):isArray(Q)?Q.includes(M)||Q.push(M):C?(T[Y]=[M],hasOwn(o,Y)&&(o[Y]=T[Y])):(Y.value=[M],c.k&&(T[c.k]=Y.value))}else C?(T[Y]=e,hasOwn(o,Y)&&(o[Y]=e)):J&&(Y.value=e,c.k&&(T[c.k]=e))};e?(v.id=-1,queuePostRenderEffect(v,m)):v()}}}const queuePostRenderEffect=queueEffectWithSuspense;function createRenderer(c){return baseCreateRenderer(c)}function baseCreateRenderer(c,d){const m=getGlobalThis();m.__VUE__=!0;const{insert:h,remove:u,patchProp:M,createElement:e,createText:n,createComment:Y,setText:I,setElementText:T,parentNode:o,nextSibling:C,setScopeId:J=NOOP,insertStaticContent:v}=c,Q=(ll,V,O,A=null,_=null,dl=null,Ml=!1,Yl=null,Vl=!!V.dynamicChildren)=>{if(ll===V)return;ll&&!isSameVNodeType(ll,V)&&(A=yl(ll),il(ll,_,dl,!0),ll=null),V.patchFlag===-2&&(Vl=!1,V.dynamicChildren=null);const{type:Ll,ref:ol,shapeFlag:zl}=V;switch(Ll){case Text:$(ll,V,O,A);break;case Comment:q(ll,V,O,A);break;case Static:ll==null&&x(V,O,A,Ml);break;case Fragment:al(ll,V,O,A,_,dl,Ml,Yl,Vl);break;default:zl&1?w(ll,V,O,A,_,dl,Ml,Yl,Vl):zl&6?Tl(ll,V,O,A,_,dl,Ml,Yl,Vl):(zl&64||zl&128)&&Ll.process(ll,V,O,A,_,dl,Ml,Yl,Vl,Wl)}ol!=null&&_&&setRef(ol,ll&&ll.ref,dl,V||ll,!V)},$=(ll,V,O,A)=>{if(ll==null)h(V.el=n(V.children),O,A);else{const _=V.el=ll.el;V.children!==ll.children&&I(_,V.children)}},q=(ll,V,O,A)=>{ll==null?h(V.el=Y(V.children||""),O,A):V.el=ll.el},x=(ll,V,O,A)=>{[ll.el,ll.anchor]=v(ll.children,V,O,A,ll.el,ll.anchor)},D=({el:ll,anchor:V},O,A)=>{let _;for(;ll&&ll!==V;)_=C(ll),h(ll,O,A),ll=_;h(V,O,A)},r=({el:ll,anchor:V})=>{let O;for(;ll&&ll!==V;)O=C(ll),u(ll),ll=O;u(V)},w=(ll,V,O,A,_,dl,Ml,Yl,Vl)=>{Ml=Ml||V.type==="svg",ll==null?j(V,O,A,_,dl,Ml,Yl,Vl):tl(ll,V,_,dl,Ml,Yl,Vl)},j=(ll,V,O,A,_,dl,Ml,Yl)=>{let Vl,Ll;const{type:ol,props:zl,shapeFlag:Il,transition:Sl,dirs:Jl}=ll;if(Vl=ll.el=e(ll.type,dl,zl&&zl.is,zl),Il&8?T(Vl,ll.children):Il&16&&sl(ll.children,Vl,null,A,_,dl&&ol!=="foreignObject",Ml,Yl),Jl&&invokeDirectiveHook(ll,null,A,"created"),f(Vl,ll,ll.scopeId,Ml,A),zl){for(const el in zl)el!=="value"&&!isReservedProp(el)&&M(Vl,el,null,zl[el],dl,ll.children,A,_,Nl);"value"in zl&&M(Vl,"value",null,zl.value),(Ll=zl.onVnodeBeforeMount)&&invokeVNodeHook(Ll,A,ll)}Jl&&invokeDirectiveHook(ll,null,A,"beforeMount");const Cl=(!_||_&&!_.pendingBranch)&&Sl&&!Sl.persisted;Cl&&Sl.beforeEnter(Vl),h(Vl,V,O),((Ll=zl&&zl.onVnodeMounted)||Cl||Jl)&&queuePostRenderEffect(()=>{Ll&&invokeVNodeHook(Ll,A,ll),Cl&&Sl.enter(Vl),Jl&&invokeDirectiveHook(ll,null,A,"mounted")},_)},f=(ll,V,O,A,_)=>{if(O&&J(ll,O),A)for(let dl=0;dl<A.length;dl++)J(ll,A[dl]);if(_){let dl=_.subTree;if(V===dl){const Ml=_.vnode;f(ll,Ml,Ml.scopeId,Ml.slotScopeIds,_.parent)}}},sl=(ll,V,O,A,_,dl,Ml,Yl,Vl=0)=>{for(let Ll=Vl;Ll<ll.length;Ll++){const ol=ll[Ll]=Yl?cloneIfMounted(ll[Ll]):normalizeVNode(ll[Ll]);Q(null,ol,V,O,A,_,dl,Ml,Yl)}},tl=(ll,V,O,A,_,dl,Ml)=>{const Yl=V.el=ll.el;let{patchFlag:Vl,dynamicChildren:Ll,dirs:ol}=V;Vl|=ll.patchFlag&16;const zl=ll.props||EMPTY_OBJ,Il=V.props||EMPTY_OBJ;let Sl;O&&toggleRecurse(O,!1),(Sl=Il.onVnodeBeforeUpdate)&&invokeVNodeHook(Sl,O,V,ll),ol&&invokeDirectiveHook(V,ll,O,"beforeUpdate"),O&&toggleRecurse(O,!0);const Jl=_&&V.type!=="foreignObject";if(Ll?B(ll.dynamicChildren,Ll,Yl,O,A,Jl,dl):Ml||H(ll,V,Yl,null,O,A,Jl,dl,!1),Vl>0){if(Vl&16)cl(Yl,V,zl,Il,O,A,_);else if(Vl&2&&zl.class!==Il.class&&M(Yl,"class",null,Il.class,_),Vl&4&&M(Yl,"style",zl.style,Il.style,_),Vl&8){const Cl=V.dynamicProps;for(let el=0;el<Cl.length;el++){const wl=Cl[el],gl=zl[wl],Hl=Il[wl];(Hl!==gl||wl==="value")&&M(Yl,wl,gl,Hl,_,ll.children,O,A,Nl)}}Vl&1&&ll.children!==V.children&&T(Yl,V.children)}else!Ml&&Ll==null&&cl(Yl,V,zl,Il,O,A,_);((Sl=Il.onVnodeUpdated)||ol)&&queuePostRenderEffect(()=>{Sl&&invokeVNodeHook(Sl,O,V,ll),ol&&invokeDirectiveHook(V,ll,O,"updated")},A)},B=(ll,V,O,A,_,dl,Ml)=>{for(let Yl=0;Yl<V.length;Yl++){const Vl=ll[Yl],Ll=V[Yl],ol=Vl.el&&(Vl.type===Fragment||!isSameVNodeType(Vl,Ll)||Vl.shapeFlag&70)?o(Vl.el):O;Q(Vl,Ll,ol,null,A,_,dl,Ml,!0)}},cl=(ll,V,O,A,_,dl,Ml)=>{if(O!==A){if(O!==EMPTY_OBJ)for(const Yl in O)!isReservedProp(Yl)&&!(Yl in A)&&M(ll,Yl,O[Yl],null,Ml,V.children,_,dl,Nl);for(const Yl in A){if(isReservedProp(Yl))continue;const Vl=A[Yl],Ll=O[Yl];Vl!==Ll&&Yl!=="value"&&M(ll,Yl,Ll,Vl,Ml,V.children,_,dl,Nl)}"value"in A&&M(ll,"value",O.value,A.value)}},al=(ll,V,O,A,_,dl,Ml,Yl,Vl)=>{const Ll=V.el=ll?ll.el:n(""),ol=V.anchor=ll?ll.anchor:n("");let{patchFlag:zl,dynamicChildren:Il,slotScopeIds:Sl}=V;Sl&&(Yl=Yl?Yl.concat(Sl):Sl),ll==null?(h(Ll,O,A),h(ol,O,A),sl(V.children,O,ol,_,dl,Ml,Yl,Vl)):zl>0&&zl&64&&Il&&ll.dynamicChildren?(B(ll.dynamicChildren,Il,O,_,dl,Ml,Yl),(V.key!=null||_&&V===_.subTree)&&traverseStaticChildren(ll,V,!0)):H(ll,V,O,ol,_,dl,Ml,Yl,Vl)},Tl=(ll,V,O,A,_,dl,Ml,Yl,Vl)=>{V.slotScopeIds=Yl,ll==null?V.shapeFlag&512?_.ctx.activate(V,O,A,Ml,Vl):nl(V,O,A,_,dl,Ml,Vl):Rl(ll,V,Vl)},nl=(ll,V,O,A,_,dl,Ml)=>{const Yl=ll.component=createComponentInstance(ll,A,_);if(isKeepAlive(ll)&&(Yl.ctx.renderer=Wl),setupComponent(Yl),Yl.asyncDep){if(_&&_.registerDep(Yl,E),!ll.el){const Vl=Yl.subTree=createVNode(Comment);q(null,Vl,V,O)}return}E(Yl,ll,V,O,_,dl,Ml)},Rl=(ll,V,O)=>{const A=V.component=ll.component;if(shouldUpdateComponent(ll,V,O))if(A.asyncDep&&!A.asyncResolved){F(A,V,O);return}else A.next=V,invalidateJob(A.update),A.update();else V.el=ll.el,A.vnode=V},E=(ll,V,O,A,_,dl,Ml)=>{const Yl=()=>{if(ll.isMounted){let{next:ol,bu:zl,u:Il,parent:Sl,vnode:Jl}=ll,Cl=ol,el;toggleRecurse(ll,!1),ol?(ol.el=Jl.el,F(ll,ol,Ml)):ol=Jl,zl&&invokeArrayFns(zl),(el=ol.props&&ol.props.onVnodeBeforeUpdate)&&invokeVNodeHook(el,Sl,ol,Jl),toggleRecurse(ll,!0);const wl=renderComponentRoot(ll),gl=ll.subTree;ll.subTree=wl,Q(gl,wl,o(gl.el),yl(gl),ll,_,dl),ol.el=wl.el,Cl===null&&updateHOCHostEl(ll,wl.el),Il&&queuePostRenderEffect(Il,_),(el=ol.props&&ol.props.onVnodeUpdated)&&queuePostRenderEffect(()=>invokeVNodeHook(el,Sl,ol,Jl),_)}else{let ol;const{el:zl,props:Il}=V,{bm:Sl,m:Jl,parent:Cl}=ll,el=isAsyncWrapper(V);if(toggleRecurse(ll,!1),Sl&&invokeArrayFns(Sl),!el&&(ol=Il&&Il.onVnodeBeforeMount)&&invokeVNodeHook(ol,Cl,V),toggleRecurse(ll,!0),zl&&Ul){const wl=()=>{ll.subTree=renderComponentRoot(ll),Ul(zl,ll.subTree,ll,_,null)};el?V.type.__asyncLoader().then(()=>!ll.isUnmounted&&wl()):wl()}else{const wl=ll.subTree=renderComponentRoot(ll);Q(null,wl,O,A,ll,_,dl),V.el=wl.el}if(Jl&&queuePostRenderEffect(Jl,_),!el&&(ol=Il&&Il.onVnodeMounted)){const wl=V;queuePostRenderEffect(()=>invokeVNodeHook(ol,Cl,wl),_)}(V.shapeFlag&256||Cl&&isAsyncWrapper(Cl.vnode)&&Cl.vnode.shapeFlag&256)&&ll.a&&queuePostRenderEffect(ll.a,_),ll.isMounted=!0,V=O=A=null}},Vl=ll.effect=new ReactiveEffect(Yl,()=>queueJob(Ll),ll.scope),Ll=ll.update=()=>Vl.run();Ll.id=ll.uid,toggleRecurse(ll,!0),Ll()},F=(ll,V,O)=>{V.component=ll;const A=ll.vnode.props;ll.vnode=V,ll.next=null,updateProps(ll,V.props,A,O),updateSlots(ll,V.children,O),pauseTracking(),flushPreFlushCbs(),resetTracking()},H=(ll,V,O,A,_,dl,Ml,Yl,Vl=!1)=>{const Ll=ll&&ll.children,ol=ll?ll.shapeFlag:0,zl=V.children,{patchFlag:Il,shapeFlag:Sl}=V;if(Il>0){if(Il&128){g(Ll,zl,O,A,_,dl,Ml,Yl,Vl);return}else if(Il&256){P(Ll,zl,O,A,_,dl,Ml,Yl,Vl);return}}Sl&8?(ol&16&&Nl(Ll,_,dl),zl!==Ll&&T(O,zl)):ol&16?Sl&16?g(Ll,zl,O,A,_,dl,Ml,Yl,Vl):Nl(Ll,_,dl,!0):(ol&8&&T(O,""),Sl&16&&sl(zl,O,A,_,dl,Ml,Yl,Vl))},P=(ll,V,O,A,_,dl,Ml,Yl,Vl)=>{ll=ll||EMPTY_ARR,V=V||EMPTY_ARR;const Ll=ll.length,ol=V.length,zl=Math.min(Ll,ol);let Il;for(Il=0;Il<zl;Il++){const Sl=V[Il]=Vl?cloneIfMounted(V[Il]):normalizeVNode(V[Il]);Q(ll[Il],Sl,O,null,_,dl,Ml,Yl,Vl)}Ll>ol?Nl(ll,_,dl,!0,!1,zl):sl(V,O,A,_,dl,Ml,Yl,Vl,zl)},g=(ll,V,O,A,_,dl,Ml,Yl,Vl)=>{let Ll=0;const ol=V.length;let zl=ll.length-1,Il=ol-1;for(;Ll<=zl&&Ll<=Il;){const Sl=ll[Ll],Jl=V[Ll]=Vl?cloneIfMounted(V[Ll]):normalizeVNode(V[Ll]);if(isSameVNodeType(Sl,Jl))Q(Sl,Jl,O,null,_,dl,Ml,Yl,Vl);else break;Ll++}for(;Ll<=zl&&Ll<=Il;){const Sl=ll[zl],Jl=V[Il]=Vl?cloneIfMounted(V[Il]):normalizeVNode(V[Il]);if(isSameVNodeType(Sl,Jl))Q(Sl,Jl,O,null,_,dl,Ml,Yl,Vl);else break;zl--,Il--}if(Ll>zl){if(Ll<=Il){const Sl=Il+1,Jl=Sl<ol?V[Sl].el:A;for(;Ll<=Il;)Q(null,V[Ll]=Vl?cloneIfMounted(V[Ll]):normalizeVNode(V[Ll]),O,Jl,_,dl,Ml,Yl,Vl),Ll++}}else if(Ll>Il)for(;Ll<=zl;)il(ll[Ll],_,dl,!0),Ll++;else{const Sl=Ll,Jl=Ll,Cl=new Map;for(Ll=Jl;Ll<=Il;Ll++){const Ql=V[Ll]=Vl?cloneIfMounted(V[Ll]):normalizeVNode(V[Ll]);Ql.key!=null&&Cl.set(Ql.key,Ll)}let el,wl=0;const gl=Il-Jl+1;let Hl=!1,ZZ=0;const vl=new Array(gl);for(Ll=0;Ll<gl;Ll++)vl[Ll]=0;for(Ll=Sl;Ll<=zl;Ll++){const Ql=ll[Ll];if(wl>=gl){il(Ql,_,dl,!0);continue}let Pl;if(Ql.key!=null)Pl=Cl.get(Ql.key);else for(el=Jl;el<=Il;el++)if(vl[el-Jl]===0&&isSameVNodeType(Ql,V[el])){Pl=el;break}Pl===void 0?il(Ql,_,dl,!0):(vl[Pl-Jl]=Ll+1,Pl>=ZZ?ZZ=Pl:Hl=!0,Q(Ql,V[Pl],O,null,_,dl,Ml,Yl,Vl),wl++)}const xl=Hl?getSequence(vl):EMPTY_ARR;for(el=xl.length-1,Ll=gl-1;Ll>=0;Ll--){const Ql=Jl+Ll,Pl=V[Ql],Al=Ql+1<ol?V[Ql+1].el:A;vl[Ll]===0?Q(null,Pl,O,Al,_,dl,Ml,Yl,Vl):Hl&&(el<0||Ll!==xl[el]?K(Pl,O,Al,2):el--)}}},K=(ll,V,O,A,_=null)=>{const{el:dl,type:Ml,transition:Yl,children:Vl,shapeFlag:Ll}=ll;if(Ll&6){K(ll.component.subTree,V,O,A);return}if(Ll&128){ll.suspense.move(V,O,A);return}if(Ll&64){Ml.move(ll,V,O,Wl);return}if(Ml===Fragment){h(dl,V,O);for(let zl=0;zl<Vl.length;zl++)K(Vl[zl],V,O,A);h(ll.anchor,V,O);return}if(Ml===Static){D(ll,V,O);return}if(A!==2&&Ll&1&&Yl)if(A===0)Yl.beforeEnter(dl),h(dl,V,O),queuePostRenderEffect(()=>Yl.enter(dl),_);else{const{leave:zl,delayLeave:Il,afterLeave:Sl}=Yl,Jl=()=>h(dl,V,O),Cl=()=>{zl(dl,()=>{Jl(),Sl&&Sl()})};Il?Il(dl,Jl,Cl):Cl()}else h(dl,V,O)},il=(ll,V,O,A=!1,_=!1)=>{const{type:dl,props:Ml,ref:Yl,children:Vl,dynamicChildren:Ll,shapeFlag:ol,patchFlag:zl,dirs:Il}=ll;if(Yl!=null&&setRef(Yl,null,O,ll,!0),ol&256){V.ctx.deactivate(ll);return}const Sl=ol&1&&Il,Jl=!isAsyncWrapper(ll);let Cl;if(Jl&&(Cl=Ml&&Ml.onVnodeBeforeUnmount)&&invokeVNodeHook(Cl,V,ll),ol&6)ul(ll.component,O,A);else{if(ol&128){ll.suspense.unmount(O,A);return}Sl&&invokeDirectiveHook(ll,null,V,"beforeUnmount"),ol&64?ll.type.remove(ll,V,O,_,Wl,A):Ll&&(dl!==Fragment||zl>0&&zl&64)?Nl(Ll,V,O,!1,!0):(dl===Fragment&&zl&384||!_&&ol&16)&&Nl(Vl,V,O),A&&ml(ll)}(Jl&&(Cl=Ml&&Ml.onVnodeUnmounted)||Sl)&&queuePostRenderEffect(()=>{Cl&&invokeVNodeHook(Cl,V,ll),Sl&&invokeDirectiveHook(ll,null,V,"unmounted")},O)},ml=ll=>{const{type:V,el:O,anchor:A,transition:_}=ll;if(V===Fragment){Gl(O,A);return}if(V===Static){r(ll);return}const dl=()=>{u(O),_&&!_.persisted&&_.afterLeave&&_.afterLeave()};if(ll.shapeFlag&1&&_&&!_.persisted){const{leave:Ml,delayLeave:Yl}=_,Vl=()=>Ml(O,dl);Yl?Yl(ll.el,dl,Vl):Vl()}else dl()},Gl=(ll,V)=>{let O;for(;ll!==V;)O=C(ll),u(ll),ll=O;u(V)},ul=(ll,V,O)=>{const{bum:A,scope:_,update:dl,subTree:Ml,um:Yl}=ll;A&&invokeArrayFns(A),_.stop(),dl&&(dl.active=!1,il(Ml,ll,V,O)),Yl&&queuePostRenderEffect(Yl,V),queuePostRenderEffect(()=>{ll.isUnmounted=!0},V),V&&V.pendingBranch&&!V.isUnmounted&&ll.asyncDep&&!ll.asyncResolved&&ll.suspenseId===V.pendingId&&(V.deps--,V.deps===0&&V.resolve())},Nl=(ll,V,O,A=!1,_=!1,dl=0)=>{for(let Ml=dl;Ml<ll.length;Ml++)il(ll[Ml],V,O,A,_)},yl=ll=>ll.shapeFlag&6?yl(ll.component.subTree):ll.shapeFlag&128?ll.suspense.next():C(ll.anchor||ll.el),Xl=(ll,V,O)=>{ll==null?V._vnode&&il(V._vnode,null,null,!0):Q(V._vnode||null,ll,V,null,null,null,O),flushPreFlushCbs(),flushPostFlushCbs(),V._vnode=ll},Wl={p:Q,um:il,m:K,r:ml,mt:nl,mc:sl,pc:H,pbc:B,n:yl,o:c};let Dl,Ul;return d&&([Dl,Ul]=d(Wl)),{render:Xl,hydrate:Dl,createApp:createAppAPI(Xl,Dl)}}function toggleRecurse({effect:c,update:d},m){c.allowRecurse=d.allowRecurse=m}function traverseStaticChildren(c,d,m=!1){const h=c.children,u=d.children;if(isArray(h)&&isArray(u))for(let M=0;M<h.length;M++){const e=h[M];let n=u[M];n.shapeFlag&1&&!n.dynamicChildren&&((n.patchFlag<=0||n.patchFlag===32)&&(n=u[M]=cloneIfMounted(u[M]),n.el=e.el),m||traverseStaticChildren(e,n)),n.type===Text&&(n.el=e.el)}}function getSequence(c){const d=c.slice(),m=[0];let h,u,M,e,n;const Y=c.length;for(h=0;h<Y;h++){const I=c[h];if(I!==0){if(u=m[m.length-1],c[u]<I){d[h]=u,m.push(h);continue}for(M=0,e=m.length-1;M<e;)n=M+e>>1,c[m[n]]<I?M=n+1:e=n;I<c[m[M]]&&(M>0&&(d[h]=m[M-1]),m[M]=h)}}for(M=m.length,e=m[M-1];M-- >0;)m[M]=e,e=d[e];return m}const isTeleport=c=>c.__isTeleport,Fragment=Symbol.for("v-fgt"),Text=Symbol.for("v-txt"),Comment=Symbol.for("v-cmt"),Static=Symbol.for("v-stc"),blockStack=[];let currentBlock=null;function openBlock(c=!1){blockStack.push(currentBlock=c?null:[])}function closeBlock(){blockStack.pop(),currentBlock=blockStack[blockStack.length-1]||null}let isBlockTreeEnabled=1;function setBlockTracking(c){isBlockTreeEnabled+=c}function setupBlock(c){return c.dynamicChildren=isBlockTreeEnabled>0?currentBlock||EMPTY_ARR:null,closeBlock(),isBlockTreeEnabled>0&&currentBlock&&currentBlock.push(c),c}function createElementBlock(c,d,m,h,u,M){return setupBlock(createBaseVNode(c,d,m,h,u,M,!0))}function createBlock(c,d,m,h,u){return setupBlock(createVNode(c,d,m,h,u,!0))}function isVNode(c){return c?c.__v_isVNode===!0:!1}function isSameVNodeType(c,d){return c.type===d.type&&c.key===d.key}const InternalObjectKey="__vInternal",normalizeKey=({key:c})=>c??null,normalizeRef=({ref:c,ref_key:d,ref_for:m})=>(typeof c=="number"&&(c=""+c),c!=null?isString(c)||isRef(c)||isFunction(c)?{i:currentRenderingInstance,r:c,k:d,f:!!m}:c:null);function createBaseVNode(c,d=null,m=null,h=0,u=null,M=c===Fragment?0:1,e=!1,n=!1){const Y={__v_isVNode:!0,__v_skip:!0,type:c,props:d,key:d&&normalizeKey(d),ref:d&&normalizeRef(d),scopeId:currentScopeId,slotScopeIds:null,children:m,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:M,patchFlag:h,dynamicProps:u,dynamicChildren:null,appContext:null,ctx:currentRenderingInstance};return n?(normalizeChildren(Y,m),M&128&&c.normalize(Y)):m&&(Y.shapeFlag|=isString(m)?8:16),isBlockTreeEnabled>0&&!e&&currentBlock&&(Y.patchFlag>0||M&6)&&Y.patchFlag!==32&&currentBlock.push(Y),Y}const createVNode=_createVNode;function _createVNode(c,d=null,m=null,h=0,u=null,M=!1){if((!c||c===NULL_DYNAMIC_COMPONENT)&&(c=Comment),isVNode(c)){const n=cloneVNode(c,d,!0);return m&&normalizeChildren(n,m),isBlockTreeEnabled>0&&!M&&currentBlock&&(n.shapeFlag&6?currentBlock[currentBlock.indexOf(c)]=n:currentBlock.push(n)),n.patchFlag|=-2,n}if(isClassComponent(c)&&(c=c.__vccOpts),d){d=guardReactiveProps(d);let{class:n,style:Y}=d;n&&!isString(n)&&(d.class=normalizeClass(n)),isObject(Y)&&(isProxy(Y)&&!isArray(Y)&&(Y=extend({},Y)),d.style=normalizeStyle(Y))}const e=isString(c)?1:isSuspense(c)?128:isTeleport(c)?64:isObject(c)?4:isFunction(c)?2:0;return createBaseVNode(c,d,m,h,u,e,M,!0)}function guardReactiveProps(c){return c?isProxy(c)||InternalObjectKey in c?extend({},c):c:null}function cloneVNode(c,d,m=!1){const{props:h,ref:u,patchFlag:M,children:e}=c,n=d?mergeProps(h||{},d):h;return{__v_isVNode:!0,__v_skip:!0,type:c.type,props:n,key:n&&normalizeKey(n),ref:d&&d.ref?m&&u?isArray(u)?u.concat(normalizeRef(d)):[u,normalizeRef(d)]:normalizeRef(d):u,scopeId:c.scopeId,slotScopeIds:c.slotScopeIds,children:e,target:c.target,targetAnchor:c.targetAnchor,staticCount:c.staticCount,shapeFlag:c.shapeFlag,patchFlag:d&&c.type!==Fragment?M===-1?16:M|16:M,dynamicProps:c.dynamicProps,dynamicChildren:c.dynamicChildren,appContext:c.appContext,dirs:c.dirs,transition:c.transition,component:c.component,suspense:c.suspense,ssContent:c.ssContent&&cloneVNode(c.ssContent),ssFallback:c.ssFallback&&cloneVNode(c.ssFallback),el:c.el,anchor:c.anchor,ctx:c.ctx,ce:c.ce}}function createTextVNode(c=" ",d=0){return createVNode(Text,null,c,d)}function createCommentVNode(c="",d=!1){return d?(openBlock(),createBlock(Comment,null,c)):createVNode(Comment,null,c)}function normalizeVNode(c){return c==null||typeof c=="boolean"?createVNode(Comment):isArray(c)?createVNode(Fragment,null,c.slice()):typeof c=="object"?cloneIfMounted(c):createVNode(Text,null,String(c))}function cloneIfMounted(c){return c.el===null&&c.patchFlag!==-1||c.memo?c:cloneVNode(c)}function normalizeChildren(c,d){let m=0;const{shapeFlag:h}=c;if(d==null)d=null;else if(isArray(d))m=16;else if(typeof d=="object")if(h&65){const u=d.default;u&&(u._c&&(u._d=!1),normalizeChildren(c,u()),u._c&&(u._d=!0));return}else{m=32;const u=d._;!u&&!(InternalObjectKey in d)?d._ctx=currentRenderingInstance:u===3&&currentRenderingInstance&&(currentRenderingInstance.slots._===1?d._=1:(d._=2,c.patchFlag|=1024))}else isFunction(d)?(d={default:d,_ctx:currentRenderingInstance},m=32):(d=String(d),h&64?(m=16,d=[createTextVNode(d)]):m=8);c.children=d,c.shapeFlag|=m}function mergeProps(...c){const d={};for(let m=0;m<c.length;m++){const h=c[m];for(const u in h)if(u==="class")d.class!==h.class&&(d.class=normalizeClass([d.class,h.class]));else if(u==="style")d.style=normalizeStyle([d.style,h.style]);else if(isOn(u)){const M=d[u],e=h[u];e&&M!==e&&!(isArray(M)&&M.includes(e))&&(d[u]=M?[].concat(M,e):e)}else u!==""&&(d[u]=h[u])}return d}function invokeVNodeHook(c,d,m,h=null){callWithAsyncErrorHandling(c,d,7,[m,h])}const emptyAppContext=createAppContext();let uid=0;function createComponentInstance(c,d,m){const h=c.type,u=(d?d.appContext:c.appContext)||emptyAppContext,M={uid:uid++,vnode:c,type:h,parent:d,appContext:u,root:null,next:null,subTree:null,effect:null,update:null,scope:new EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:d?d.provides:Object.create(u.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:normalizePropsOptions(h,u),emitsOptions:normalizeEmitsOptions(h,u),emit:null,emitted:null,propsDefaults:EMPTY_OBJ,inheritAttrs:h.inheritAttrs,ctx:EMPTY_OBJ,data:EMPTY_OBJ,props:EMPTY_OBJ,attrs:EMPTY_OBJ,slots:EMPTY_OBJ,refs:EMPTY_OBJ,setupState:EMPTY_OBJ,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:m,suspenseId:m?m.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return M.ctx={_:M},M.root=d?d.root:M,M.emit=emit.bind(null,M),c.ce&&c.ce(M),M}let currentInstance=null;const getCurrentInstance=()=>currentInstance||currentRenderingInstance;let internalSetCurrentInstance,globalCurrentInstanceSetters,settersKey="__VUE_INSTANCE_SETTERS__";(globalCurrentInstanceSetters=getGlobalThis()[settersKey])||(globalCurrentInstanceSetters=getGlobalThis()[settersKey]=[]),globalCurrentInstanceSetters.push(c=>currentInstance=c),internalSetCurrentInstance=c=>{globalCurrentInstanceSetters.length>1?globalCurrentInstanceSetters.forEach(d=>d(c)):globalCurrentInstanceSetters[0](c)};const setCurrentInstance=c=>{internalSetCurrentInstance(c),c.scope.on()},unsetCurrentInstance=()=>{currentInstance&&currentInstance.scope.off(),internalSetCurrentInstance(null)};function isStatefulComponent(c){return c.vnode.shapeFlag&4}let isInSSRComponentSetup=!1;function setupComponent(c,d=!1){isInSSRComponentSetup=d;const{props:m,children:h}=c.vnode,u=isStatefulComponent(c);initProps(c,m,u,d),initSlots(c,h);const M=u?setupStatefulComponent(c,d):void 0;return isInSSRComponentSetup=!1,M}function setupStatefulComponent(c,d){const m=c.type;c.accessCache=Object.create(null),c.proxy=markRaw(new Proxy(c.ctx,PublicInstanceProxyHandlers));const{setup:h}=m;if(h){const u=c.setupContext=h.length>1?createSetupContext(c):null;setCurrentInstance(c),pauseTracking();const M=callWithErrorHandling(h,c,0,[c.props,u]);if(resetTracking(),unsetCurrentInstance(),isPromise(M)){if(M.then(unsetCurrentInstance,unsetCurrentInstance),d)return M.then(e=>{handleSetupResult(c,e,d)}).catch(e=>{handleError(e,c,0)});c.asyncDep=M}else handleSetupResult(c,M,d)}else finishComponentSetup(c,d)}function handleSetupResult(c,d,m){isFunction(d)?c.type.__ssrInlineRender?c.ssrRender=d:c.render=d:isObject(d)&&(c.setupState=proxyRefs(d)),finishComponentSetup(c,m)}let compile;function finishComponentSetup(c,d,m){const h=c.type;if(!c.render){if(!d&&compile&&!h.render){const u=h.template||resolveMergedOptions(c).template;if(u){const{isCustomElement:M,compilerOptions:e}=c.appContext.config,{delimiters:n,compilerOptions:Y}=h,I=extend(extend({isCustomElement:M,delimiters:n},e),Y);h.render=compile(u,I)}}c.render=h.render||NOOP}setCurrentInstance(c),pauseTracking(),applyOptions(c),resetTracking(),unsetCurrentInstance()}function getAttrsProxy(c){return c.attrsProxy||(c.attrsProxy=new Proxy(c.attrs,{get(d,m){return track(c,"get","$attrs"),d[m]}}))}function createSetupContext(c){const d=m=>{c.exposed=m||{}};return{get attrs(){return getAttrsProxy(c)},slots:c.slots,emit:c.emit,expose:d}}function getExposeProxy(c){if(c.exposed)return c.exposeProxy||(c.exposeProxy=new Proxy(proxyRefs(markRaw(c.exposed)),{get(d,m){if(m in d)return d[m];if(m in publicPropertiesMap)return publicPropertiesMap[m](c)},has(d,m){return m in d||m in publicPropertiesMap}}))}function isClassComponent(c){return isFunction(c)&&"__vccOpts"in c}const computed=(c,d)=>computed$1(c,d,isInSSRComponentSetup),ssrContextKey=Symbol.for("v-scx"),useSSRContext=()=>inject(ssrContextKey),version="3.3.4",svgNS="http://www.w3.org/2000/svg",doc=typeof document<"u"?document:null,templateContainer=doc&&doc.createElement("template"),nodeOps={insert:(c,d,m)=>{d.insertBefore(c,m||null)},remove:c=>{const d=c.parentNode;d&&d.removeChild(c)},createElement:(c,d,m,h)=>{const u=d?doc.createElementNS(svgNS,c):doc.createElement(c,m?{is:m}:void 0);return c==="select"&&h&&h.multiple!=null&&u.setAttribute("multiple",h.multiple),u},createText:c=>doc.createTextNode(c),createComment:c=>doc.createComment(c),setText:(c,d)=>{c.nodeValue=d},setElementText:(c,d)=>{c.textContent=d},parentNode:c=>c.parentNode,nextSibling:c=>c.nextSibling,querySelector:c=>doc.querySelector(c),setScopeId(c,d){c.setAttribute(d,"")},insertStaticContent(c,d,m,h,u,M){const e=m?m.previousSibling:d.lastChild;if(u&&(u===M||u.nextSibling))for(;d.insertBefore(u.cloneNode(!0),m),!(u===M||!(u=u.nextSibling)););else{templateContainer.innerHTML=h?`<svg>${c}</svg>`:c;const n=templateContainer.content;if(h){const Y=n.firstChild;for(;Y.firstChild;)n.appendChild(Y.firstChild);n.removeChild(Y)}d.insertBefore(n,m)}return[e?e.nextSibling:d.firstChild,m?m.previousSibling:d.lastChild]}};function patchClass(c,d,m){const h=c._vtc;h&&(d=(d?[d,...h]:[...h]).join(" ")),d==null?c.removeAttribute("class"):m?c.setAttribute("class",d):c.className=d}function patchStyle(c,d,m){const h=c.style,u=isString(m);if(m&&!u){if(d&&!isString(d))for(const M in d)m[M]==null&&setStyle(h,M,"");for(const M in m)setStyle(h,M,m[M])}else{const M=h.display;u?d!==m&&(h.cssText=m):d&&c.removeAttribute("style"),"_vod"in c&&(h.display=M)}}const importantRE=/\s*!important$/;function setStyle(c,d,m){if(isArray(m))m.forEach(h=>setStyle(c,d,h));else if(m==null&&(m=""),d.startsWith("--"))c.setProperty(d,m);else{const h=autoPrefix(c,d);importantRE.test(m)?c.setProperty(hyphenate(h),m.replace(importantRE,""),"important"):c[h]=m}}const prefixes=["Webkit","Moz","ms"],prefixCache={};function autoPrefix(c,d){const m=prefixCache[d];if(m)return m;let h=camelize(d);if(h!=="filter"&&h in c)return prefixCache[d]=h;h=capitalize(h);for(let u=0;u<prefixes.length;u++){const M=prefixes[u]+h;if(M in c)return prefixCache[d]=M}return d}const xlinkNS="http://www.w3.org/1999/xlink";function patchAttr(c,d,m,h,u){if(h&&d.startsWith("xlink:"))m==null?c.removeAttributeNS(xlinkNS,d.slice(6,d.length)):c.setAttributeNS(xlinkNS,d,m);else{const M=isSpecialBooleanAttr(d);m==null||M&&!includeBooleanAttr(m)?c.removeAttribute(d):c.setAttribute(d,M?"":m)}}function patchDOMProp(c,d,m,h,u,M,e){if(d==="innerHTML"||d==="textContent"){h&&e(h,u,M),c[d]=m??"";return}const n=c.tagName;if(d==="value"&&n!=="PROGRESS"&&!n.includes("-")){c._value=m;const I=n==="OPTION"?c.getAttribute("value"):c.value,T=m??"";I!==T&&(c.value=T),m==null&&c.removeAttribute(d);return}let Y=!1;if(m===""||m==null){const I=typeof c[d];I==="boolean"?m=includeBooleanAttr(m):m==null&&I==="string"?(m="",Y=!0):I==="number"&&(m=0,Y=!0)}try{c[d]=m}catch{}Y&&c.removeAttribute(d)}function addEventListener(c,d,m,h){c.addEventListener(d,m,h)}function removeEventListener(c,d,m,h){c.removeEventListener(d,m,h)}function patchEvent(c,d,m,h,u=null){const M=c._vei||(c._vei={}),e=M[d];if(h&&e)e.value=h;else{const[n,Y]=parseName(d);if(h){const I=M[d]=createInvoker(h,u);addEventListener(c,n,I,Y)}else e&&(removeEventListener(c,n,e,Y),M[d]=void 0)}}const optionsModifierRE=/(?:Once|Passive|Capture)$/;function parseName(c){let d;if(optionsModifierRE.test(c)){d={};let h;for(;h=c.match(optionsModifierRE);)c=c.slice(0,c.length-h[0].length),d[h[0].toLowerCase()]=!0}return[c[2]===":"?c.slice(3):hyphenate(c.slice(2)),d]}let cachedNow=0;const p=Promise.resolve(),getNow=()=>cachedNow||(p.then(()=>cachedNow=0),cachedNow=Date.now());function createInvoker(c,d){const m=h=>{if(!h._vts)h._vts=Date.now();else if(h._vts<=m.attached)return;callWithAsyncErrorHandling(patchStopImmediatePropagation(h,m.value),d,5,[h])};return m.value=c,m.attached=getNow(),m}function patchStopImmediatePropagation(c,d){if(isArray(d)){const m=c.stopImmediatePropagation;return c.stopImmediatePropagation=()=>{m.call(c),c._stopped=!0},d.map(h=>u=>!u._stopped&&h&&h(u))}else return d}const nativeOnRE=/^on[a-z]/,patchProp=(c,d,m,h,u=!1,M,e,n,Y)=>{d==="class"?patchClass(c,h,u):d==="style"?patchStyle(c,m,h):isOn(d)?isModelListener(d)||patchEvent(c,d,m,h,e):(d[0]==="."?(d=d.slice(1),!0):d[0]==="^"?(d=d.slice(1),!1):shouldSetAsProp(c,d,h,u))?patchDOMProp(c,d,h,M,e,n,Y):(d==="true-value"?c._trueValue=h:d==="false-value"&&(c._falseValue=h),patchAttr(c,d,h,u))};function shouldSetAsProp(c,d,m,h){return h?!!(d==="innerHTML"||d==="textContent"||d in c&&nativeOnRE.test(d)&&isFunction(m)):d==="spellcheck"||d==="draggable"||d==="translate"||d==="form"||d==="list"&&c.tagName==="INPUT"||d==="type"&&c.tagName==="TEXTAREA"||nativeOnRE.test(d)&&isString(m)?!1:d in c}const rendererOptions=extend({patchProp},nodeOps);let renderer;function ensureRenderer(){return renderer||(renderer=createRenderer(rendererOptions))}const createApp=(...c)=>{const d=ensureRenderer().createApp(...c),{mount:m}=d;return d.mount=h=>{const u=normalizeContainer(h);if(!u)return;const M=d._component;!isFunction(M)&&!M.render&&!M.template&&(M.template=u.innerHTML),u.innerHTML="";const e=m(u,!1,u instanceof SVGElement);return u instanceof Element&&(u.removeAttribute("v-cloak"),u.setAttribute("data-v-app","")),e},d};function normalizeContainer(c){return isString(c)?document.querySelector(c):c}const style="";var ud=Object.defineProperty,yd=(c,d,m)=>d in c?ud(c,d,{enumerable:!0,configurable:!0,writable:!0,value:m}):c[d]=m,kl=(c,d,m)=>(yd(c,typeof d!="symbol"?d+"":d,m),m),nZ=(c,d,m)=>{if(!d.has(c))throw TypeError("Cannot "+m)},R=(c,d,m)=>(nZ(c,d,"read from private field"),m?m.call(c):d.get(c)),Zl=(c,d,m)=>{if(d.has(c))throw TypeError("Cannot add the same private member more than once");d instanceof WeakSet?d.add(c):d.set(c,m)},hl=(c,d,m,h)=>(nZ(c,d,"write to private field"),h?h.call(c,m):d.set(c,m),m),hZ=(c,d,m,h)=>({set _(u){hl(c,d,u,m)},get _(){return R(c,d,h)}}),bl=(c,d,m)=>(nZ(c,d,"access private method"),m),commonjsGlobal=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function getAugmentedNamespace(c){if(c.__esModule)return c;var d=c.default;if(typeof d=="function"){var m=function h(){if(this instanceof h){var u=[null];u.push.apply(u,arguments);var M=Function.bind.apply(d,u);return new M}return d.apply(this,arguments)};m.prototype=d.prototype}else m={};return Object.defineProperty(m,"__esModule",{value:!0}),Object.keys(c).forEach(function(h){var u=Object.getOwnPropertyDescriptor(c,h);Object.defineProperty(m,h,u.get?u:{enumerable:!0,get:function(){return c[h]}})}),m}function commonjsRequire(c){throw new Error('Could not dynamically require "'+c+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var pdf_min={exports:{}};const __viteBrowserExternal={},__viteBrowserExternal$1=Object.freeze(Object.defineProperty({__proto__:null,default:__viteBrowserExternal},Symbol.toStringTag,{value:"Module"})),require$$6=getAugmentedNamespace(__viteBrowserExternal$1);var path2dPolyfill_min={},hasRequiredPath2dPolyfill_min;function requirePath2dPolyfill_min(){return hasRequiredPath2dPolyfill_min||(hasRequiredPath2dPolyfill_min=1,function(){function c(T,o,C){if(C||arguments.length===2)for(var J,v=0,Q=o.length;v<Q;v++)!J&&v in o||(J||(J=Array.prototype.slice.call(o,0,v)),J[v]=o[v]);return T.concat(J||Array.prototype.slice.call(o))}var d={a:7,c:6,h:1,l:2,m:2,q:4,s:4,t:2,v:1,z:0},m=/([astvzqmhlc])([^astvzqmhlc]*)/gi,h=/-?[0-9]*\.?[0-9]+(?:e[-+]?\d+)?/gi;function u(T){var o=[],C=String(T).trim();return C[0]!=="M"&&C[0]!=="m"||C.replace(m,function(J,v,Q){var $=function(D){var r=D.match(h);return r?r.map(Number):[]}(Q),q=v.toLowerCase(),x=v;if(q==="m"&&$.length>2&&(o.push(c([x],$.splice(0,2),!0)),q="l",x=x==="m"?"l":"L"),$.length<d[q])return"";for(o.push(c([x],$.splice(0,d[q]),!0));$.length>=d[q]&&$.length&&d[q];)o.push(c([x],$.splice(0,d[q]),!0));return""}),o}function M(T,o){var C=T.x*Math.cos(o)-T.y*Math.sin(o),J=T.y*Math.cos(o)+T.x*Math.sin(o);T.x=C,T.y=J}function e(T,o){T.x*=o,T.y*=o}var n=function(){function T(o){var C;this.commands=[],o&&o instanceof T?(C=this.commands).push.apply(C,o.commands):o&&(this.commands=u(o))}return T.prototype.addPath=function(o){var C;o&&o instanceof T&&(C=this.commands).push.apply(C,o.commands)},T.prototype.moveTo=function(o,C){this.commands.push(["M",o,C])},T.prototype.lineTo=function(o,C){this.commands.push(["L",o,C])},T.prototype.arc=function(o,C,J,v,Q,$){this.commands.push(["AC",o,C,J,v,Q,!!$])},T.prototype.arcTo=function(o,C,J,v,Q){this.commands.push(["AT",o,C,J,v,Q])},T.prototype.ellipse=function(o,C,J,v,Q,$,q,x){this.commands.push(["E",o,C,J,v,Q,$,q,!!x])},T.prototype.closePath=function(){this.commands.push(["Z"])},T.prototype.bezierCurveTo=function(o,C,J,v,Q,$){this.commands.push(["C",o,C,J,v,Q,$])},T.prototype.quadraticCurveTo=function(o,C,J,v){this.commands.push(["Q",o,C,J,v])},T.prototype.rect=function(o,C,J,v){this.commands.push(["R",o,C,J,v])},T.prototype.roundRect=function(o,C,J,v,Q){Q===void 0?this.commands.push(["RR",o,C,J,v,0]):this.commands.push(["RR",o,C,J,v,Q])},T}();function Y(T,o){var C,J,v,Q,$,q,x,D,r,w,j,f,sl,tl,B,cl,al,Tl,nl,Rl,E,F,H,P,g=0,K=0,il=null,ml=null,Gl=null,ul=null,Nl=null,yl=null;T.beginPath();for(var Xl=0;Xl<o.length;++Xl){(Tl=o[Xl][0])!=="S"&&Tl!=="s"&&Tl!=="C"&&Tl!=="c"&&(il=null,ml=null),Tl!=="T"&&Tl!=="t"&&Tl!=="Q"&&Tl!=="q"&&(Gl=null,ul=null);var Wl=void 0;switch(Tl){case"m":case"M":Wl=o[Xl],Tl==="m"?(g+=Wl[1],K+=Wl[2]):(g=Wl[1],K=Wl[2]),Tl!=="M"&&Nl||(Nl={x:g,y:K}),T.moveTo(g,K);break;case"l":g+=(Wl=o[Xl])[1],K+=Wl[2],T.lineTo(g,K);break;case"L":g=(Wl=o[Xl])[1],K=Wl[2],T.lineTo(g,K);break;case"H":g=(Wl=o[Xl])[1],T.lineTo(g,K);break;case"h":g+=(Wl=o[Xl])[1],T.lineTo(g,K);break;case"V":K=(Wl=o[Xl])[1],T.lineTo(g,K);break;case"v":K+=(Wl=o[Xl])[1],T.lineTo(g,K);break;case"a":case"A":if(Wl=o[Xl],yl===null)throw new Error("This should never happen");Tl==="a"?(g+=Wl[6],K+=Wl[7]):(g=Wl[6],K=Wl[7]),tl=Wl[1],B=Wl[2],x=Wl[3]*Math.PI/180,v=!!Wl[4],Q=!!Wl[5],$={x:g,y:K},M(q={x:(yl.x-$.x)/2,y:(yl.y-$.y)/2},-x),(D=q.x*q.x/(tl*tl)+q.y*q.y/(B*B))>1&&(tl*=D=Math.sqrt(D),B*=D),r=tl*tl*B*B,w=tl*tl*q.y*q.y+B*B*q.x*q.x,e(nl={x:tl*q.y/B,y:-B*q.x/tl},Q!==v?Math.sqrt((r-w)/w)||0:-Math.sqrt((r-w)/w)||0),J=Math.atan2((q.y-nl.y)/B,(q.x-nl.x)/tl),C=Math.atan2(-(q.y+nl.y)/B,-(q.x+nl.x)/tl),M(nl,x),F=nl,H=($.x+yl.x)/2,P=($.y+yl.y)/2,F.x+=H,F.y+=P,T.save(),T.translate(nl.x,nl.y),T.rotate(x),T.scale(tl,B),T.arc(0,0,1,J,C,!Q),T.restore();break;case"C":il=(Wl=o[Xl])[3],ml=Wl[4],g=Wl[5],K=Wl[6],T.bezierCurveTo(Wl[1],Wl[2],il,ml,g,K);break;case"c":Wl=o[Xl],T.bezierCurveTo(Wl[1]+g,Wl[2]+K,Wl[3]+g,Wl[4]+K,Wl[5]+g,Wl[6]+K),il=Wl[3]+g,ml=Wl[4]+K,g+=Wl[5],K+=Wl[6];break;case"S":Wl=o[Xl],il!==null&&ml!==null||(il=g,ml=K),T.bezierCurveTo(2*g-il,2*K-ml,Wl[1],Wl[2],Wl[3],Wl[4]),il=Wl[1],ml=Wl[2],g=Wl[3],K=Wl[4];break;case"s":Wl=o[Xl],il!==null&&ml!==null||(il=g,ml=K),T.bezierCurveTo(2*g-il,2*K-ml,Wl[1]+g,Wl[2]+K,Wl[3]+g,Wl[4]+K),il=Wl[1]+g,ml=Wl[2]+K,g+=Wl[3],K+=Wl[4];break;case"Q":Gl=(Wl=o[Xl])[1],ul=Wl[2],g=Wl[3],K=Wl[4],T.quadraticCurveTo(Gl,ul,g,K);break;case"q":Gl=(Wl=o[Xl])[1]+g,ul=Wl[2]+K,g+=Wl[3],K+=Wl[4],T.quadraticCurveTo(Gl,ul,g,K);break;case"T":Gl!==null&&ul!==null||(Gl=g,ul=K),Gl=2*g-Gl,ul=2*K-ul,g=(Wl=o[Xl])[1],K=Wl[2],T.quadraticCurveTo(Gl,ul,g,K);break;case"t":Gl!==null&&ul!==null||(Gl=g,ul=K),Gl=2*g-Gl,ul=2*K-ul,g+=(Wl=o[Xl])[1],K+=Wl[2],T.quadraticCurveTo(Gl,ul,g,K);break;case"z":case"Z":Nl&&(g=Nl.x,K=Nl.y),Nl=null,T.closePath();break;case"AC":g=(Wl=o[Xl])[1],K=Wl[2],sl=Wl[3],J=Wl[4],C=Wl[5],Rl=Wl[6],T.arc(g,K,sl,J,C,Rl);break;case"AT":j=(Wl=o[Xl])[1],f=Wl[2],g=Wl[3],K=Wl[4],sl=Wl[5],T.arcTo(j,f,g,K,sl);break;case"E":g=(Wl=o[Xl])[1],K=Wl[2],tl=Wl[3],B=Wl[4],x=Wl[5],J=Wl[6],C=Wl[7],Rl=Wl[8],T.save(),T.translate(g,K),T.rotate(x),T.scale(tl,B),T.arc(0,0,1,J,C,Rl),T.restore();break;case"R":g=(Wl=o[Xl])[1],K=Wl[2],cl=Wl[3],al=Wl[4],Nl={x:g,y:K},T.rect(g,K,cl,al);break;case"RR":g=(Wl=o[Xl])[1],K=Wl[2],cl=Wl[3],al=Wl[4],E=Wl[5],Nl={x:g,y:K},T.roundRect(g,K,cl,al,E)}yl?(yl.x=g,yl.y=K):yl={x:g,y:K}}}function I(T,o,C,J,v){var Q=this;if(v===void 0&&(v=0),typeof v=="number"&&(v=[v]),Array.isArray(v)){if(v.length===0||v.length>4)throw new RangeError("Failed to execute 'roundRect' on '".concat(this.constructor.name,"': ").concat(v.length," radii provided. Between one and four radii are necessary."));if(v.forEach(function(w){if(w<0)throw new RangeError("Failed to execute 'roundRect' on '".concat(Q.constructor.name,"': Radius value ").concat(w," is negative."))}),v.length===1&&v[0]===0)return this.rect(T,o,C,J);var $,q,x,D=Math.min(C,J)/2,r=$=q=x=Math.min(D,v[0]);v.length===2&&($=x=Math.min(D,v[1])),v.length===3&&($=x=Math.min(D,v[1]),q=Math.min(D,v[2])),v.length===4&&($=Math.min(D,v[1]),q=Math.min(D,v[2]),x=Math.min(D,v[3])),this.moveTo(T,o+J-x),this.arcTo(T,o,T+r,o,r),this.arcTo(T+C,o,T+C,o+$,$),this.arcTo(T+C,o+J,T+C-q,o+J,q),this.arcTo(T,o+J,T,o+J-x,x),this.moveTo(T,o)}}(function(T){if(T&&T.CanvasRenderingContext2D&&!T.Path2D){var o=T.CanvasRenderingContext2D,C=o.prototype.fill,J=o.prototype.stroke,v=o.prototype.isPointInPath;o.prototype.fill=function(){for(var Q=[],$=0;$<arguments.length;$++)Q[$]=arguments[$];if(!(Q[0]instanceof n))return x=Q[0]||"nonzero",C.apply(this,[x]);var q=Q[0],x=Q[1]||"nonzero";Y(this,q.commands),C.apply(this,[x])},o.prototype.stroke=function(Q){Q&&Y(this,Q.commands),J.apply(this)},o.prototype.isPointInPath=function(){for(var Q=[],$=0;$<arguments.length;$++)Q[$]=arguments[$];if(Q[0]instanceof n){var q=Q[0],x=Q[1],D=Q[2],r=Q[3]||"nonzero";return Y(this,q.commands),v.apply(this,[x,D,r])}return v.apply(this,Q)},T.Path2D=n}})(window),function(T){if(T&&T.CanvasRenderingContext2D){var o=T.CanvasRenderingContext2D,C=T.Path2D;o&&!o.prototype.roundRect&&(o.prototype.roundRect=I),C&&!C.prototype.roundRect&&(C.prototype.roundRect=I)}}(window)}()),path2dPolyfill_min}(function(module,exports){(function(c,d){module.exports=d()})(globalThis,()=>(()=>{var __webpack_modules__=[,(c,d,m)=>{var h,u;Object.defineProperty(d,"__esModule",{value:!0}),d.VerbosityLevel=d.Util=d.UnknownErrorException=d.UnexpectedResponseException=d.TextRenderingMode=d.RenderingIntentFlag=d.PromiseCapability=d.PermissionFlag=d.PasswordResponses=d.PasswordException=d.PageActionEventType=d.OPS=d.MissingPDFException=d.MAX_IMAGE_SIZE_TO_CACHE=d.LINE_FACTOR=d.LINE_DESCENT_FACTOR=d.InvalidPDFException=d.ImageKind=d.IDENTITY_MATRIX=d.FormatError=d.FeatureTest=d.FONT_IDENTITY_MATRIX=d.DocumentActionEventType=d.CMapCompressionType=d.BaseException=d.BASELINE_FACTOR=d.AnnotationType=d.AnnotationStateModelType=d.AnnotationReviewState=d.AnnotationReplyType=d.AnnotationMode=d.AnnotationMarkedState=d.AnnotationFlag=d.AnnotationFieldFlag=d.AnnotationEditorType=d.AnnotationEditorPrefix=d.AnnotationEditorParamsType=d.AnnotationBorderStyleType=d.AnnotationActionEventType=d.AbortException=void 0,d.assert=function(x,D){x||Y(D)},d.bytesToString=function(x){typeof x=="object"&&(x==null?void 0:x.length)!==void 0||Y("Invalid argument for bytesToString");const D=x.length,r=8192;if(D<r)return String.fromCharCode.apply(null,x);const w=[];for(let j=0;j<D;j+=r){const f=Math.min(j+r,D),sl=x.subarray(j,f);w.push(String.fromCharCode.apply(null,sl))}return w.join("")},d.createValidAbsoluteUrl=function(x){let D=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null;if(!x)return null;try{if(r&&typeof x=="string"){if(r.addDefaultProtocol&&x.startsWith("www.")){const j=x.match(/\./g);(j==null?void 0:j.length)>=2&&(x=`http://${x}`)}if(r.tryConvertEncoding)try{x=Q(x)}catch{}}const w=D?new URL(x,D):new URL(x);if(function(j){switch(j==null?void 0:j.protocol){case"http:":case"https:":case"ftp:":case"mailto:":case"tel:":return!0;default:return!1}}(w))return w}catch{}return null},d.getModificationDate=function(){let x=arguments.length>0&&arguments[0]!==void 0?arguments[0]:new Date;return[x.getUTCFullYear().toString(),(x.getUTCMonth()+1).toString().padStart(2,"0"),x.getUTCDate().toString().padStart(2,"0"),x.getUTCHours().toString().padStart(2,"0"),x.getUTCMinutes().toString().padStart(2,"0"),x.getUTCSeconds().toString().padStart(2,"0")].join("")},d.getVerbosityLevel=function(){return e},d.info=function(x){e>=M.INFOS&&console.log(`Info: ${x}`)},d.isArrayBuffer=function(x){return typeof x=="object"&&(x==null?void 0:x.byteLength)!==void 0},d.isArrayEqual=function(x,D){if(x.length!==D.length)return!1;for(let r=0,w=x.length;r<w;r++)if(x[r]!==D[r])return!1;return!0},d.normalizeUnicode=function(x){return $||($=/([\u00a0\u00b5\u037e\u0eb3\u2000-\u200a\u202f\u2126\ufb00-\ufb04\ufb06\ufb20-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufba1\ufba4-\ufba9\ufbae-\ufbb1\ufbd3-\ufbdc\ufbde-\ufbe7\ufbea-\ufbf8\ufbfc-\ufbfd\ufc00-\ufc5d\ufc64-\ufcf1\ufcf5-\ufd3d\ufd88\ufdf4\ufdfa-\ufdfb\ufe71\ufe77\ufe79\ufe7b\ufe7d]+)|(\ufb05+)/gu,q=new Map([["ﬅ","ſt"]])),x.replaceAll($,(D,r,w)=>r?r.normalize("NFKC"):q.get(w))},d.objectFromMap=function(x){const D=Object.create(null);for(const[r,w]of x)D[r]=w;return D},d.objectSize=function(x){return Object.keys(x).length},d.setVerbosityLevel=function(x){Number.isInteger(x)&&(e=x)},d.shadow=I,d.string32=function(x){return String.fromCharCode(x>>24&255,x>>16&255,x>>8&255,255&x)},d.stringToBytes=o,d.stringToPDFString=function(x){if(x[0]>="ï"){let r;if(x[0]==="þ"&&x[1]==="ÿ"?r="utf-16be":x[0]==="ÿ"&&x[1]==="þ"?r="utf-16le":x[0]==="ï"&&x[1]==="»"&&x[2]==="¿"&&(r="utf-8"),r)try{const w=new TextDecoder(r,{fatal:!0}),j=o(x);return w.decode(j)}catch(w){n(`stringToPDFString: "${w}".`)}}const D=[];for(let r=0,w=x.length;r<w;r++){const j=v[x.charCodeAt(r)];D.push(j?String.fromCharCode(j):x.charAt(r))}return D.join("")},d.stringToUTF8String=Q,d.unreachable=Y,d.utf8StringToString=function(x){return unescape(encodeURIComponent(x))},d.warn=n,globalThis._pdfjsCompatibilityChecked||(globalThis._pdfjsCompatibilityChecked=!0,m(2)),d.IDENTITY_MATRIX=[1,0,0,1,0,0],d.FONT_IDENTITY_MATRIX=[.001,0,0,.001,0,0],d.MAX_IMAGE_SIZE_TO_CACHE=1e7,d.LINE_FACTOR=1.35,d.LINE_DESCENT_FACTOR=.35,d.BASELINE_FACTOR=.25925925925925924,d.RenderingIntentFlag={ANY:1,DISPLAY:2,PRINT:4,SAVE:8,ANNOTATIONS_FORMS:16,ANNOTATIONS_STORAGE:32,ANNOTATIONS_DISABLE:64,OPLIST:256},d.AnnotationMode={DISABLE:0,ENABLE:1,ENABLE_FORMS:2,ENABLE_STORAGE:3},d.AnnotationEditorPrefix="pdfjs_internal_editor_",d.AnnotationEditorType={DISABLE:-1,NONE:0,FREETEXT:3,INK:15},d.AnnotationEditorParamsType={FREETEXT_SIZE:1,FREETEXT_COLOR:2,FREETEXT_OPACITY:3,INK_COLOR:11,INK_THICKNESS:12,INK_OPACITY:13},d.PermissionFlag={PRINT:4,MODIFY_CONTENTS:8,COPY:16,MODIFY_ANNOTATIONS:32,FILL_INTERACTIVE_FORMS:256,COPY_FOR_ACCESSIBILITY:512,ASSEMBLE:1024,PRINT_HIGH_QUALITY:2048},d.TextRenderingMode={FILL:0,STROKE:1,FILL_STROKE:2,INVISIBLE:3,FILL_ADD_TO_PATH:4,STROKE_ADD_TO_PATH:5,FILL_STROKE_ADD_TO_PATH:6,ADD_TO_PATH:7,FILL_STROKE_MASK:3,ADD_TO_PATH_FLAG:4},d.ImageKind={GRAYSCALE_1BPP:1,RGB_24BPP:2,RGBA_32BPP:3},d.AnnotationType={TEXT:1,LINK:2,FREETEXT:3,LINE:4,SQUARE:5,CIRCLE:6,POLYGON:7,POLYLINE:8,HIGHLIGHT:9,UNDERLINE:10,SQUIGGLY:11,STRIKEOUT:12,STAMP:13,CARET:14,INK:15,POPUP:16,FILEATTACHMENT:17,SOUND:18,MOVIE:19,WIDGET:20,SCREEN:21,PRINTERMARK:22,TRAPNET:23,WATERMARK:24,THREED:25,REDACT:26},d.AnnotationStateModelType={MARKED:"Marked",REVIEW:"Review"},d.AnnotationMarkedState={MARKED:"Marked",UNMARKED:"Unmarked"},d.AnnotationReviewState={ACCEPTED:"Accepted",REJECTED:"Rejected",CANCELLED:"Cancelled",COMPLETED:"Completed",NONE:"None"},d.AnnotationReplyType={GROUP:"Group",REPLY:"R"},d.AnnotationFlag={INVISIBLE:1,HIDDEN:2,PRINT:4,NOZOOM:8,NOROTATE:16,NOVIEW:32,READONLY:64,LOCKED:128,TOGGLENOVIEW:256,LOCKEDCONTENTS:512},d.AnnotationFieldFlag={READONLY:1,REQUIRED:2,NOEXPORT:4,MULTILINE:4096,PASSWORD:8192,NOTOGGLETOOFF:16384,RADIO:32768,PUSHBUTTON:65536,COMBO:131072,EDIT:262144,SORT:524288,FILESELECT:1048576,MULTISELECT:2097152,DONOTSPELLCHECK:4194304,DONOTSCROLL:8388608,COMB:16777216,RICHTEXT:33554432,RADIOSINUNISON:33554432,COMMITONSELCHANGE:67108864},d.AnnotationBorderStyleType={SOLID:1,DASHED:2,BEVELED:3,INSET:4,UNDERLINE:5},d.AnnotationActionEventType={E:"Mouse Enter",X:"Mouse Exit",D:"Mouse Down",U:"Mouse Up",Fo:"Focus",Bl:"Blur",PO:"PageOpen",PC:"PageClose",PV:"PageVisible",PI:"PageInvisible",K:"Keystroke",F:"Format",V:"Validate",C:"Calculate"},d.DocumentActionEventType={WC:"WillClose",WS:"WillSave",DS:"DidSave",WP:"WillPrint",DP:"DidPrint"},d.PageActionEventType={O:"PageOpen",C:"PageClose"};const M={ERRORS:0,WARNINGS:1,INFOS:5};d.VerbosityLevel=M,d.CMapCompressionType={NONE:0,BINARY:1},d.OPS={dependency:1,setLineWidth:2,setLineCap:3,setLineJoin:4,setMiterLimit:5,setDash:6,setRenderingIntent:7,setFlatness:8,setGState:9,save:10,restore:11,transform:12,moveTo:13,lineTo:14,curveTo:15,curveTo2:16,curveTo3:17,closePath:18,rectangle:19,stroke:20,closeStroke:21,fill:22,eoFill:23,fillStroke:24,eoFillStroke:25,closeFillStroke:26,closeEOFillStroke:27,endPath:28,clip:29,eoClip:30,beginText:31,endText:32,setCharSpacing:33,setWordSpacing:34,setHScale:35,setLeading:36,setFont:37,setTextRenderingMode:38,setTextRise:39,moveText:40,setLeadingMoveText:41,setTextMatrix:42,nextLine:43,showText:44,showSpacedText:45,nextLineShowText:46,nextLineSetSpacingShowText:47,setCharWidth:48,setCharWidthAndBounds:49,setStrokeColorSpace:50,setFillColorSpace:51,setStrokeColor:52,setStrokeColorN:53,setFillColor:54,setFillColorN:55,setStrokeGray:56,setFillGray:57,setStrokeRGBColor:58,setFillRGBColor:59,setStrokeCMYKColor:60,setFillCMYKColor:61,shadingFill:62,beginInlineImage:63,beginImageData:64,endInlineImage:65,paintXObject:66,markPoint:67,markPointProps:68,beginMarkedContent:69,beginMarkedContentProps:70,endMarkedContent:71,beginCompat:72,endCompat:73,paintFormXObjectBegin:74,paintFormXObjectEnd:75,beginGroup:76,endGroup:77,beginAnnotation:80,endAnnotation:81,paintImageMaskXObject:83,paintImageMaskXObjectGroup:84,paintImageXObject:85,paintInlineImageXObject:86,paintInlineImageXObjectGroup:87,paintImageXObjectRepeat:88,paintImageMaskXObjectRepeat:89,paintSolidColorImageMask:90,constructPath:91},d.PasswordResponses={NEED_PASSWORD:1,INCORRECT_PASSWORD:2};let e=M.WARNINGS;function n(x){e>=M.WARNINGS&&console.log(`Warning: ${x}`)}function Y(x){throw new Error(x)}function I(x,D,r){let w=arguments.length>3&&arguments[3]!==void 0&&arguments[3];return Object.defineProperty(x,D,{value:r,enumerable:!w,configurable:!0,writable:!1}),r}const T=function(){function x(D,r){this.constructor===x&&Y("Cannot initialize BaseException."),this.message=D,this.name=r}return x.prototype=new Error,x.constructor=x,x}();d.BaseException=T,d.PasswordException=class extends T{constructor(x,D){super(x,"PasswordException"),this.code=D}},d.UnknownErrorException=class extends T{constructor(x,D){super(x,"UnknownErrorException"),this.details=D}},d.InvalidPDFException=class extends T{constructor(x){super(x,"InvalidPDFException")}},d.MissingPDFException=class extends T{constructor(x){super(x,"MissingPDFException")}},d.UnexpectedResponseException=class extends T{constructor(x,D){super(x,"UnexpectedResponseException"),this.status=D}},d.FormatError=class extends T{constructor(x){super(x,"FormatError")}},d.AbortException=class extends T{constructor(x){super(x,"AbortException")}};function o(x){typeof x!="string"&&Y("Invalid argument for stringToBytes");const D=x.length,r=new Uint8Array(D);for(let w=0;w<D;++w)r[w]=255&x.charCodeAt(w);return r}d.FeatureTest=class{static get isLittleEndian(){return I(this,"isLittleEndian",function(){const x=new Uint8Array(4);return x[0]=1,new Uint32Array(x.buffer,0,1)[0]===1}())}static get isEvalSupported(){return I(this,"isEvalSupported",function(){try{return new Function(""),!0}catch{return!1}}())}static get isOffscreenCanvasSupported(){return I(this,"isOffscreenCanvasSupported",typeof OffscreenCanvas<"u")}static get platform(){return typeof navigator>"u"?I(this,"platform",{isWin:!1,isMac:!1}):I(this,"platform",{isWin:navigator.platform.includes("Win"),isMac:navigator.platform.includes("Mac")})}};const C=[...Array(256).keys()].map(x=>x.toString(16).padStart(2,"0"));class J{static makeHexColor(D,r,w){return`#${C[D]}${C[r]}${C[w]}`}static scaleMinMax(D,r){let w;D[0]?(D[0]<0&&(w=r[0],r[0]=r[1],r[1]=w),r[0]*=D[0],r[1]*=D[0],D[3]<0&&(w=r[2],r[2]=r[3],r[3]=w),r[2]*=D[3],r[3]*=D[3]):(w=r[0],r[0]=r[2],r[2]=w,w=r[1],r[1]=r[3],r[3]=w,D[1]<0&&(w=r[2],r[2]=r[3],r[3]=w),r[2]*=D[1],r[3]*=D[1],D[2]<0&&(w=r[0],r[0]=r[1],r[1]=w),r[0]*=D[2],r[1]*=D[2]),r[0]+=D[4],r[1]+=D[4],r[2]+=D[5],r[3]+=D[5]}static transform(D,r){return[D[0]*r[0]+D[2]*r[1],D[1]*r[0]+D[3]*r[1],D[0]*r[2]+D[2]*r[3],D[1]*r[2]+D[3]*r[3],D[0]*r[4]+D[2]*r[5]+D[4],D[1]*r[4]+D[3]*r[5]+D[5]]}static applyTransform(D,r){return[D[0]*r[0]+D[1]*r[2]+r[4],D[0]*r[1]+D[1]*r[3]+r[5]]}static applyInverseTransform(D,r){const w=r[0]*r[3]-r[1]*r[2];return[(D[0]*r[3]-D[1]*r[2]+r[2]*r[5]-r[4]*r[3])/w,(-D[0]*r[1]+D[1]*r[0]+r[4]*r[1]-r[5]*r[0])/w]}static getAxialAlignedBoundingBox(D,r){const w=J.applyTransform(D,r),j=J.applyTransform(D.slice(2,4),r),f=J.applyTransform([D[0],D[3]],r),sl=J.applyTransform([D[2],D[1]],r);return[Math.min(w[0],j[0],f[0],sl[0]),Math.min(w[1],j[1],f[1],sl[1]),Math.max(w[0],j[0],f[0],sl[0]),Math.max(w[1],j[1],f[1],sl[1])]}static inverseTransform(D){const r=D[0]*D[3]-D[1]*D[2];return[D[3]/r,-D[1]/r,-D[2]/r,D[0]/r,(D[2]*D[5]-D[4]*D[3])/r,(D[4]*D[1]-D[5]*D[0])/r]}static singularValueDecompose2dScale(D){const r=[D[0],D[2],D[1],D[3]],w=D[0]*r[0]+D[1]*r[2],j=D[0]*r[1]+D[1]*r[3],f=D[2]*r[0]+D[3]*r[2],sl=D[2]*r[1]+D[3]*r[3],tl=(w+sl)/2,B=Math.sqrt((w+sl)**2-4*(w*sl-f*j))/2,cl=tl+B||1,al=tl-B||1;return[Math.sqrt(cl),Math.sqrt(al)]}static normalizeRect(D){const r=D.slice(0);return D[0]>D[2]&&(r[0]=D[2],r[2]=D[0]),D[1]>D[3]&&(r[1]=D[3],r[3]=D[1]),r}static intersect(D,r){const w=Math.max(Math.min(D[0],D[2]),Math.min(r[0],r[2])),j=Math.min(Math.max(D[0],D[2]),Math.max(r[0],r[2]));if(w>j)return null;const f=Math.max(Math.min(D[1],D[3]),Math.min(r[1],r[3])),sl=Math.min(Math.max(D[1],D[3]),Math.max(r[1],r[3]));return f>sl?null:[w,f,j,sl]}static bezierBoundingBox(D,r,w,j,f,sl,tl,B){const cl=[],al=[[],[]];let Tl,nl,Rl,E,F,H,P,g;for(let Gl=0;Gl<2;++Gl)if(Gl===0?(nl=6*D-12*w+6*f,Tl=-3*D+9*w-9*f+3*tl,Rl=3*w-3*D):(nl=6*r-12*j+6*sl,Tl=-3*r+9*j-9*sl+3*B,Rl=3*j-3*r),Math.abs(Tl)<1e-12){if(Math.abs(nl)<1e-12)continue;E=-Rl/nl,0<E&&E<1&&cl.push(E)}else P=nl*nl-4*Rl*Tl,g=Math.sqrt(P),P<0||(F=(-nl+g)/(2*Tl),0<F&&F<1&&cl.push(F),H=(-nl-g)/(2*Tl),0<H&&H<1&&cl.push(H));let K,il=cl.length;const ml=il;for(;il--;)E=cl[il],K=1-E,al[0][il]=K*K*K*D+3*K*K*E*w+3*K*E*E*f+E*E*E*tl,al[1][il]=K*K*K*r+3*K*K*E*j+3*K*E*E*sl+E*E*E*B;return al[0][ml]=D,al[1][ml]=r,al[0][ml+1]=tl,al[1][ml+1]=B,al[0].length=al[1].length=ml+2,[Math.min(...al[0]),Math.min(...al[1]),Math.max(...al[0]),Math.max(...al[1])]}}d.Util=J;const v=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,728,711,710,729,733,731,730,732,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8226,8224,8225,8230,8212,8211,402,8260,8249,8250,8722,8240,8222,8220,8221,8216,8217,8218,8482,64257,64258,321,338,352,376,381,305,322,339,353,382,0,8364];function Q(x){return decodeURIComponent(escape(x))}d.PromiseCapability=(u=class{constructor(){Zl(this,h,!1),this.promise=new Promise((x,D)=>{this.resolve=r=>{hl(this,h,!0),x(r)},this.reject=r=>{hl(this,h,!0),D(r)}})}get settled(){return R(this,h)}},h=new WeakMap,u);let $=null,q=null},(c,d,m)=>{var h=m(3);(function(){!globalThis.DOMMatrix&&h.isNodeJS&&(globalThis.DOMMatrix=require$$6.DOMMatrix)})(),function(){if(globalThis.Path2D||!h.isNodeJS)return;const{CanvasRenderingContext2D:u}=require$$6,{polyfillPath2D:M}=requirePath2dPolyfill_min();globalThis.CanvasRenderingContext2D=u,M(globalThis)}(),function(){Array.prototype.at||m(4)}(),function(){Uint8Array.prototype.at||m(78)}(),function(){globalThis.structuredClone||m(90)}()},(c,d)=>{Object.defineProperty(d,"__esModule",{value:!0}),d.isNodeJS=void 0;const m=!(typeof process!="object"||process+""!="[object process]"||process.versions.nw||process.versions.electron&&process.type&&process.type!=="browser");d.isNodeJS=m},(c,d,m)=>{m(5);var h=m(77);c.exports=h("Array","at")},(c,d,m)=>{var h=m(6),u=m(43),M=m(67),e=m(65),n=m(72);h({target:"Array",proto:!0},{at:function(Y){var I=u(this),T=M(I),o=e(Y),C=o>=0?o:T+o;return C<0||C>=T?void 0:I[C]}}),n("at")},(c,d,m)=>{var h=m(7),u=m(8).f,M=m(47),e=m(51),n=m(41),Y=m(59),I=m(71);c.exports=function(T,o){var C,J,v,Q,$,q=T.target,x=T.global,D=T.stat;if(C=x?h:D?h[q]||n(q,{}):(h[q]||{}).prototype)for(J in o){if(Q=o[J],v=T.dontCallGetSet?($=u(C,J))&&$.value:C[J],!I(x?J:q+(D?".":"#")+J,T.forced)&&v!==void 0){if(typeof Q==typeof v)continue;Y(Q,v)}(T.sham||v&&v.sham)&&M(Q,"sham",!0),e(C,J,Q,T)}}},function(c){var d=function(m){return m&&m.Math==Math&&m};c.exports=d(typeof globalThis=="object"&&globalThis)||d(typeof window=="object"&&window)||d(typeof self=="object"&&self)||d(typeof commonjsGlobal=="object"&&commonjsGlobal)||function(){return this}()||this||Function("return this")()},(c,d,m)=>{var h=m(9),u=m(11),M=m(13),e=m(14),n=m(15),Y=m(21),I=m(42),T=m(45),o=Object.getOwnPropertyDescriptor;d.f=h?o:function(C,J){if(C=n(C),J=Y(J),T)try{return o(C,J)}catch{}if(I(C,J))return e(!u(M.f,C,J),C[J])}},(c,d,m)=>{var h=m(10);c.exports=!h(function(){return Object.defineProperty({},1,{get:function(){return 7}})[1]!=7})},c=>{c.exports=function(d){try{return!!d()}catch{return!0}}},(c,d,m)=>{var h=m(12),u=Function.prototype.call;c.exports=h?u.bind(u):function(){return u.apply(u,arguments)}},(c,d,m)=>{var h=m(10);c.exports=!h(function(){var u=function(){}.bind();return typeof u!="function"||u.hasOwnProperty("prototype")})},(c,d)=>{var m={}.propertyIsEnumerable,h=Object.getOwnPropertyDescriptor,u=h&&!m.call({1:2},1);d.f=u?function(M){var e=h(this,M);return!!e&&e.enumerable}:m},c=>{c.exports=function(d,m){return{enumerable:!(1&d),configurable:!(2&d),writable:!(4&d),value:m}}},(c,d,m)=>{var h=m(16),u=m(19);c.exports=function(M){return h(u(M))}},(c,d,m)=>{var h=m(17),u=m(10),M=m(18),e=Object,n=h("".split);c.exports=u(function(){return!e("z").propertyIsEnumerable(0)})?function(Y){return M(Y)=="String"?n(Y,""):e(Y)}:e},(c,d,m)=>{var h=m(12),u=Function.prototype,M=u.call,e=h&&u.bind.bind(M,M);c.exports=h?e:function(n){return function(){return M.apply(n,arguments)}}},(c,d,m)=>{var h=m(17),u=h({}.toString),M=h("".slice);c.exports=function(e){return M(u(e),8,-1)}},(c,d,m)=>{var h=m(20),u=TypeError;c.exports=function(M){if(h(M))throw u("Can't call method on "+M);return M}},c=>{c.exports=function(d){return d==null}},(c,d,m)=>{var h=m(22),u=m(26);c.exports=function(M){var e=h(M,"string");return u(e)?e:e+""}},(c,d,m)=>{var h=m(11),u=m(23),M=m(26),e=m(33),n=m(36),Y=m(37),I=TypeError,T=Y("toPrimitive");c.exports=function(o,C){if(!u(o)||M(o))return o;var J,v=e(o,T);if(v){if(C===void 0&&(C="default"),J=h(v,o,C),!u(J)||M(J))return J;throw I("Can't convert object to primitive value")}return C===void 0&&(C="number"),n(o,C)}},(c,d,m)=>{var h=m(24),u=m(25),M=u.all;c.exports=u.IS_HTMLDDA?function(e){return typeof e=="object"?e!==null:h(e)||e===M}:function(e){return typeof e=="object"?e!==null:h(e)}},(c,d,m)=>{var h=m(25),u=h.all;c.exports=h.IS_HTMLDDA?function(M){return typeof M=="function"||M===u}:function(M){return typeof M=="function"}},c=>{var d=typeof document=="object"&&document.all,m=d===void 0&&d!==void 0;c.exports={all:d,IS_HTMLDDA:m}},(c,d,m)=>{var h=m(27),u=m(24),M=m(28),e=m(29),n=Object;c.exports=e?function(Y){return typeof Y=="symbol"}:function(Y){var I=h("Symbol");return u(I)&&M(I.prototype,n(Y))}},(c,d,m)=>{var h=m(7),u=m(24);c.exports=function(M,e){return arguments.length<2?(n=h[M],u(n)?n:void 0):h[M]&&h[M][e];var n}},(c,d,m)=>{var h=m(17);c.exports=h({}.isPrototypeOf)},(c,d,m)=>{var h=m(30);c.exports=h&&!Symbol.sham&&typeof Symbol.iterator=="symbol"},(c,d,m)=>{var h=m(31),u=m(10),M=m(7).String;c.exports=!!Object.getOwnPropertySymbols&&!u(function(){var e=Symbol();return!M(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&h&&h<41})},(c,d,m)=>{var h,u,M=m(7),e=m(32),n=M.process,Y=M.Deno,I=n&&n.versions||Y&&Y.version,T=I&&I.v8;T&&(u=(h=T.split("."))[0]>0&&h[0]<4?1:+(h[0]+h[1])),!u&&e&&(!(h=e.match(/Edge\/(\d+)/))||h[1]>=74)&&(h=e.match(/Chrome\/(\d+)/))&&(u=+h[1]),c.exports=u},c=>{c.exports=typeof navigator<"u"&&String(navigator.userAgent)||""},(c,d,m)=>{var h=m(34),u=m(20);c.exports=function(M,e){var n=M[e];return u(n)?void 0:h(n)}},(c,d,m)=>{var h=m(24),u=m(35),M=TypeError;c.exports=function(e){if(h(e))return e;throw M(u(e)+" is not a function")}},c=>{var d=String;c.exports=function(m){try{return d(m)}catch{return"Object"}}},(c,d,m)=>{var h=m(11),u=m(24),M=m(23),e=TypeError;c.exports=function(n,Y){var I,T;if(Y==="string"&&u(I=n.toString)&&!M(T=h(I,n))||u(I=n.valueOf)&&!M(T=h(I,n))||Y!=="string"&&u(I=n.toString)&&!M(T=h(I,n)))return T;throw e("Can't convert object to primitive value")}},(c,d,m)=>{var h=m(7),u=m(38),M=m(42),e=m(44),n=m(30),Y=m(29),I=h.Symbol,T=u("wks"),o=Y?I.for||I:I&&I.withoutSetter||e;c.exports=function(C){return M(T,C)||(T[C]=n&&M(I,C)?I[C]:o("Symbol."+C)),T[C]}},(c,d,m)=>{var h=m(39),u=m(40);(c.exports=function(M,e){return u[M]||(u[M]=e!==void 0?e:{})})("versions",[]).push({version:"3.30.2",mode:h?"pure":"global",copyright:"© 2014-2023 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.30.2/LICENSE",source:"https://github.com/zloirock/core-js"})},c=>{c.exports=!1},(c,d,m)=>{var h=m(7),u=m(41),M="__core-js_shared__",e=h[M]||u(M,{});c.exports=e},(c,d,m)=>{var h=m(7),u=Object.defineProperty;c.exports=function(M,e){try{u(h,M,{value:e,configurable:!0,writable:!0})}catch{h[M]=e}return e}},(c,d,m)=>{var h=m(17),u=m(43),M=h({}.hasOwnProperty);c.exports=Object.hasOwn||function(e,n){return M(u(e),n)}},(c,d,m)=>{var h=m(19),u=Object;c.exports=function(M){return u(h(M))}},(c,d,m)=>{var h=m(17),u=0,M=Math.random(),e=h(1 .toString);c.exports=function(n){return"Symbol("+(n===void 0?"":n)+")_"+e(++u+M,36)}},(c,d,m)=>{var h=m(9),u=m(10),M=m(46);c.exports=!h&&!u(function(){return Object.defineProperty(M("div"),"a",{get:function(){return 7}}).a!=7})},(c,d,m)=>{var h=m(7),u=m(23),M=h.document,e=u(M)&&u(M.createElement);c.exports=function(n){return e?M.createElement(n):{}}},(c,d,m)=>{var h=m(9),u=m(48),M=m(14);c.exports=h?function(e,n,Y){return u.f(e,n,M(1,Y))}:function(e,n,Y){return e[n]=Y,e}},(c,d,m)=>{var h=m(9),u=m(45),M=m(49),e=m(50),n=m(21),Y=TypeError,I=Object.defineProperty,T=Object.getOwnPropertyDescriptor,o="enumerable",C="configurable",J="writable";d.f=h?M?function(v,Q,$){if(e(v),Q=n(Q),e($),typeof v=="function"&&Q==="prototype"&&"value"in $&&J in $&&!$[J]){var q=T(v,Q);q&&q[J]&&(v[Q]=$.value,$={configurable:C in $?$[C]:q[C],enumerable:o in $?$[o]:q[o],writable:!1})}return I(v,Q,$)}:I:function(v,Q,$){if(e(v),Q=n(Q),e($),u)try{return I(v,Q,$)}catch{}if("get"in $||"set"in $)throw Y("Accessors not supported");return"value"in $&&(v[Q]=$.value),v}},(c,d,m)=>{var h=m(9),u=m(10);c.exports=h&&u(function(){return Object.defineProperty(function(){},"prototype",{value:42,writable:!1}).prototype!=42})},(c,d,m)=>{var h=m(23),u=String,M=TypeError;c.exports=function(e){if(h(e))return e;throw M(u(e)+" is not an object")}},(c,d,m)=>{var h=m(24),u=m(48),M=m(52),e=m(41);c.exports=function(n,Y,I,T){T||(T={});var o=T.enumerable,C=T.name!==void 0?T.name:Y;if(h(I)&&M(I,C,T),T.global)o?n[Y]=I:e(Y,I);else{try{T.unsafe?n[Y]&&(o=!0):delete n[Y]}catch{}o?n[Y]=I:u.f(n,Y,{value:I,enumerable:!1,configurable:!T.nonConfigurable,writable:!T.nonWritable})}return n}},(c,d,m)=>{var h=m(17),u=m(10),M=m(24),e=m(42),n=m(9),Y=m(53).CONFIGURABLE,I=m(54),T=m(55),o=T.enforce,C=T.get,J=String,v=Object.defineProperty,Q=h("".slice),$=h("".replace),q=h([].join),x=n&&!u(function(){return v(function(){},"length",{value:8}).length!==8}),D=String(String).split("String"),r=c.exports=function(w,j,f){Q(J(j),0,7)==="Symbol("&&(j="["+$(J(j),/^Symbol\(([^)]*)\)/,"$1")+"]"),f&&f.getter&&(j="get "+j),f&&f.setter&&(j="set "+j),(!e(w,"name")||Y&&w.name!==j)&&(n?v(w,"name",{value:j,configurable:!0}):w.name=j),x&&f&&e(f,"arity")&&w.length!==f.arity&&v(w,"length",{value:f.arity});try{f&&e(f,"constructor")&&f.constructor?n&&v(w,"prototype",{writable:!1}):w.prototype&&(w.prototype=void 0)}catch{}var sl=o(w);return e(sl,"source")||(sl.source=q(D,typeof j=="string"?j:"")),w};Function.prototype.toString=r(function(){return M(this)&&C(this).source||I(this)},"toString")},(c,d,m)=>{var h=m(9),u=m(42),M=Function.prototype,e=h&&Object.getOwnPropertyDescriptor,n=u(M,"name"),Y=n&&function(){}.name==="something",I=n&&(!h||h&&e(M,"name").configurable);c.exports={EXISTS:n,PROPER:Y,CONFIGURABLE:I}},(c,d,m)=>{var h=m(17),u=m(24),M=m(40),e=h(Function.toString);u(M.inspectSource)||(M.inspectSource=function(n){return e(n)}),c.exports=M.inspectSource},(c,d,m)=>{var h,u,M,e=m(56),n=m(7),Y=m(23),I=m(47),T=m(42),o=m(40),C=m(57),J=m(58),v="Object already initialized",Q=n.TypeError,$=n.WeakMap;if(e||o.state){var q=o.state||(o.state=new $);q.get=q.get,q.has=q.has,q.set=q.set,h=function(D,r){if(q.has(D))throw Q(v);return r.facade=D,q.set(D,r),r},u=function(D){return q.get(D)||{}},M=function(D){return q.has(D)}}else{var x=C("state");J[x]=!0,h=function(D,r){if(T(D,x))throw Q(v);return r.facade=D,I(D,x,r),r},u=function(D){return T(D,x)?D[x]:{}},M=function(D){return T(D,x)}}c.exports={set:h,get:u,has:M,enforce:function(D){return M(D)?u(D):h(D,{})},getterFor:function(D){return function(r){var w;if(!Y(r)||(w=u(r)).type!==D)throw Q("Incompatible receiver, "+D+" required");return w}}}},(c,d,m)=>{var h=m(7),u=m(24),M=h.WeakMap;c.exports=u(M)&&/native code/.test(String(M))},(c,d,m)=>{var h=m(38),u=m(44),M=h("keys");c.exports=function(e){return M[e]||(M[e]=u(e))}},c=>{c.exports={}},(c,d,m)=>{var h=m(42),u=m(60),M=m(8),e=m(48);c.exports=function(n,Y,I){for(var T=u(Y),o=e.f,C=M.f,J=0;J<T.length;J++){var v=T[J];h(n,v)||I&&h(I,v)||o(n,v,C(Y,v))}}},(c,d,m)=>{var h=m(27),u=m(17),M=m(61),e=m(70),n=m(50),Y=u([].concat);c.exports=h("Reflect","ownKeys")||function(I){var T=M.f(n(I)),o=e.f;return o?Y(T,o(I)):T}},(c,d,m)=>{var h=m(62),u=m(69).concat("length","prototype");d.f=Object.getOwnPropertyNames||function(M){return h(M,u)}},(c,d,m)=>{var h=m(17),u=m(42),M=m(15),e=m(63).indexOf,n=m(58),Y=h([].push);c.exports=function(I,T){var o,C=M(I),J=0,v=[];for(o in C)!u(n,o)&&u(C,o)&&Y(v,o);for(;T.length>J;)u(C,o=T[J++])&&(~e(v,o)||Y(v,o));return v}},(c,d,m)=>{var h=m(15),u=m(64),M=m(67),e=function(n){return function(Y,I,T){var o,C=h(Y),J=M(C),v=u(T,J);if(n&&I!=I){for(;J>v;)if((o=C[v++])!=o)return!0}else for(;J>v;v++)if((n||v in C)&&C[v]===I)return n||v||0;return!n&&-1}};c.exports={includes:e(!0),indexOf:e(!1)}},(c,d,m)=>{var h=m(65),u=Math.max,M=Math.min;c.exports=function(e,n){var Y=h(e);return Y<0?u(Y+n,0):M(Y,n)}},(c,d,m)=>{var h=m(66);c.exports=function(u){var M=+u;return M!=M||M===0?0:h(M)}},c=>{var d=Math.ceil,m=Math.floor;c.exports=Math.trunc||function(h){var u=+h;return(u>0?m:d)(u)}},(c,d,m)=>{var h=m(68);c.exports=function(u){return h(u.length)}},(c,d,m)=>{var h=m(65),u=Math.min;c.exports=function(M){return M>0?u(h(M),9007199254740991):0}},c=>{c.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},(c,d)=>{d.f=Object.getOwnPropertySymbols},(c,d,m)=>{var h=m(10),u=m(24),M=/#|\.prototype\./,e=function(o,C){var J=Y[n(o)];return J==T||J!=I&&(u(C)?h(C):!!C)},n=e.normalize=function(o){return String(o).replace(M,".").toLowerCase()},Y=e.data={},I=e.NATIVE="N",T=e.POLYFILL="P";c.exports=e},(c,d,m)=>{var h=m(37),u=m(73),M=m(48).f,e=h("unscopables"),n=Array.prototype;n[e]==null&&M(n,e,{configurable:!0,value:u(null)}),c.exports=function(Y){n[e][Y]=!0}},(c,d,m)=>{var h,u=m(50),M=m(74),e=m(69),n=m(58),Y=m(76),I=m(46),T=m(57),o="prototype",C="script",J=T("IE_PROTO"),v=function(){},Q=function(x){return"<"+C+">"+x+"</"+C+">"},$=function(x){x.write(Q("")),x.close();var D=x.parentWindow.Object;return x=null,D},q=function(){try{h=new ActiveXObject("htmlfile")}catch{}q=typeof document<"u"?document.domain&&h?$(h):function(){var D,r=I("iframe"),w="java"+C+":";return r.style.display="none",Y.appendChild(r),r.src=String(w),(D=r.contentWindow.document).open(),D.write(Q("document.F=Object")),D.close(),D.F}():$(h);for(var x=e.length;x--;)delete q[o][e[x]];return q()};n[J]=!0,c.exports=Object.create||function(x,D){var r;return x!==null?(v[o]=u(x),r=new v,v[o]=null,r[J]=x):r=q(),D===void 0?r:M.f(r,D)}},(c,d,m)=>{var h=m(9),u=m(49),M=m(48),e=m(50),n=m(15),Y=m(75);d.f=h&&!u?Object.defineProperties:function(I,T){e(I);for(var o,C=n(T),J=Y(T),v=J.length,Q=0;v>Q;)M.f(I,o=J[Q++],C[o]);return I}},(c,d,m)=>{var h=m(62),u=m(69);c.exports=Object.keys||function(M){return h(M,u)}},(c,d,m)=>{var h=m(27);c.exports=h("document","documentElement")},(c,d,m)=>{var h=m(7),u=m(17);c.exports=function(M,e){return u(h[M].prototype[e])}},(c,d,m)=>{m(79)},(c,d,m)=>{var h=m(80),u=m(67),M=m(65),e=h.aTypedArray;(0,h.exportTypedArrayMethod)("at",function(n){var Y=e(this),I=u(Y),T=M(n),o=T>=0?T:I+T;return o<0||o>=I?void 0:Y[o]})},(c,d,m)=>{var h,u,M,e=m(81),n=m(9),Y=m(7),I=m(24),T=m(23),o=m(42),C=m(82),J=m(35),v=m(47),Q=m(51),$=m(84),q=m(28),x=m(85),D=m(87),r=m(37),w=m(44),j=m(55),f=j.enforce,sl=j.get,tl=Y.Int8Array,B=tl&&tl.prototype,cl=Y.Uint8ClampedArray,al=cl&&cl.prototype,Tl=tl&&x(tl),nl=B&&x(B),Rl=Object.prototype,E=Y.TypeError,F=r("toStringTag"),H=w("TYPED_ARRAY_TAG"),P="TypedArrayConstructor",g=e&&!!D&&C(Y.opera)!=="Opera",K=!1,il={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},ml={BigInt64Array:8,BigUint64Array:8},Gl=function(Nl){var yl=x(Nl);if(T(yl)){var Xl=sl(yl);return Xl&&o(Xl,P)?Xl[P]:Gl(yl)}},ul=function(Nl){if(!T(Nl))return!1;var yl=C(Nl);return o(il,yl)||o(ml,yl)};for(h in il)(M=(u=Y[h])&&u.prototype)?f(M)[P]=u:g=!1;for(h in ml)(M=(u=Y[h])&&u.prototype)&&(f(M)[P]=u);if((!g||!I(Tl)||Tl===Function.prototype)&&(Tl=function(){throw E("Incorrect invocation")},g))for(h in il)Y[h]&&D(Y[h],Tl);if((!g||!nl||nl===Rl)&&(nl=Tl.prototype,g))for(h in il)Y[h]&&D(Y[h].prototype,nl);if(g&&x(al)!==nl&&D(al,nl),n&&!o(nl,F)){K=!0,$(nl,F,{configurable:!0,get:function(){return T(this)?this[H]:void 0}});for(h in il)Y[h]&&v(Y[h],H,h)}c.exports={NATIVE_ARRAY_BUFFER_VIEWS:g,TYPED_ARRAY_TAG:K&&H,aTypedArray:function(Nl){if(ul(Nl))return Nl;throw E("Target is not a typed array")},aTypedArrayConstructor:function(Nl){if(I(Nl)&&(!D||q(Tl,Nl)))return Nl;throw E(J(Nl)+" is not a typed array constructor")},exportTypedArrayMethod:function(Nl,yl,Xl,Wl){if(n){if(Xl)for(var Dl in il){var Ul=Y[Dl];if(Ul&&o(Ul.prototype,Nl))try{delete Ul.prototype[Nl]}catch{try{Ul.prototype[Nl]=yl}catch{}}}nl[Nl]&&!Xl||Q(nl,Nl,Xl?yl:g&&B[Nl]||yl,Wl)}},exportTypedArrayStaticMethod:function(Nl,yl,Xl){var Wl,Dl;if(n){if(D){if(Xl){for(Wl in il)if((Dl=Y[Wl])&&o(Dl,Nl))try{delete Dl[Nl]}catch{}}if(Tl[Nl]&&!Xl)return;try{return Q(Tl,Nl,Xl?yl:g&&Tl[Nl]||yl)}catch{}}for(Wl in il)!(Dl=Y[Wl])||Dl[Nl]&&!Xl||Q(Dl,Nl,yl)}},getTypedArrayConstructor:Gl,isView:function(Nl){if(!T(Nl))return!1;var yl=C(Nl);return yl==="DataView"||o(il,yl)||o(ml,yl)},isTypedArray:ul,TypedArray:Tl,TypedArrayPrototype:nl}},c=>{c.exports=typeof ArrayBuffer<"u"&&typeof DataView<"u"},(c,d,m)=>{var h=m(83),u=m(24),M=m(18),e=m(37)("toStringTag"),n=Object,Y=M(function(){return arguments}())=="Arguments";c.exports=h?M:function(I){var T,o,C;return I===void 0?"Undefined":I===null?"Null":typeof(o=function(J,v){try{return J[v]}catch{}}(T=n(I),e))=="string"?o:Y?M(T):(C=M(T))=="Object"&&u(T.callee)?"Arguments":C}},(c,d,m)=>{var h={};h[m(37)("toStringTag")]="z",c.exports=String(h)==="[object z]"},(c,d,m)=>{var h=m(52),u=m(48);c.exports=function(M,e,n){return n.get&&h(n.get,e,{getter:!0}),n.set&&h(n.set,e,{setter:!0}),u.f(M,e,n)}},(c,d,m)=>{var h=m(42),u=m(24),M=m(43),e=m(57),n=m(86),Y=e("IE_PROTO"),I=Object,T=I.prototype;c.exports=n?I.getPrototypeOf:function(o){var C=M(o);if(h(C,Y))return C[Y];var J=C.constructor;return u(J)&&C instanceof J?J.prototype:C instanceof I?T:null}},(c,d,m)=>{var h=m(10);c.exports=!h(function(){function u(){}return u.prototype.constructor=null,Object.getPrototypeOf(new u)!==u.prototype})},(c,d,m)=>{var h=m(88),u=m(50),M=m(89);c.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,n=!1,Y={};try{(e=h(Object.prototype,"__proto__","set"))(Y,[]),n=Y instanceof Array}catch{}return function(I,T){return u(I),M(T),n?e(I,T):I.__proto__=T,I}}():void 0)},(c,d,m)=>{var h=m(17),u=m(34);c.exports=function(M,e,n){try{return h(u(Object.getOwnPropertyDescriptor(M,e)[n]))}catch{}}},(c,d,m)=>{var h=m(24),u=String,M=TypeError;c.exports=function(e){if(typeof e=="object"||h(e))return e;throw M("Can't set "+u(e)+" as a prototype")}},(c,d,m)=>{m(91),m(98),m(100),m(123),m(125);var h=m(137);c.exports=h.structuredClone},(c,d,m)=>{var h=m(15),u=m(72),M=m(92),e=m(55),n=m(48).f,Y=m(93),I=m(97),T=m(39),o=m(9),C="Array Iterator",J=e.set,v=e.getterFor(C);c.exports=Y(Array,"Array",function($,q){J(this,{type:C,target:h($),index:0,kind:q})},function(){var $=v(this),q=$.target,x=$.kind,D=$.index++;return!q||D>=q.length?($.target=void 0,I(void 0,!0)):I(x=="keys"?D:x=="values"?q[D]:[D,q[D]],!1)},"values");var Q=M.Arguments=M.Array;if(u("keys"),u("values"),u("entries"),!T&&o&&Q.name!=="values")try{n(Q,"name",{value:"values"})}catch{}},c=>{c.exports={}},(c,d,m)=>{var h=m(6),u=m(11),M=m(39),e=m(53),n=m(24),Y=m(94),I=m(85),T=m(87),o=m(96),C=m(47),J=m(51),v=m(37),Q=m(92),$=m(95),q=e.PROPER,x=e.CONFIGURABLE,D=$.IteratorPrototype,r=$.BUGGY_SAFARI_ITERATORS,w=v("iterator"),j="keys",f="values",sl="entries",tl=function(){return this};c.exports=function(B,cl,al,Tl,nl,Rl,E){Y(al,cl,Tl);var F,H,P,g=function(yl){if(yl===nl&&ul)return ul;if(!r&&yl in ml)return ml[yl];switch(yl){case j:return function(){return new al(this,yl)};case f:return function(){return new al(this,yl)};case sl:return function(){return new al(this,yl)}}return function(){return new al(this)}},K=cl+" Iterator",il=!1,ml=B.prototype,Gl=ml[w]||ml["@@iterator"]||nl&&ml[nl],ul=!r&&Gl||g(nl),Nl=cl=="Array"&&ml.entries||Gl;if(Nl&&(F=I(Nl.call(new B)))!==Object.prototype&&F.next&&(M||I(F)===D||(T?T(F,D):n(F[w])||J(F,w,tl)),o(F,K,!0,!0),M&&(Q[K]=tl)),q&&nl==f&&Gl&&Gl.name!==f&&(!M&&x?C(ml,"name",f):(il=!0,ul=function(){return u(Gl,this)})),nl)if(H={values:g(f),keys:Rl?ul:g(j),entries:g(sl)},E)for(P in H)(r||il||!(P in ml))&&J(ml,P,H[P]);else h({target:cl,proto:!0,forced:r||il},H);return M&&!E||ml[w]===ul||J(ml,w,ul,{name:nl}),Q[cl]=ul,H}},(c,d,m)=>{var h=m(95).IteratorPrototype,u=m(73),M=m(14),e=m(96),n=m(92),Y=function(){return this};c.exports=function(I,T,o,C){var J=T+" Iterator";return I.prototype=u(h,{next:M(+!C,o)}),e(I,J,!1,!0),n[J]=Y,I}},(c,d,m)=>{var h,u,M,e=m(10),n=m(24),Y=m(23),I=m(73),T=m(85),o=m(51),C=m(37),J=m(39),v=C("iterator"),Q=!1;[].keys&&("next"in(M=[].keys())?(u=T(T(M)))!==Object.prototype&&(h=u):Q=!0),!Y(h)||e(function(){var $={};return h[v].call($)!==$})?h={}:J&&(h=I(h)),n(h[v])||o(h,v,function(){return this}),c.exports={IteratorPrototype:h,BUGGY_SAFARI_ITERATORS:Q}},(c,d,m)=>{var h=m(48).f,u=m(42),M=m(37)("toStringTag");c.exports=function(e,n,Y){e&&!Y&&(e=e.prototype),e&&!u(e,M)&&h(e,M,{configurable:!0,value:n})}},c=>{c.exports=function(d,m){return{value:d,done:m}}},(c,d,m)=>{var h=m(83),u=m(51),M=m(99);h||u(Object.prototype,"toString",M,{unsafe:!0})},(c,d,m)=>{var h=m(83),u=m(82);c.exports=h?{}.toString:function(){return"[object "+u(this)+"]"}},(c,d,m)=>{m(101)},(c,d,m)=>{m(102)("Map",function(h){return function(){return h(this,arguments.length?arguments[0]:void 0)}},m(120))},(c,d,m)=>{var h=m(6),u=m(7),M=m(17),e=m(71),n=m(51),Y=m(103),I=m(110),T=m(117),o=m(24),C=m(20),J=m(23),v=m(10),Q=m(118),$=m(96),q=m(119);c.exports=function(x,D,r){var w=x.indexOf("Map")!==-1,j=x.indexOf("Weak")!==-1,f=w?"set":"add",sl=u[x],tl=sl&&sl.prototype,B=sl,cl={},al=function(H){var P=M(tl[H]);n(tl,H,H=="add"?function(g){return P(this,g===0?0:g),this}:H=="delete"?function(g){return!(j&&!J(g))&&P(this,g===0?0:g)}:H=="get"?function(g){return j&&!J(g)?void 0:P(this,g===0?0:g)}:H=="has"?function(g){return!(j&&!J(g))&&P(this,g===0?0:g)}:function(g,K){return P(this,g===0?0:g,K),this})};if(e(x,!o(sl)||!(j||tl.forEach&&!v(function(){new sl().entries().next()}))))B=r.getConstructor(D,x,w,f),Y.enable();else if(e(x,!0)){var Tl=new B,nl=Tl[f](j?{}:-0,1)!=Tl,Rl=v(function(){Tl.has(1)}),E=Q(function(H){new sl(H)}),F=!j&&v(function(){for(var H=new sl,P=5;P--;)H[f](P,P);return!H.has(-0)});E||((B=D(function(H,P){T(H,tl);var g=q(new sl,H,B);return C(P)||I(P,g[f],{that:g,AS_ENTRIES:w}),g})).prototype=tl,tl.constructor=B),(Rl||F)&&(al("delete"),al("has"),w&&al("get")),(F||nl)&&al(f),j&&tl.clear&&delete tl.clear}return cl[x]=B,h({global:!0,constructor:!0,forced:B!=sl},cl),$(B,x),j||r.setStrong(B,x,w),B}},(c,d,m)=>{var h=m(6),u=m(17),M=m(58),e=m(23),n=m(42),Y=m(48).f,I=m(61),T=m(104),o=m(107),C=m(44),J=m(109),v=!1,Q=C("meta"),$=0,q=function(D){Y(D,Q,{value:{objectID:"O"+$++,weakData:{}}})},x=c.exports={enable:function(){x.enable=function(){},v=!0;var D=I.f,r=u([].splice),w={};w[Q]=1,D(w).length&&(I.f=function(j){for(var f=D(j),sl=0,tl=f.length;sl<tl;sl++)if(f[sl]===Q){r(f,sl,1);break}return f},h({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:T.f}))},fastKey:function(D,r){if(!e(D))return typeof D=="symbol"?D:(typeof D=="string"?"S":"P")+D;if(!n(D,Q)){if(!o(D))return"F";if(!r)return"E";q(D)}return D[Q].objectID},getWeakData:function(D,r){if(!n(D,Q)){if(!o(D))return!0;if(!r)return!1;q(D)}return D[Q].weakData},onFreeze:function(D){return J&&v&&o(D)&&!n(D,Q)&&q(D),D}};M[Q]=!0},(c,d,m)=>{var h=m(18),u=m(15),M=m(61).f,e=m(105),n=typeof window=="object"&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];c.exports.f=function(Y){return n&&h(Y)=="Window"?function(I){try{return M(I)}catch{return e(n)}}(Y):M(u(Y))}},(c,d,m)=>{var h=m(64),u=m(67),M=m(106),e=Array,n=Math.max;c.exports=function(Y,I,T){for(var o=u(Y),C=h(I,o),J=h(T===void 0?o:T,o),v=e(n(J-C,0)),Q=0;C<J;C++,Q++)M(v,Q,Y[C]);return v.length=Q,v}},(c,d,m)=>{var h=m(21),u=m(48),M=m(14);c.exports=function(e,n,Y){var I=h(n);I in e?u.f(e,I,M(0,Y)):e[I]=Y}},(c,d,m)=>{var h=m(10),u=m(23),M=m(18),e=m(108),n=Object.isExtensible,Y=h(function(){});c.exports=Y||e?function(I){return!!u(I)&&(!e||M(I)!="ArrayBuffer")&&(!n||n(I))}:n},(c,d,m)=>{var h=m(10);c.exports=h(function(){if(typeof ArrayBuffer=="function"){var u=new ArrayBuffer(8);Object.isExtensible(u)&&Object.defineProperty(u,"a",{value:8})}})},(c,d,m)=>{var h=m(10);c.exports=!h(function(){return Object.isExtensible(Object.preventExtensions({}))})},(c,d,m)=>{var h=m(111),u=m(11),M=m(50),e=m(35),n=m(113),Y=m(67),I=m(28),T=m(114),o=m(115),C=m(116),J=TypeError,v=function($,q){this.stopped=$,this.result=q},Q=v.prototype;c.exports=function($,q,x){var D,r,w,j,f,sl,tl,B=x&&x.that,cl=!(!x||!x.AS_ENTRIES),al=!(!x||!x.IS_RECORD),Tl=!(!x||!x.IS_ITERATOR),nl=!(!x||!x.INTERRUPTED),Rl=h(q,B),E=function(H){return D&&C(D,"normal",H),new v(!0,H)},F=function(H){return cl?(M(H),nl?Rl(H[0],H[1],E):Rl(H[0],H[1])):nl?Rl(H,E):Rl(H)};if(al)D=$.iterator;else if(Tl)D=$;else{if(!(r=o($)))throw J(e($)+" is not iterable");if(n(r)){for(w=0,j=Y($);j>w;w++)if((f=F($[w]))&&I(Q,f))return f;return new v(!1)}D=T($,r)}for(sl=al?$.next:D.next;!(tl=u(sl,D)).done;){try{f=F(tl.value)}catch(H){C(D,"throw",H)}if(typeof f=="object"&&f&&I(Q,f))return f}return new v(!1)}},(c,d,m)=>{var h=m(112),u=m(34),M=m(12),e=h(h.bind);c.exports=function(n,Y){return u(n),Y===void 0?n:M?e(n,Y):function(){return n.apply(Y,arguments)}}},(c,d,m)=>{var h=m(18),u=m(17);c.exports=function(M){if(h(M)==="Function")return u(M)}},(c,d,m)=>{var h=m(37),u=m(92),M=h("iterator"),e=Array.prototype;c.exports=function(n){return n!==void 0&&(u.Array===n||e[M]===n)}},(c,d,m)=>{var h=m(11),u=m(34),M=m(50),e=m(35),n=m(115),Y=TypeError;c.exports=function(I,T){var o=arguments.length<2?n(I):T;if(u(o))return M(h(o,I));throw Y(e(I)+" is not iterable")}},(c,d,m)=>{var h=m(82),u=m(33),M=m(20),e=m(92),n=m(37)("iterator");c.exports=function(Y){if(!M(Y))return u(Y,n)||u(Y,"@@iterator")||e[h(Y)]}},(c,d,m)=>{var h=m(11),u=m(50),M=m(33);c.exports=function(e,n,Y){var I,T;u(e);try{if(!(I=M(e,"return"))){if(n==="throw")throw Y;return Y}I=h(I,e)}catch(o){T=!0,I=o}if(n==="throw")throw Y;if(T)throw I;return u(I),Y}},(c,d,m)=>{var h=m(28),u=TypeError;c.exports=function(M,e){if(h(e,M))return M;throw u("Incorrect invocation")}},(c,d,m)=>{var h=m(37)("iterator"),u=!1;try{var M=0,e={next:function(){return{done:!!M++}},return:function(){u=!0}};e[h]=function(){return this},Array.from(e,function(){throw 2})}catch{}c.exports=function(n,Y){if(!Y&&!u)return!1;var I=!1;try{var T={};T[h]=function(){return{next:function(){return{done:I=!0}}}},n(T)}catch{}return I}},(c,d,m)=>{var h=m(24),u=m(23),M=m(87);c.exports=function(e,n,Y){var I,T;return M&&h(I=n.constructor)&&I!==Y&&u(T=I.prototype)&&T!==Y.prototype&&M(e,T),e}},(c,d,m)=>{var h=m(73),u=m(84),M=m(121),e=m(111),n=m(117),Y=m(20),I=m(110),T=m(93),o=m(97),C=m(122),J=m(9),v=m(103).fastKey,Q=m(55),$=Q.set,q=Q.getterFor;c.exports={getConstructor:function(x,D,r,w){var j=x(function(cl,al){n(cl,f),$(cl,{type:D,index:h(null),first:void 0,last:void 0,size:0}),J||(cl.size=0),Y(al)||I(al,cl[w],{that:cl,AS_ENTRIES:r})}),f=j.prototype,sl=q(D),tl=function(cl,al,Tl){var nl,Rl,E=sl(cl),F=B(cl,al);return F?F.value=Tl:(E.last=F={index:Rl=v(al,!0),key:al,value:Tl,previous:nl=E.last,next:void 0,removed:!1},E.first||(E.first=F),nl&&(nl.next=F),J?E.size++:cl.size++,Rl!=="F"&&(E.index[Rl]=F)),cl},B=function(cl,al){var Tl,nl=sl(cl),Rl=v(al);if(Rl!=="F")return nl.index[Rl];for(Tl=nl.first;Tl;Tl=Tl.next)if(Tl.key==al)return Tl};return M(f,{clear:function(){for(var cl=sl(this),al=cl.index,Tl=cl.first;Tl;)Tl.removed=!0,Tl.previous&&(Tl.previous=Tl.previous.next=void 0),delete al[Tl.index],Tl=Tl.next;cl.first=cl.last=void 0,J?cl.size=0:this.size=0},delete:function(cl){var al=this,Tl=sl(al),nl=B(al,cl);if(nl){var Rl=nl.next,E=nl.previous;delete Tl.index[nl.index],nl.removed=!0,E&&(E.next=Rl),Rl&&(Rl.previous=E),Tl.first==nl&&(Tl.first=Rl),Tl.last==nl&&(Tl.last=E),J?Tl.size--:al.size--}return!!nl},forEach:function(cl){for(var al,Tl=sl(this),nl=e(cl,arguments.length>1?arguments[1]:void 0);al=al?al.next:Tl.first;)for(nl(al.value,al.key,this);al&&al.removed;)al=al.previous},has:function(cl){return!!B(this,cl)}}),M(f,r?{get:function(cl){var al=B(this,cl);return al&&al.value},set:function(cl,al){return tl(this,cl===0?0:cl,al)}}:{add:function(cl){return tl(this,cl=cl===0?0:cl,cl)}}),J&&u(f,"size",{configurable:!0,get:function(){return sl(this).size}}),j},setStrong:function(x,D,r){var w=D+" Iterator",j=q(D),f=q(w);T(x,D,function(sl,tl){$(this,{type:w,target:sl,state:j(sl),kind:tl,last:void 0})},function(){for(var sl=f(this),tl=sl.kind,B=sl.last;B&&B.removed;)B=B.previous;return!sl.target||!(sl.last=B=B?B.next:sl.state.first)?(sl.target=void 0,o(void 0,!0)):o(tl=="keys"?B.key:tl=="values"?B.value:[B.key,B.value],!1)},r?"entries":"values",!r,!0),C(D)}}},(c,d,m)=>{var h=m(51);c.exports=function(u,M,e){for(var n in M)h(u,n,M[n],e);return u}},(c,d,m)=>{var h=m(27),u=m(84),M=m(37),e=m(9),n=M("species");c.exports=function(Y){var I=h(Y);e&&I&&!I[n]&&u(I,n,{configurable:!0,get:function(){return this}})}},(c,d,m)=>{m(124)},(c,d,m)=>{m(102)("Set",function(h){return function(){return h(this,arguments.length?arguments[0]:void 0)}},m(120))},(c,d,m)=>{var h,u=m(39),M=m(6),e=m(7),n=m(27),Y=m(17),I=m(10),T=m(44),o=m(24),C=m(126),J=m(20),v=m(23),Q=m(26),$=m(110),q=m(50),x=m(82),D=m(42),r=m(106),w=m(47),j=m(67),f=m(127),sl=m(128),tl=m(130),B=m(131),cl=m(132),al=m(133),Tl=e.Object,nl=e.Array,Rl=e.Date,E=e.Error,F=e.EvalError,H=e.RangeError,P=e.ReferenceError,g=e.SyntaxError,K=e.TypeError,il=e.URIError,ml=e.PerformanceMark,Gl=e.WebAssembly,ul=Gl&&Gl.CompileError||E,Nl=Gl&&Gl.LinkError||E,yl=Gl&&Gl.RuntimeError||E,Xl=n("DOMException"),Wl=tl.Map,Dl=tl.has,Ul=tl.get,ll=tl.set,V=B.Set,O=B.add,A=n("Object","keys"),_=Y([].push),dl=Y((!0).valueOf),Ml=Y(1 .valueOf),Yl=Y("".valueOf),Vl=Y(Rl.prototype.getTime),Ll=T("structuredClone"),ol="DataCloneError",zl="Transferring",Il=function(xl){return!I(function(){var Ql=new e.Set([7]),Pl=xl(Ql),Al=xl(Tl(7));return Pl==Ql||!Pl.has(7)||typeof Al!="object"||Al!=7})&&xl},Sl=function(xl,Ql){return!I(function(){var Pl=new Ql,Al=xl({a:Pl,b:Pl});return!(Al&&Al.a===Al.b&&Al.a instanceof Ql&&Al.a.stack===Pl.stack)})},Jl=e.structuredClone,Cl=u||!Sl(Jl,E)||!Sl(Jl,Xl)||(h=Jl,!!I(function(){var xl=h(new e.AggregateError([1],Ll,{cause:3}));return xl.name!="AggregateError"||xl.errors[0]!=1||xl.message!=Ll||xl.cause!=3})),el=!Jl&&Il(function(xl){return new ml(Ll,{detail:xl}).detail}),wl=Il(Jl)||el,gl=function(xl){throw new Xl("Uncloneable type: "+xl,ol)},Hl=function(xl,Ql){throw new Xl((Ql||"Cloning")+" of "+xl+" cannot be properly polyfilled in this engine",ol)},ZZ=function(xl,Ql){return wl||Hl(Ql),wl(xl)},vl=function(xl,Ql){if(Q(xl)&&gl("Symbol"),!v(xl))return xl;if(Ql){if(Dl(Ql,xl))return Ul(Ql,xl)}else Ql=new Wl;var Pl,Al,El,uZ,lZ,_l,iZ,pl,jl,Ol,Kl,Fl=x(xl),rl=!1;switch(Fl){case"Array":El=nl(j(xl)),rl=!0;break;case"Object":El={},rl=!0;break;case"Map":El=new Wl,rl=!0;break;case"Set":El=new V,rl=!0;break;case"RegExp":El=new RegExp(xl.source,sl(xl));break;case"Error":switch(Al=xl.name){case"AggregateError":El=n("AggregateError")([]);break;case"EvalError":El=F();break;case"RangeError":El=H();break;case"ReferenceError":El=P();break;case"SyntaxError":El=g();break;case"TypeError":El=K();break;case"URIError":El=il();break;case"CompileError":El=ul();break;case"LinkError":El=Nl();break;case"RuntimeError":El=yl();break;default:El=E()}rl=!0;break;case"DOMException":El=new Xl(xl.message,xl.name),rl=!0;break;case"DataView":case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":case"BigInt64Array":case"BigUint64Array":Pl=e[Fl],v(Pl)||Hl(Fl),El=new Pl(vl(xl.buffer,Ql),xl.byteOffset,Fl==="DataView"?xl.byteLength:xl.length);break;case"DOMQuad":try{El=new DOMQuad(vl(xl.p1,Ql),vl(xl.p2,Ql),vl(xl.p3,Ql),vl(xl.p4,Ql))}catch{El=ZZ(xl,Fl)}break;case"File":if(wl)try{El=wl(xl),x(El)!==Fl&&(El=void 0)}catch{}if(!El)try{El=new File([xl],xl.name,xl)}catch{}El||Hl(Fl);break;case"FileList":if(uZ=function(){var Bl;try{Bl=new e.DataTransfer}catch{try{Bl=new e.ClipboardEvent("").clipboardData}catch{}}return Bl&&Bl.items&&Bl.files?Bl:null}()){for(lZ=0,_l=j(xl);lZ<_l;lZ++)uZ.items.add(vl(xl[lZ],Ql));El=uZ.files}else El=ZZ(xl,Fl);break;case"ImageData":try{El=new ImageData(vl(xl.data,Ql),xl.width,xl.height,{colorSpace:xl.colorSpace})}catch{El=ZZ(xl,Fl)}break;default:if(wl)El=wl(xl);else switch(Fl){case"BigInt":El=Tl(xl.valueOf());break;case"Boolean":El=Tl(dl(xl));break;case"Number":El=Tl(Ml(xl));break;case"String":El=Tl(Yl(xl));break;case"Date":El=new Rl(Vl(xl));break;case"ArrayBuffer":(Pl=e.DataView)||typeof xl.slice=="function"||Hl(Fl);try{if(typeof xl.slice!="function"||xl.resizable)for(_l=xl.byteLength,Kl=("maxByteLength"in xl)?{maxByteLength:xl.maxByteLength}:void 0,El=new ArrayBuffer(_l,Kl),jl=new Pl(xl),Ol=new Pl(El),lZ=0;lZ<_l;lZ++)Ol.setUint8(lZ,jl.getUint8(lZ));else El=xl.slice(0)}catch{throw new Xl("ArrayBuffer is detached",ol)}break;case"SharedArrayBuffer":El=xl;break;case"Blob":try{El=xl.slice(0,xl.size,xl.type)}catch{Hl(Fl)}break;case"DOMPoint":case"DOMPointReadOnly":Pl=e[Fl];try{El=Pl.fromPoint?Pl.fromPoint(xl):new Pl(xl.x,xl.y,xl.z,xl.w)}catch{Hl(Fl)}break;case"DOMRect":case"DOMRectReadOnly":Pl=e[Fl];try{El=Pl.fromRect?Pl.fromRect(xl):new Pl(xl.x,xl.y,xl.width,xl.height)}catch{Hl(Fl)}break;case"DOMMatrix":case"DOMMatrixReadOnly":Pl=e[Fl];try{El=Pl.fromMatrix?Pl.fromMatrix(xl):new Pl(xl)}catch{Hl(Fl)}break;case"AudioData":case"VideoFrame":o(xl.clone)||Hl(Fl);try{El=xl.clone()}catch{gl(Fl)}break;case"CropTarget":case"CryptoKey":case"FileSystemDirectoryHandle":case"FileSystemFileHandle":case"FileSystemHandle":case"GPUCompilationInfo":case"GPUCompilationMessage":case"ImageBitmap":case"RTCCertificate":case"WebAssembly.Module":Hl(Fl);default:gl(Fl)}}if(ll(Ql,xl,El),rl)switch(Fl){case"Array":case"Object":for(iZ=A(xl),lZ=0,_l=j(iZ);lZ<_l;lZ++)pl=iZ[lZ],r(El,pl,vl(xl[pl],Ql));break;case"Map":xl.forEach(function(Bl,fl){ll(El,vl(fl,Ql),vl(Bl,Ql))});break;case"Set":xl.forEach(function(Bl){O(El,vl(Bl,Ql))});break;case"Error":w(El,"message",vl(xl.message,Ql)),D(xl,"cause")&&w(El,"cause",vl(xl.cause,Ql)),Al=="AggregateError"&&(El.errors=vl(xl.errors,Ql));case"DOMException":cl&&w(El,"stack",vl(xl.stack,Ql))}return El};M({global:!0,enumerable:!0,sham:!al,forced:Cl},{structuredClone:function(xl){var Ql,Pl=f(arguments.length,1)>1&&!J(arguments[1])?q(arguments[1]):void 0,Al=Pl?Pl.transfer:void 0;return Al!==void 0&&function(El,uZ){if(!v(El))throw K("Transfer option cannot be converted to a sequence");var lZ=[];$(El,function(Bl){_(lZ,q(Bl))});var _l,iZ,pl,jl,Ol,Kl,Fl=0,rl=j(lZ);if(al)for(jl=Jl(lZ,{transfer:lZ});Fl<rl;)ll(uZ,lZ[Fl],jl[Fl++]);else for(;Fl<rl;){if(_l=lZ[Fl++],Dl(uZ,_l))throw new Xl("Duplicate transferable",ol);switch(iZ=x(_l)){case"ImageBitmap":pl=e.OffscreenCanvas,C(pl)||Hl(iZ,zl);try{(Kl=new pl(_l.width,_l.height)).getContext("bitmaprenderer").transferFromImageBitmap(_l),Ol=Kl.transferToImageBitmap()}catch{}break;case"AudioData":case"VideoFrame":o(_l.clone)&&o(_l.close)||Hl(iZ,zl);try{Ol=_l.clone(),_l.close()}catch{}break;case"ArrayBuffer":o(_l.transfer)||Hl(iZ,zl),Ol=_l.transfer();break;case"MediaSourceHandle":case"MessagePort":case"OffscreenCanvas":case"ReadableStream":case"TransformStream":case"WritableStream":Hl(iZ,zl)}if(Ol===void 0)throw new Xl("This object cannot be transferred: "+iZ,ol);ll(uZ,_l,Ol)}}(Al,Ql=new Wl),vl(xl,Ql)}})},(c,d,m)=>{var h=m(17),u=m(10),M=m(24),e=m(82),n=m(27),Y=m(54),I=function(){},T=[],o=n("Reflect","construct"),C=/^\s*(?:class|function)\b/,J=h(C.exec),v=!C.exec(I),Q=function(q){if(!M(q))return!1;try{return o(I,T,q),!0}catch{return!1}},$=function(q){if(!M(q))return!1;switch(e(q)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return v||!!J(C,Y(q))}catch{return!0}};$.sham=!0,c.exports=!o||u(function(){var q;return Q(Q.call)||!Q(Object)||!Q(function(){q=!0})||q})?$:Q},c=>{var d=TypeError;c.exports=function(m,h){if(m<h)throw d("Not enough arguments");return m}},(c,d,m)=>{var h=m(11),u=m(42),M=m(28),e=m(129),n=RegExp.prototype;c.exports=function(Y){var I=Y.flags;return I!==void 0||"flags"in n||u(Y,"flags")||!M(n,Y)?I:h(e,Y)}},(c,d,m)=>{var h=m(50);c.exports=function(){var u=h(this),M="";return u.hasIndices&&(M+="d"),u.global&&(M+="g"),u.ignoreCase&&(M+="i"),u.multiline&&(M+="m"),u.dotAll&&(M+="s"),u.unicode&&(M+="u"),u.unicodeSets&&(M+="v"),u.sticky&&(M+="y"),M}},(c,d,m)=>{var h=m(17),u=Map.prototype;c.exports={Map,set:h(u.set),get:h(u.get),has:h(u.has),remove:h(u.delete),proto:u}},(c,d,m)=>{var h=m(17),u=Set.prototype;c.exports={Set,add:h(u.add),has:h(u.has),remove:h(u.delete),proto:u}},(c,d,m)=>{var h=m(10),u=m(14);c.exports=!h(function(){var M=Error("a");return"stack"in M?(Object.defineProperty(M,"stack",u(1,7)),M.stack!==7):!0})},(c,d,m)=>{var h=m(7),u=m(10),M=m(31),e=m(134),n=m(135),Y=m(136),I=h.structuredClone;c.exports=!!I&&!u(function(){if(n&&M>92||Y&&M>94||e&&M>97)return!1;var T=new ArrayBuffer(8),o=I(T,{transfer:[T]});return T.byteLength!=0||o.byteLength!=8})},(c,d,m)=>{var h=m(135),u=m(136);c.exports=!h&&!u&&typeof window=="object"&&typeof document=="object"},c=>{c.exports=typeof Deno=="object"&&Deno&&typeof Deno.version=="object"},(c,d,m)=>{var h=m(18);c.exports=typeof process<"u"&&h(process)=="process"},(c,d,m)=>{var h=m(7);c.exports=h},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{var S,l,Z,t,dZ,z,MZ,N,G,W,i,y,U,X,TZ,p,k,VZ,s,L;Object.defineProperty(exports,"__esModule",{value:!0}),exports.build=exports.RenderTask=exports.PDFWorkerUtil=exports.PDFWorker=exports.PDFPageProxy=exports.PDFDocumentProxy=exports.PDFDocumentLoadingTask=exports.PDFDataRangeTransport=exports.LoopbackPort=exports.DefaultStandardFontDataFactory=exports.DefaultFilterFactory=exports.DefaultCanvasFactory=exports.DefaultCMapReaderFactory=void 0,exports.getDocument=getDocument,exports.version=void 0;var _util=__w_pdfjs_require__(1),_annotation_storage=__w_pdfjs_require__(139),_display_utils=__w_pdfjs_require__(142),_font_loader=__w_pdfjs_require__(145),_canvas=__w_pdfjs_require__(146),_worker_options=__w_pdfjs_require__(149),_is_node=__w_pdfjs_require__(3),_message_handler=__w_pdfjs_require__(150),_metadata=__w_pdfjs_require__(151),_optional_content_config=__w_pdfjs_require__(152),_transport_stream=__w_pdfjs_require__(153),_xfa_text=__w_pdfjs_require__(154);const DEFAULT_RANGE_CHUNK_SIZE=65536,RENDERING_CANCELLED_TIMEOUT=100,DELAYED_CLEANUP_TIMEOUT=5e3;let DefaultCanvasFactory=_display_utils.DOMCanvasFactory;exports.DefaultCanvasFactory=DefaultCanvasFactory;let DefaultCMapReaderFactory=_display_utils.DOMCMapReaderFactory;exports.DefaultCMapReaderFactory=DefaultCMapReaderFactory;let DefaultFilterFactory=_display_utils.DOMFilterFactory;exports.DefaultFilterFactory=DefaultFilterFactory;let DefaultStandardFontDataFactory=_display_utils.DOMStandardFontDataFactory,createPDFNetworkStream;if(exports.DefaultStandardFontDataFactory=DefaultStandardFontDataFactory,_is_node.isNodeJS){const{NodeCanvasFactory:c,NodeCMapReaderFactory:d,NodeFilterFactory:m,NodeStandardFontDataFactory:h}=__w_pdfjs_require__(155);exports.DefaultCanvasFactory=DefaultCanvasFactory=c,exports.DefaultCMapReaderFactory=DefaultCMapReaderFactory=d,exports.DefaultFilterFactory=DefaultFilterFactory=m,exports.DefaultStandardFontDataFactory=DefaultStandardFontDataFactory=h}if(_is_node.isNodeJS){const{PDFNodeStream:c}=__w_pdfjs_require__(156);createPDFNetworkStream=d=>new c(d)}else{const{PDFNetworkStream:c}=__w_pdfjs_require__(159),{PDFFetchStream:d}=__w_pdfjs_require__(160);createPDFNetworkStream=m=>(0,_display_utils.isValidFetchUrl)(m.url)?new d(m):new c(m)}function getDocument(c){if(typeof c=="string"||c instanceof URL?c={url:c}:(0,_util.isArrayBuffer)(c)&&(c={data:c}),typeof c!="object")throw new Error("Invalid parameter in getDocument, need parameter object.");if(!c.url&&!c.data&&!c.range)throw new Error("Invalid parameter object: need either .data, .range or .url");const d=new PDFDocumentLoadingTask,{docId:m}=d,h=c.url?getUrlProp(c.url):null,u=c.data?getDataProp(c.data):null,M=c.httpHeaders||null,e=c.withCredentials===!0,n=c.password??null,Y=c.range instanceof PDFDataRangeTransport?c.range:null,I=Number.isInteger(c.rangeChunkSize)&&c.rangeChunkSize>0?c.rangeChunkSize:DEFAULT_RANGE_CHUNK_SIZE;let T=c.worker instanceof PDFWorker?c.worker:null;const o=c.verbosity,C=typeof c.docBaseUrl!="string"||(0,_display_utils.isDataScheme)(c.docBaseUrl)?null:c.docBaseUrl,J=typeof c.cMapUrl=="string"?c.cMapUrl:null,v=c.cMapPacked!==!1,Q=c.CMapReaderFactory||DefaultCMapReaderFactory,$=typeof c.standardFontDataUrl=="string"?c.standardFontDataUrl:null,q=c.StandardFontDataFactory||DefaultStandardFontDataFactory,x=c.stopAtErrors!==!0,D=Number.isInteger(c.maxImageSize)&&c.maxImageSize>-1?c.maxImageSize:-1,r=c.isEvalSupported!==!1,w=typeof c.isOffscreenCanvasSupported=="boolean"?c.isOffscreenCanvasSupported:!_is_node.isNodeJS,j=Number.isInteger(c.canvasMaxAreaInBytes)?c.canvasMaxAreaInBytes:-1,f=typeof c.disableFontFace=="boolean"?c.disableFontFace:_is_node.isNodeJS,sl=c.fontExtraProperties===!0,tl=c.enableXfa===!0,B=c.ownerDocument||globalThis.document,cl=c.disableRange===!0,al=c.disableStream===!0,Tl=c.disableAutoFetch===!0,nl=c.pdfBug===!0,Rl=Y?Y.length:c.length??NaN,E=typeof c.useSystemFonts=="boolean"?c.useSystemFonts:!_is_node.isNodeJS&&!f,F=typeof c.useWorkerFetch=="boolean"?c.useWorkerFetch:Q===_display_utils.DOMCMapReaderFactory&&q===_display_utils.DOMStandardFontDataFactory&&(0,_display_utils.isValidFetchUrl)(J,document.baseURI)&&(0,_display_utils.isValidFetchUrl)($,document.baseURI),H=c.canvasFactory||new DefaultCanvasFactory({ownerDocument:B}),P=c.filterFactory||new DefaultFilterFactory({docId:m,ownerDocument:B});(0,_util.setVerbosityLevel)(o);const g={canvasFactory:H,filterFactory:P};if(F||(g.cMapReaderFactory=new Q({baseUrl:J,isCompressed:v}),g.standardFontDataFactory=new q({baseUrl:$})),!T){const ml={verbosity:o,port:_worker_options.GlobalWorkerOptions.workerPort};T=ml.port?PDFWorker.fromPort(ml):new PDFWorker(ml),d._worker=T}const K={docId:m,apiVersion:"3.7.107",data:u,password:n,disableAutoFetch:Tl,rangeChunkSize:I,length:Rl,docBaseUrl:C,enableXfa:tl,evaluatorOptions:{maxImageSize:D,disableFontFace:f,ignoreErrors:x,isEvalSupported:r,isOffscreenCanvasSupported:w,canvasMaxAreaInBytes:j,fontExtraProperties:sl,useSystemFonts:E,cMapUrl:F?J:null,standardFontDataUrl:F?$:null}},il={ignoreErrors:x,isEvalSupported:r,disableFontFace:f,fontExtraProperties:sl,enableXfa:tl,ownerDocument:B,disableAutoFetch:Tl,pdfBug:nl,styleElement:null};return T.promise.then(function(){if(d.destroyed)throw new Error("Loading aborted");const ml=_fetchDocument(T,K),Gl=new Promise(function(ul){let Nl;Y?Nl=new _transport_stream.PDFDataTransportStream({length:Rl,initialData:Y.initialData,progressiveDone:Y.progressiveDone,contentDispositionFilename:Y.contentDispositionFilename,disableRange:cl,disableStream:al},Y):u||(Nl=createPDFNetworkStream({url:h,length:Rl,httpHeaders:M,withCredentials:e,rangeChunkSize:I,disableRange:cl,disableStream:al})),ul(Nl)});return Promise.all([ml,Gl]).then(function(ul){let[Nl,yl]=ul;if(d.destroyed)throw new Error("Loading aborted");const Xl=new _message_handler.MessageHandler(m,Nl,T.port),Wl=new WorkerTransport(Xl,d,yl,il,g);d._transport=Wl,Xl.send("Ready",null)})}).catch(d._capability.reject),d}async function _fetchDocument(c,d){if(c.destroyed)throw new Error("Worker was destroyed");const m=await c.messageHandler.sendWithPromise("GetDocRequest",d,d.data?[d.data.buffer]:null);if(c.destroyed)throw new Error("Worker was destroyed");return m}function getUrlProp(c){if(c instanceof URL)return c.href;try{return new URL(c,window.location).href}catch{if(_is_node.isNodeJS&&typeof c=="string")return c}throw new Error("Invalid PDF url data: either string or URL-object is expected in the url property.")}function getDataProp(c){if(_is_node.isNodeJS&&typeof Buffer<"u"&&c instanceof Buffer)return(0,_display_utils.deprecated)("Please provide binary data as `Uint8Array`, rather than `Buffer`."),new Uint8Array(c);if(c instanceof Uint8Array&&c.byteLength===c.buffer.byteLength)return c;if(typeof c=="string")return(0,_util.stringToBytes)(c);if(typeof c=="object"&&!isNaN(c==null?void 0:c.length)||(0,_util.isArrayBuffer)(c))return new Uint8Array(c);throw new Error("Invalid PDF binary data: either TypedArray, string, or array-like object is expected in the data property.")}const a=class{constructor(){this._capability=new _util.PromiseCapability,this._transport=null,this._worker=null,this.docId="d"+hZ(a,S)._++,this.destroyed=!1,this.onPassword=null,this.onProgress=null}get promise(){return this._capability.promise}async destroy(){var c;this.destroyed=!0,await((c=this._transport)===null||c===void 0?void 0:c.destroy()),this._transport=null,this._worker&&(this._worker.destroy(),this._worker=null)}};let PDFDocumentLoadingTask=a;S=new WeakMap,Zl(PDFDocumentLoadingTask,S,0),exports.PDFDocumentLoadingTask=PDFDocumentLoadingTask;class PDFDataRangeTransport{constructor(d,m){let h=arguments.length>2&&arguments[2]!==void 0&&arguments[2],u=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;this.length=d,this.initialData=m,this.progressiveDone=h,this.contentDispositionFilename=u,this._rangeListeners=[],this._progressListeners=[],this._progressiveReadListeners=[],this._progressiveDoneListeners=[],this._readyCapability=new _util.PromiseCapability}addRangeListener(d){this._rangeListeners.push(d)}addProgressListener(d){this._progressListeners.push(d)}addProgressiveReadListener(d){this._progressiveReadListeners.push(d)}addProgressiveDoneListener(d){this._progressiveDoneListeners.push(d)}onDataRange(d,m){for(const h of this._rangeListeners)h(d,m)}onDataProgress(d,m){this._readyCapability.promise.then(()=>{for(const h of this._progressListeners)h(d,m)})}onDataProgressiveRead(d){this._readyCapability.promise.then(()=>{for(const m of this._progressiveReadListeners)m(d)})}onDataProgressiveDone(){this._readyCapability.promise.then(()=>{for(const d of this._progressiveDoneListeners)d()})}transportReady(){this._readyCapability.resolve()}requestDataRange(d,m){(0,_util.unreachable)("Abstract method PDFDataRangeTransport.requestDataRange")}abort(){}}exports.PDFDataRangeTransport=PDFDataRangeTransport;class PDFDocumentProxy{constructor(d,m){this._pdfInfo=d,this._transport=m}get annotationStorage(){return this._transport.annotationStorage}get filterFactory(){return this._transport.filterFactory}get numPages(){return this._pdfInfo.numPages}get fingerprints(){return this._pdfInfo.fingerprints}get isPureXfa(){return(0,_util.shadow)(this,"isPureXfa",!!this._transport._htmlForXfa)}get allXfaHtml(){return this._transport._htmlForXfa}getPage(d){return this._transport.getPage(d)}getPageIndex(d){return this._transport.getPageIndex(d)}getDestinations(){return this._transport.getDestinations()}getDestination(d){return this._transport.getDestination(d)}getPageLabels(){return this._transport.getPageLabels()}getPageLayout(){return this._transport.getPageLayout()}getPageMode(){return this._transport.getPageMode()}getViewerPreferences(){return this._transport.getViewerPreferences()}getOpenAction(){return this._transport.getOpenAction()}getAttachments(){return this._transport.getAttachments()}getJavaScript(){return this._transport.getJavaScript()}getJSActions(){return this._transport.getDocJSActions()}getOutline(){return this._transport.getOutline()}getOptionalContentConfig(){return this._transport.getOptionalContentConfig()}getPermissions(){return this._transport.getPermissions()}getMetadata(){return this._transport.getMetadata()}getMarkInfo(){return this._transport.getMarkInfo()}getData(){return this._transport.getData()}saveDocument(){return this._transport.saveDocument()}getDownloadInfo(){return this._transport.downloadInfoCapability.promise}cleanup(){let d=arguments.length>0&&arguments[0]!==void 0&&arguments[0];return this._transport.startCleanup(d||this.isPureXfa)}destroy(){return this.loadingTask.destroy()}get loadingParams(){return this._transport.loadingParams}get loadingTask(){return this._transport.loadingTask}getFieldObjects(){return this._transport.getFieldObjects()}hasJSActions(){return this._transport.hasJSActions()}getCalculationOrderIds(){return this._transport.getCalculationOrderIds()}}exports.PDFDocumentProxy=PDFDocumentProxy;class PDFPageProxy{constructor(d,m,h){Zl(this,t),Zl(this,z),Zl(this,l,null),Zl(this,Z,!1);let u=arguments.length>3&&arguments[3]!==void 0&&arguments[3];this._pageIndex=d,this._pageInfo=m,this._transport=h,this._stats=u?new _display_utils.StatTimer:null,this._pdfBug=u,this.commonObjs=h.commonObjs,this.objs=new PDFObjects,this._maybeCleanupAfterRender=!1,this._intentStates=new Map,this.destroyed=!1}get pageNumber(){return this._pageIndex+1}get rotate(){return this._pageInfo.rotate}get ref(){return this._pageInfo.ref}get userUnit(){return this._pageInfo.userUnit}get view(){return this._pageInfo.view}getViewport(){let{scale:d,rotation:m=this.rotate,offsetX:h=0,offsetY:u=0,dontFlip:M=!1}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};return new _display_utils.PageViewport({viewBox:this.view,scale:d,rotation:m,offsetX:h,offsetY:u,dontFlip:M})}getAnnotations(){let{intent:d="display"}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};const m=this._transport.getRenderingIntent(d);return this._transport.getAnnotations(this._pageIndex,m.renderingIntent)}getJSActions(){return this._transport.getPageJSActions(this._pageIndex)}get isPureXfa(){return(0,_util.shadow)(this,"isPureXfa",!!this._transport._htmlForXfa)}async getXfa(){var d;return((d=this._transport._htmlForXfa)===null||d===void 0?void 0:d.children[this._pageIndex])||null}render(d){var m,h;let{canvasContext:u,viewport:M,intent:e="display",annotationMode:n=_util.AnnotationMode.ENABLE,transform:Y=null,background:I=null,optionalContentConfigPromise:T=null,annotationCanvasMap:o=null,pageColors:C=null,printAnnotationStorage:J=null}=d;if((m=arguments[0])!==null&&m!==void 0&&m.canvasFactory)throw new Error("render no longer accepts the `canvasFactory`-option, please pass it to the `getDocument`-function instead.");(h=this._stats)===null||h===void 0||h.time("Overall");const v=this._transport.getRenderingIntent(e,n,J);hl(this,Z,!1),bl(this,z,MZ).call(this),T||(T=this._transport.getOptionalContentConfig());let Q=this._intentStates.get(v.cacheKey);Q||(Q=Object.create(null),this._intentStates.set(v.cacheKey,Q)),Q.streamReaderCancelTimeout&&(clearTimeout(Q.streamReaderCancelTimeout),Q.streamReaderCancelTimeout=null);const $=!!(v.renderingIntent&_util.RenderingIntentFlag.PRINT);if(!Q.displayReadyCapability){var q;Q.displayReadyCapability=new _util.PromiseCapability,Q.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null},(q=this._stats)===null||q===void 0||q.time("Page Request"),this._pumpOperatorList(v)}const x=w=>{var j,f;Q.renderTasks.delete(D),(this._maybeCleanupAfterRender||$)&&hl(this,Z,!0),bl(this,t,dZ).call(this,!$),w?(D.capability.reject(w),this._abortOperatorList({intentState:Q,reason:w instanceof Error?w:new Error(w)})):D.capability.resolve(),(j=this._stats)===null||j===void 0||j.timeEnd("Rendering"),(f=this._stats)===null||f===void 0||f.timeEnd("Overall")},D=new InternalRenderTask({callback:x,params:{canvasContext:u,viewport:M,transform:Y,background:I},objs:this.objs,commonObjs:this.commonObjs,annotationCanvasMap:o,operatorList:Q.operatorList,pageIndex:this._pageIndex,canvasFactory:this._transport.canvasFactory,filterFactory:this._transport.filterFactory,useRequestAnimationFrame:!$,pdfBug:this._pdfBug,pageColors:C});(Q.renderTasks||(Q.renderTasks=new Set)).add(D);const r=D.task;return Promise.all([Q.displayReadyCapability.promise,T]).then(w=>{var j;let[f,sl]=w;R(this,Z)?x():((j=this._stats)===null||j===void 0||j.time("Rendering"),D.initializeGraphics({transparency:f,optionalContentConfig:sl}),D.operatorListChanged())}).catch(x),r}getOperatorList(){let{intent:d="display",annotationMode:m=_util.AnnotationMode.ENABLE,printAnnotationStorage:h=null}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};const u=this._transport.getRenderingIntent(d,m,h,!0);let M,e=this._intentStates.get(u.cacheKey);if(e||(e=Object.create(null),this._intentStates.set(u.cacheKey,e)),!e.opListReadCapability){var n;M=Object.create(null),M.operatorListChanged=function(){e.operatorList.lastChunk&&(e.opListReadCapability.resolve(e.operatorList),e.renderTasks.delete(M))},e.opListReadCapability=new _util.PromiseCapability,(e.renderTasks||(e.renderTasks=new Set)).add(M),e.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null},(n=this._stats)===null||n===void 0||n.time("Page Request"),this._pumpOperatorList(u)}return e.opListReadCapability.promise}streamTextContent(){let{includeMarkedContent:d=!1,disableNormalization:m=!1}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};return this._transport.messageHandler.sendWithStream("GetTextContent",{pageIndex:this._pageIndex,includeMarkedContent:d===!0,disableNormalization:m===!0},{highWaterMark:100,size:h=>h.items.length})}getTextContent(){let d=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};if(this._transport._htmlForXfa)return this.getXfa().then(h=>_xfa_text.XfaText.textContent(h));const m=this.streamTextContent(d);return new Promise(function(h,u){const M=m.getReader(),e={items:[],styles:Object.create(null)};(function n(){M.read().then(function(Y){let{value:I,done:T}=Y;T?h(e):(Object.assign(e.styles,I.styles),e.items.push(...I.items),n())},u)})()})}getStructTree(){return this._transport.getStructTree(this._pageIndex)}_destroy(){this.destroyed=!0;const d=[];for(const m of this._intentStates.values())if(this._abortOperatorList({intentState:m,reason:new Error("Page was destroyed."),force:!0}),!m.opListReadCapability)for(const h of m.renderTasks)d.push(h.completed),h.cancel();return this.objs.clear(),hl(this,Z,!1),bl(this,z,MZ).call(this),Promise.all(d)}cleanup(){let d=arguments.length>0&&arguments[0]!==void 0&&arguments[0];hl(this,Z,!0);const m=bl(this,t,dZ).call(this,!1);return d&&m&&this._stats&&(this._stats=new _display_utils.StatTimer),m}_startRenderPage(d,m){var h,u;const M=this._intentStates.get(m);M&&((h=this._stats)===null||h===void 0||h.timeEnd("Page Request"),(u=M.displayReadyCapability)===null||u===void 0||u.resolve(d))}_renderPageChunk(d,m){for(let h=0,u=d.length;h<u;h++)m.operatorList.fnArray.push(d.fnArray[h]),m.operatorList.argsArray.push(d.argsArray[h]);m.operatorList.lastChunk=d.lastChunk,m.operatorList.separateAnnots=d.separateAnnots;for(const h of m.renderTasks)h.operatorListChanged();d.lastChunk&&bl(this,t,dZ).call(this,!0)}_pumpOperatorList(d){let{renderingIntent:m,cacheKey:h,annotationStorageMap:u}=d;const M=this._transport.messageHandler.sendWithStream("GetOperatorList",{pageIndex:this._pageIndex,intent:m,cacheKey:h,annotationStorage:u}).getReader(),e=this._intentStates.get(h);e.streamReader=M;const n=()=>{M.read().then(Y=>{let{value:I,done:T}=Y;T?e.streamReader=null:this._transport.destroyed||(this._renderPageChunk(I,e),n())},Y=>{if(e.streamReader=null,!this._transport.destroyed){if(e.operatorList){e.operatorList.lastChunk=!0;for(const I of e.renderTasks)I.operatorListChanged();bl(this,t,dZ).call(this,!0)}if(e.displayReadyCapability)e.displayReadyCapability.reject(Y);else{if(!e.opListReadCapability)throw Y;e.opListReadCapability.reject(Y)}}})};n()}_abortOperatorList(d){let{intentState:m,reason:h,force:u=!1}=d;if(m.streamReader){if(m.streamReaderCancelTimeout&&(clearTimeout(m.streamReaderCancelTimeout),m.streamReaderCancelTimeout=null),!u){if(m.renderTasks.size>0)return;if(h instanceof _display_utils.RenderingCancelledException){let M=RENDERING_CANCELLED_TIMEOUT;h.extraDelay>0&&h.extraDelay<1e3&&(M+=h.extraDelay),m.streamReaderCancelTimeout=setTimeout(()=>{m.streamReaderCancelTimeout=null,this._abortOperatorList({intentState:m,reason:h,force:!0})},M);return}}if(m.streamReader.cancel(new _util.AbortException(h.message)).catch(()=>{}),m.streamReader=null,!this._transport.destroyed){for(const[M,e]of this._intentStates)if(e===m){this._intentStates.delete(M);break}this.cleanup()}}}get stats(){return this._stats}}l=new WeakMap,Z=new WeakMap,t=new WeakSet,dZ=function(){let c=arguments.length>0&&arguments[0]!==void 0&&arguments[0];if(bl(this,z,MZ).call(this),!R(this,Z))return!1;if(c)return hl(this,l,setTimeout(()=>{hl(this,l,null),bl(this,t,dZ).call(this,!1)},DELAYED_CLEANUP_TIMEOUT)),!1;for(const{renderTasks:d,operatorList:m}of this._intentStates.values())if(d.size>0||!m.lastChunk)return!1;return this._intentStates.clear(),this.objs.clear(),hl(this,Z,!1),!0},z=new WeakSet,MZ=function(){R(this,l)&&(clearTimeout(R(this,l)),hl(this,l,null))},exports.PDFPageProxy=PDFPageProxy;class LoopbackPort{constructor(){Zl(this,N,new Set),Zl(this,G,Promise.resolve())}postMessage(d,m){const h={data:structuredClone(d,null)};R(this,G).then(()=>{for(const u of R(this,N))u.call(this,h)})}addEventListener(d,m){R(this,N).add(m)}removeEventListener(d,m){R(this,N).delete(m)}terminate(){R(this,N).clear()}}N=new WeakMap,G=new WeakMap,exports.LoopbackPort=LoopbackPort;const PDFWorkerUtil={isWorkerDisabled:!1,fallbackWorkerSrc:null,fakeWorkerId:0};if(exports.PDFWorkerUtil=PDFWorkerUtil,_is_node.isNodeJS&&typeof commonjsRequire=="function")PDFWorkerUtil.isWorkerDisabled=!0,PDFWorkerUtil.fallbackWorkerSrc="./pdf.worker.js";else if(typeof document=="object"){var _document,_document$currentScri;const c=(_document=document)===null||_document===void 0||(_document$currentScri=_document.currentScript)===null||_document$currentScri===void 0?void 0:_document$currentScri.src;c&&(PDFWorkerUtil.fallbackWorkerSrc=c.replace(/(\.(?:min\.)?js)(\?.*)?$/i,".worker$1$2"))}PDFWorkerUtil.isSameOrigin=function(c,d){let m;try{if(m=new URL(c),!m.origin||m.origin==="null")return!1}catch{return!1}const h=new URL(d,m);return m.origin===h.origin},PDFWorkerUtil.createCDNWrapper=function(c){const d=`importScripts("${c}");`;return URL.createObjectURL(new Blob([d]))};const _PDFWorker=class{constructor(){let{name:c=null,port:d=null,verbosity:m=(0,_util.getVerbosityLevel)()}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};if(d&&R(_PDFWorker,W).has(d))throw new Error("Cannot use more than one PDFWorker per port.");this.name=c,this.destroyed=!1,this.verbosity=m,this._readyCapability=new _util.PromiseCapability,this._port=null,this._webWorker=null,this._messageHandler=null,d?(R(_PDFWorker,W).set(d,this),this._initializeFromPort(d)):this._initialize()}get promise(){return this._readyCapability.promise}get port(){return this._port}get messageHandler(){return this._messageHandler}_initializeFromPort(c){this._port=c,this._messageHandler=new _message_handler.MessageHandler("main","worker",c),this._messageHandler.on("ready",function(){}),this._readyCapability.resolve(),this._messageHandler.send("configure",{verbosity:this.verbosity})}_initialize(){if(!PDFWorkerUtil.isWorkerDisabled&&!_PDFWorker._mainThreadWorkerMessageHandler){let{workerSrc:c}=_PDFWorker;try{PDFWorkerUtil.isSameOrigin(window.location.href,c)||(c=PDFWorkerUtil.createCDNWrapper(new URL(c,window.location).href));const d=new Worker(c),m=new _message_handler.MessageHandler("main","worker",d),h=()=>{d.removeEventListener("error",u),m.destroy(),d.terminate(),this.destroyed?this._readyCapability.reject(new Error("Worker was destroyed")):this._setupFakeWorker()},u=()=>{this._webWorker||h()};d.addEventListener("error",u),m.on("test",e=>{d.removeEventListener("error",u),this.destroyed?h():e?(this._messageHandler=m,this._port=d,this._webWorker=d,this._readyCapability.resolve(),m.send("configure",{verbosity:this.verbosity})):(this._setupFakeWorker(),m.destroy(),d.terminate())}),m.on("ready",e=>{if(d.removeEventListener("error",u),this.destroyed)h();else try{M()}catch{this._setupFakeWorker()}});const M=()=>{const e=new Uint8Array;m.send("test",e,[e.buffer])};M();return}catch{(0,_util.info)("The worker has been disabled.")}}this._setupFakeWorker()}_setupFakeWorker(){PDFWorkerUtil.isWorkerDisabled||((0,_util.warn)("Setting up fake worker."),PDFWorkerUtil.isWorkerDisabled=!0),_PDFWorker._setupFakeWorkerGlobal.then(c=>{if(this.destroyed){this._readyCapability.reject(new Error("Worker was destroyed"));return}const d=new LoopbackPort;this._port=d;const m="fake"+PDFWorkerUtil.fakeWorkerId++,h=new _message_handler.MessageHandler(m+"_worker",m,d);c.setup(h,d);const u=new _message_handler.MessageHandler(m,m+"_worker",d);this._messageHandler=u,this._readyCapability.resolve(),u.send("configure",{verbosity:this.verbosity})}).catch(c=>{this._readyCapability.reject(new Error(`Setting up fake worker failed: "${c.message}".`))})}destroy(){this.destroyed=!0,this._webWorker&&(this._webWorker.terminate(),this._webWorker=null),R(_PDFWorker,W).delete(this._port),this._port=null,this._messageHandler&&(this._messageHandler.destroy(),this._messageHandler=null)}static fromPort(c){if(c==null||!c.port)throw new Error("PDFWorker.fromPort - invalid method signature.");return R(this,W).has(c.port)?R(this,W).get(c.port):new _PDFWorker(c)}static get workerSrc(){if(_worker_options.GlobalWorkerOptions.workerSrc)return _worker_options.GlobalWorkerOptions.workerSrc;if(PDFWorkerUtil.fallbackWorkerSrc!==null)return _is_node.isNodeJS||(0,_display_utils.deprecated)('No "GlobalWorkerOptions.workerSrc" specified.'),PDFWorkerUtil.fallbackWorkerSrc;throw new Error('No "GlobalWorkerOptions.workerSrc" specified.')}static get _mainThreadWorkerMessageHandler(){try{var c;return((c=globalThis.pdfjsWorker)===null||c===void 0?void 0:c.WorkerMessageHandler)||null}catch{return null}}static get _setupFakeWorkerGlobal(){const loader=async()=>{const mainWorkerMessageHandler=this._mainThreadWorkerMessageHandler;if(mainWorkerMessageHandler)return mainWorkerMessageHandler;if(_is_node.isNodeJS&&typeof commonjsRequire=="function"){const worker=eval("require")(this.workerSrc);return worker.WorkerMessageHandler}return await(0,_display_utils.loadScript)(this.workerSrc),window.pdfjsWorker.WorkerMessageHandler};return(0,_util.shadow)(this,"_setupFakeWorkerGlobal",loader())}};let PDFWorker=_PDFWorker;W=new WeakMap,Zl(PDFWorker,W,new WeakMap),exports.PDFWorker=PDFWorker;class WorkerTransport{constructor(d,m,h,u,M){Zl(this,X),Zl(this,i,new Map),Zl(this,y,new Map),Zl(this,U,new Map),this.messageHandler=d,this.loadingTask=m,this.commonObjs=new PDFObjects,this.fontLoader=new _font_loader.FontLoader({ownerDocument:u.ownerDocument,styleElement:u.styleElement}),this._params=u,this.canvasFactory=M.canvasFactory,this.filterFactory=M.filterFactory,this.cMapReaderFactory=M.cMapReaderFactory,this.standardFontDataFactory=M.standardFontDataFactory,this.destroyed=!1,this.destroyCapability=null,this._passwordCapability=null,this._networkStream=h,this._fullReader=null,this._lastProgress=null,this.downloadInfoCapability=new _util.PromiseCapability,this.setupMessageHandler()}get annotationStorage(){return(0,_util.shadow)(this,"annotationStorage",new _annotation_storage.AnnotationStorage)}getRenderingIntent(d){let m=arguments.length>1&&arguments[1]!==void 0?arguments[1]:_util.AnnotationMode.ENABLE,h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,u=arguments.length>3&&arguments[3]!==void 0&&arguments[3],M=_util.RenderingIntentFlag.DISPLAY,e=null;switch(d){case"any":M=_util.RenderingIntentFlag.ANY;break;case"display":break;case"print":M=_util.RenderingIntentFlag.PRINT;break;default:(0,_util.warn)(`getRenderingIntent - invalid intent: ${d}`)}switch(m){case _util.AnnotationMode.DISABLE:M+=_util.RenderingIntentFlag.ANNOTATIONS_DISABLE;break;case _util.AnnotationMode.ENABLE:break;case _util.AnnotationMode.ENABLE_FORMS:M+=_util.RenderingIntentFlag.ANNOTATIONS_FORMS;break;case _util.AnnotationMode.ENABLE_STORAGE:M+=_util.RenderingIntentFlag.ANNOTATIONS_STORAGE,e=(M&_util.RenderingIntentFlag.PRINT&&h instanceof _annotation_storage.PrintAnnotationStorage?h:this.annotationStorage).serializable;break;default:(0,_util.warn)(`getRenderingIntent - invalid annotationMode: ${m}`)}return u&&(M+=_util.RenderingIntentFlag.OPLIST),{renderingIntent:M,cacheKey:`${M}_${_annotation_storage.AnnotationStorage.getHash(e)}`,annotationStorageMap:e}}destroy(){if(this.destroyCapability)return this.destroyCapability.promise;this.destroyed=!0,this.destroyCapability=new _util.PromiseCapability,this._passwordCapability&&this._passwordCapability.reject(new Error("Worker was destroyed during onPassword callback"));const d=[];for(const h of R(this,y).values())d.push(h._destroy());R(this,y).clear(),R(this,U).clear(),this.hasOwnProperty("annotationStorage")&&this.annotationStorage.resetModified();const m=this.messageHandler.sendWithPromise("Terminate",null);return d.push(m),Promise.all(d).then(()=>{this.commonObjs.clear(),this.fontLoader.clear(),R(this,i).clear(),this.filterFactory.destroy(),this._networkStream&&this._networkStream.cancelAllRequests(new _util.AbortException("Worker was terminated.")),this.messageHandler&&(this.messageHandler.destroy(),this.messageHandler=null),this.destroyCapability.resolve()},this.destroyCapability.reject),this.destroyCapability.promise}setupMessageHandler(){const{messageHandler:d,loadingTask:m}=this;d.on("GetReader",(h,u)=>{(0,_util.assert)(this._networkStream,"GetReader - no `IPDFStream` instance available."),this._fullReader=this._networkStream.getFullReader(),this._fullReader.onProgress=M=>{this._lastProgress={loaded:M.loaded,total:M.total}},u.onPull=()=>{this._fullReader.read().then(function(M){let{value:e,done:n}=M;n?u.close():((0,_util.assert)(e instanceof ArrayBuffer,"GetReader - expected an ArrayBuffer."),u.enqueue(new Uint8Array(e),1,[e]))}).catch(M=>{u.error(M)})},u.onCancel=M=>{this._fullReader.cancel(M),u.ready.catch(e=>{if(!this.destroyed)throw e})}}),d.on("ReaderHeadersReady",h=>{const u=new _util.PromiseCapability,M=this._fullReader;return M.headersReady.then(()=>{if(!M.isStreamingSupported||!M.isRangeSupported){if(this._lastProgress){var e;(e=m.onProgress)===null||e===void 0||e.call(m,this._lastProgress)}M.onProgress=n=>{var Y;(Y=m.onProgress)===null||Y===void 0||Y.call(m,{loaded:n.loaded,total:n.total})}}u.resolve({isStreamingSupported:M.isStreamingSupported,isRangeSupported:M.isRangeSupported,contentLength:M.contentLength})},u.reject),u.promise}),d.on("GetRangeReader",(h,u)=>{(0,_util.assert)(this._networkStream,"GetRangeReader - no `IPDFStream` instance available.");const M=this._networkStream.getRangeReader(h.begin,h.end);M?(u.onPull=()=>{M.read().then(function(e){let{value:n,done:Y}=e;Y?u.close():((0,_util.assert)(n instanceof ArrayBuffer,"GetRangeReader - expected an ArrayBuffer."),u.enqueue(new Uint8Array(n),1,[n]))}).catch(e=>{u.error(e)})},u.onCancel=e=>{M.cancel(e),u.ready.catch(n=>{if(!this.destroyed)throw n})}):u.close()}),d.on("GetDoc",h=>{let{pdfInfo:u}=h;this._numPages=u.numPages,this._htmlForXfa=u.htmlForXfa,delete u.htmlForXfa,m._capability.resolve(new PDFDocumentProxy(u,this))}),d.on("DocException",function(h){let u;switch(h.name){case"PasswordException":u=new _util.PasswordException(h.message,h.code);break;case"InvalidPDFException":u=new _util.InvalidPDFException(h.message);break;case"MissingPDFException":u=new _util.MissingPDFException(h.message);break;case"UnexpectedResponseException":u=new _util.UnexpectedResponseException(h.message,h.status);break;case"UnknownErrorException":u=new _util.UnknownErrorException(h.message,h.details);break;default:(0,_util.unreachable)("DocException - expected a valid Error.")}m._capability.reject(u)}),d.on("PasswordRequest",h=>{if(this._passwordCapability=new _util.PromiseCapability,m.onPassword){const u=M=>{M instanceof Error?this._passwordCapability.reject(M):this._passwordCapability.resolve({password:M})};try{m.onPassword(u,h.code)}catch(M){this._passwordCapability.reject(M)}}else this._passwordCapability.reject(new _util.PasswordException(h.message,h.code));return this._passwordCapability.promise}),d.on("DataLoaded",h=>{var u;(u=m.onProgress)===null||u===void 0||u.call(m,{loaded:h.length,total:h.length}),this.downloadInfoCapability.resolve(h)}),d.on("StartRenderPage",h=>{this.destroyed||R(this,y).get(h.pageIndex)._startRenderPage(h.transparency,h.cacheKey)}),d.on("commonobj",h=>{var u;let[M,e,n]=h;if(!this.destroyed&&!this.commonObjs.has(M))switch(e){case"Font":const Y=this._params;if("error"in n){const o=n.error;(0,_util.warn)(`Error during font loading: ${o}`),this.commonObjs.resolve(M,o);break}const I=Y.pdfBug&&(u=globalThis.FontInspector)!==null&&u!==void 0&&u.enabled?(o,C)=>globalThis.FontInspector.fontAdded(o,C):null,T=new _font_loader.FontFaceObject(n,{isEvalSupported:Y.isEvalSupported,disableFontFace:Y.disableFontFace,ignoreErrors:Y.ignoreErrors,inspectFont:I});this.fontLoader.bind(T).catch(o=>d.sendWithPromise("FontFallback",{id:M})).finally(()=>{!Y.fontExtraProperties&&T.data&&(T.data=null),this.commonObjs.resolve(M,T)});break;case"FontPath":case"Image":case"Pattern":this.commonObjs.resolve(M,n);break;default:throw new Error(`Got unknown common object type ${e}`)}}),d.on("obj",h=>{let[u,M,e,n]=h;if(this.destroyed)return;const Y=R(this,y).get(M);if(!Y.objs.has(u))switch(e){case"Image":if(Y.objs.resolve(u,n),n){let T;if(n.bitmap){const{width:o,height:C}=n;T=o*C*4}else{var I;T=((I=n.data)===null||I===void 0?void 0:I.length)||0}T>_util.MAX_IMAGE_SIZE_TO_CACHE&&(Y._maybeCleanupAfterRender=!0)}break;case"Pattern":Y.objs.resolve(u,n);break;default:throw new Error(`Got unknown object type ${e}`)}}),d.on("DocProgress",h=>{var u;this.destroyed||(u=m.onProgress)===null||u===void 0||u.call(m,{loaded:h.loaded,total:h.total})}),d.on("FetchBuiltInCMap",h=>this.destroyed?Promise.reject(new Error("Worker was destroyed.")):this.cMapReaderFactory?this.cMapReaderFactory.fetch(h):Promise.reject(new Error("CMapReaderFactory not initialized, see the `useWorkerFetch` parameter."))),d.on("FetchStandardFontData",h=>this.destroyed?Promise.reject(new Error("Worker was destroyed.")):this.standardFontDataFactory?this.standardFontDataFactory.fetch(h):Promise.reject(new Error("StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.")))}getData(){return this.messageHandler.sendWithPromise("GetData",null)}saveDocument(){var d;return this.annotationStorage.size<=0&&(0,_util.warn)("saveDocument called while `annotationStorage` is empty, please use the getData-method instead."),this.messageHandler.sendWithPromise("SaveDocument",{isPureXfa:!!this._htmlForXfa,numPages:this._numPages,annotationStorage:this.annotationStorage.serializable,filename:((d=this._fullReader)===null||d===void 0?void 0:d.filename)??null}).finally(()=>{this.annotationStorage.resetModified()})}getPage(d){if(!Number.isInteger(d)||d<=0||d>this._numPages)return Promise.reject(new Error("Invalid page request."));const m=d-1,h=R(this,U).get(m);if(h)return h;const u=this.messageHandler.sendWithPromise("GetPage",{pageIndex:m}).then(M=>{if(this.destroyed)throw new Error("Transport destroyed");const e=new PDFPageProxy(m,M,this,this._params.pdfBug);return R(this,y).set(m,e),e});return R(this,U).set(m,u),u}getPageIndex(d){return typeof d!="object"||d===null||!Number.isInteger(d.num)||d.num<0||!Number.isInteger(d.gen)||d.gen<0?Promise.reject(new Error("Invalid pageIndex request.")):this.messageHandler.sendWithPromise("GetPageIndex",{num:d.num,gen:d.gen})}getAnnotations(d,m){return this.messageHandler.sendWithPromise("GetAnnotations",{pageIndex:d,intent:m})}getFieldObjects(){return bl(this,X,TZ).call(this,"GetFieldObjects")}hasJSActions(){return bl(this,X,TZ).call(this,"HasJSActions")}getCalculationOrderIds(){return this.messageHandler.sendWithPromise("GetCalculationOrderIds",null)}getDestinations(){return this.messageHandler.sendWithPromise("GetDestinations",null)}getDestination(d){return typeof d!="string"?Promise.reject(new Error("Invalid destination request.")):this.messageHandler.sendWithPromise("GetDestination",{id:d})}getPageLabels(){return this.messageHandler.sendWithPromise("GetPageLabels",null)}getPageLayout(){return this.messageHandler.sendWithPromise("GetPageLayout",null)}getPageMode(){return this.messageHandler.sendWithPromise("GetPageMode",null)}getViewerPreferences(){return this.messageHandler.sendWithPromise("GetViewerPreferences",null)}getOpenAction(){return this.messageHandler.sendWithPromise("GetOpenAction",null)}getAttachments(){return this.messageHandler.sendWithPromise("GetAttachments",null)}getJavaScript(){return this.messageHandler.sendWithPromise("GetJavaScript",null)}getDocJSActions(){return this.messageHandler.sendWithPromise("GetDocJSActions",null)}getPageJSActions(d){return this.messageHandler.sendWithPromise("GetPageJSActions",{pageIndex:d})}getStructTree(d){return this.messageHandler.sendWithPromise("GetStructTree",{pageIndex:d})}getOutline(){return this.messageHandler.sendWithPromise("GetOutline",null)}getOptionalContentConfig(){return this.messageHandler.sendWithPromise("GetOptionalContentConfig",null).then(d=>new _optional_content_config.OptionalContentConfig(d))}getPermissions(){return this.messageHandler.sendWithPromise("GetPermissions",null)}getMetadata(){const d="GetMetadata",m=R(this,i).get(d);if(m)return m;const h=this.messageHandler.sendWithPromise(d,null).then(u=>{var M,e;return{info:u[0],metadata:u[1]?new _metadata.Metadata(u[1]):null,contentDispositionFilename:((M=this._fullReader)===null||M===void 0?void 0:M.filename)??null,contentLength:((e=this._fullReader)===null||e===void 0?void 0:e.contentLength)??null}});return R(this,i).set(d,h),h}getMarkInfo(){return this.messageHandler.sendWithPromise("GetMarkInfo",null)}async startCleanup(){let d=arguments.length>0&&arguments[0]!==void 0&&arguments[0];if(!this.destroyed){await this.messageHandler.sendWithPromise("Cleanup",null);for(const m of R(this,y).values())if(!m.cleanup())throw new Error(`startCleanup: Page ${m.pageNumber} is currently rendering.`);this.commonObjs.clear(),d||this.fontLoader.clear(),R(this,i).clear(),this.filterFactory.destroy(!0)}}get loadingParams(){const{disableAutoFetch:d,enableXfa:m}=this._params;return(0,_util.shadow)(this,"loadingParams",{disableAutoFetch:d,enableXfa:m})}}i=new WeakMap,y=new WeakMap,U=new WeakMap,X=new WeakSet,TZ=function(c){let d=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;const m=R(this,i).get(c);if(m)return m;const h=this.messageHandler.sendWithPromise(c,d);return R(this,i).set(c,h),h};class PDFObjects{constructor(){Zl(this,k),Zl(this,p,Object.create(null))}get(d){let m=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;if(m){const u=bl(this,k,VZ).call(this,d);return u.capability.promise.then(()=>m(u.data)),null}const h=R(this,p)[d];if(h==null||!h.capability.settled)throw new Error(`Requesting object that isn't resolved yet ${d}.`);return h.data}has(d){const m=R(this,p)[d];return(m==null?void 0:m.capability.settled)||!1}resolve(d){let m=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;const h=bl(this,k,VZ).call(this,d);h.data=m,h.capability.resolve()}clear(){for(const m in R(this,p)){var d;const{data:h}=R(this,p)[m];h==null||(d=h.bitmap)===null||d===void 0||d.close()}hl(this,p,Object.create(null))}}p=new WeakMap,k=new WeakSet,VZ=function(c){return R(this,p)[c]||(R(this,p)[c]={capability:new _util.PromiseCapability,data:null})};class RenderTask{constructor(d){Zl(this,s,null),hl(this,s,d),this.onContinue=null}get promise(){return R(this,s).capability.promise}cancel(){let d=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0;R(this,s).cancel(null,d)}get separateAnnots(){const{separateAnnots:d}=R(this,s).operatorList;if(!d)return!1;const{annotationCanvasMap:m}=R(this,s);return d.form||d.canvas&&(m==null?void 0:m.size)>0}}s=new WeakMap,exports.RenderTask=RenderTask;const b=class{constructor(c){let{callback:d,params:m,objs:h,commonObjs:u,annotationCanvasMap:M,operatorList:e,pageIndex:n,canvasFactory:Y,filterFactory:I,useRequestAnimationFrame:T=!1,pdfBug:o=!1,pageColors:C=null}=c;this.callback=d,this.params=m,this.objs=h,this.commonObjs=u,this.annotationCanvasMap=M,this.operatorListIdx=null,this.operatorList=e,this._pageIndex=n,this.canvasFactory=Y,this.filterFactory=I,this._pdfBug=o,this.pageColors=C,this.running=!1,this.graphicsReadyCallback=null,this.graphicsReady=!1,this._useRequestAnimationFrame=T===!0&&typeof window<"u",this.cancelled=!1,this.capability=new _util.PromiseCapability,this.task=new RenderTask(this),this._cancelBound=this.cancel.bind(this),this._continueBound=this._continue.bind(this),this._scheduleNextBound=this._scheduleNext.bind(this),this._nextBound=this._next.bind(this),this._canvas=m.canvasContext.canvas}get completed(){return this.capability.promise.catch(function(){})}initializeGraphics(c){var d,m;let{transparency:h=!1,optionalContentConfig:u}=c;if(this.cancelled)return;if(this._canvas){if(R(b,L).has(this._canvas))throw new Error("Cannot use the same canvas during multiple render() operations. Use different canvas or ensure previous operations were cancelled or completed.");R(b,L).add(this._canvas)}this._pdfBug&&(d=globalThis.StepperManager)!==null&&d!==void 0&&d.enabled&&(this.stepper=globalThis.StepperManager.create(this._pageIndex),this.stepper.init(this.operatorList),this.stepper.nextBreakPoint=this.stepper.getNextBreakPoint());const{canvasContext:M,viewport:e,transform:n,background:Y}=this.params;this.gfx=new _canvas.CanvasGraphics(M,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:u},this.annotationCanvasMap,this.pageColors),this.gfx.beginDrawing({transform:n,viewport:e,transparency:h,background:Y}),this.operatorListIdx=0,this.graphicsReady=!0,(m=this.graphicsReadyCallback)===null||m===void 0||m.call(this)}cancel(){var c;let d=arguments.length>0&&arguments[0]!==void 0?arguments[0]:null,m=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;this.running=!1,this.cancelled=!0,(c=this.gfx)===null||c===void 0||c.endDrawing(),this._canvas&&R(b,L).delete(this._canvas),this.callback(d||new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex+1}`,"canvas",m))}operatorListChanged(){var c;this.graphicsReady?((c=this.stepper)===null||c===void 0||c.updateOperatorList(this.operatorList),this.running||this._continue()):this.graphicsReadyCallback||(this.graphicsReadyCallback=this._continueBound)}_continue(){this.running=!0,this.cancelled||(this.task.onContinue?this.task.onContinue(this._scheduleNextBound):this._scheduleNext())}_scheduleNext(){this._useRequestAnimationFrame?window.requestAnimationFrame(()=>{this._nextBound().catch(this._cancelBound)}):Promise.resolve().then(this._nextBound).catch(this._cancelBound)}async _next(){this.cancelled||(this.operatorListIdx=this.gfx.executeOperatorList(this.operatorList,this.operatorListIdx,this._continueBound,this.stepper),this.operatorListIdx===this.operatorList.argsArray.length&&(this.running=!1,this.operatorList.lastChunk&&(this.gfx.endDrawing(this.pageColors),this._canvas&&R(b,L).delete(this._canvas),this.callback())))}};let InternalRenderTask=b;L=new WeakMap,Zl(InternalRenderTask,L,new WeakSet);const version="3.7.107";exports.version=version;const build="036f855dc";exports.build=build},(c,d,m)=>{var h,u,M,e,n;Object.defineProperty(d,"__esModule",{value:!0}),d.PrintAnnotationStorage=d.AnnotationStorage=void 0;var Y=m(1),I=m(140),T=m(144);class o{constructor(){Zl(this,M),Zl(this,h,!1),Zl(this,u,new Map),this.onSetModified=null,this.onResetModified=null,this.onAnnotationEditor=null}getValue(v,Q){const $=R(this,u).get(v);return $===void 0?Q:Object.assign(Q,$)}getRawValue(v){return R(this,u).get(v)}remove(v){if(R(this,u).delete(v),R(this,u).size===0&&this.resetModified(),typeof this.onAnnotationEditor=="function"){for(const Q of R(this,u).values())if(Q instanceof I.AnnotationEditor)return;this.onAnnotationEditor(null)}}setValue(v,Q){const $=R(this,u).get(v);let q=!1;if($!==void 0)for(const[x,D]of Object.entries(Q))$[x]!==D&&(q=!0,$[x]=D);else q=!0,R(this,u).set(v,Q);q&&bl(this,M,e).call(this),Q instanceof I.AnnotationEditor&&typeof this.onAnnotationEditor=="function"&&this.onAnnotationEditor(Q.constructor._type)}has(v){return R(this,u).has(v)}getAll(){return R(this,u).size>0?(0,Y.objectFromMap)(R(this,u)):null}setAll(v){for(const[Q,$]of Object.entries(v))this.setValue(Q,$)}get size(){return R(this,u).size}resetModified(){R(this,h)&&(hl(this,h,!1),typeof this.onResetModified=="function"&&this.onResetModified())}get print(){return new C(this)}get serializable(){if(R(this,u).size===0)return null;const v=new Map;for(const[Q,$]of R(this,u)){const q=$ instanceof I.AnnotationEditor?$.serialize():$;q&&v.set(Q,q)}return v}static getHash(v){if(!v)return"";const Q=new T.MurmurHash3_64;for(const[$,q]of v)Q.update(`${$}:${JSON.stringify(q)}`);return Q.hexdigest()}}h=new WeakMap,u=new WeakMap,M=new WeakSet,e=function(){R(this,h)||(hl(this,h,!0),typeof this.onSetModified=="function"&&this.onSetModified())},d.AnnotationStorage=o;class C extends o{constructor(v){super(),Zl(this,n,null),hl(this,n,structuredClone(v.serializable))}get print(){(0,Y.unreachable)("Should not call PrintAnnotationStorage.print")}get serializable(){return R(this,n)}}n=new WeakMap,d.PrintAnnotationStorage=C},(c,d,m)=>{var h,u,M,e,n,Y;Object.defineProperty(d,"__esModule",{value:!0}),d.AnnotationEditor=void 0;var I=m(141),T=m(1);const o=class{constructor(J){Zl(this,h,this.focusin.bind(this)),Zl(this,u,this.focusout.bind(this)),Zl(this,M,!1),Zl(this,e,!1),Zl(this,n,!1),kl(this,"_uiManager",null),Zl(this,Y,o._zIndex++),this.constructor===o&&(0,T.unreachable)("Cannot initialize AnnotationEditor."),this.parent=J.parent,this.id=J.id,this.width=this.height=null,this.pageIndex=J.parent.pageIndex,this.name=J.name,this.div=null,this._uiManager=J.uiManager;const{rotation:v,rawDims:{pageWidth:Q,pageHeight:$,pageX:q,pageY:x}}=this.parent.viewport;this.rotation=v,this.pageRotation=(360+v-this._uiManager.viewParameters.rotation)%360,this.pageDimensions=[Q,$],this.pageTranslation=[q,x];const[D,r]=this.parentDimensions;this.x=J.x/D,this.y=J.y/r,this.isAttachedToDOM=!1}static get _defaultLineColor(){return(0,T.shadow)(this,"_defaultLineColor",this._colorManager.getHexCode("CanvasText"))}addCommands(J){this._uiManager.addCommands(J)}get currentLayer(){return this._uiManager.currentLayer}setInBackground(){this.div.style.zIndex=0}setInForeground(){this.div.style.zIndex=R(this,Y)}setParent(J){J!==null&&(this.pageIndex=J.pageIndex,this.pageDimensions=J.pageDimensions),this.parent=J}focusin(J){R(this,M)?hl(this,M,!1):this.parent.setSelected(this)}focusout(J){var v;if(!this.isAttachedToDOM)return;const Q=J.relatedTarget;(Q==null||!Q.closest(`#${this.id}`))&&(J.preventDefault(),(v=this.parent)!==null&&v!==void 0&&v.isMultipleSelection||this.commitOrRemove())}commitOrRemove(){this.isEmpty()?this.remove():this.commit()}commit(){this.addToAnnotationStorage()}addToAnnotationStorage(){this._uiManager.addToAnnotationStorage(this)}dragstart(J){const v=this.parent.div.getBoundingClientRect();this.startX=J.clientX-v.x,this.startY=J.clientY-v.y,J.dataTransfer.setData("text/plain",this.id),J.dataTransfer.effectAllowed="move"}setAt(J,v,Q,$){const[q,x]=this.parentDimensions;[Q,$]=this.screenToPageTranslation(Q,$),this.x=(J+Q)/q,this.y=(v+$)/x,this.div.style.left=100*this.x+"%",this.div.style.top=100*this.y+"%"}translate(J,v){const[Q,$]=this.parentDimensions;[J,v]=this.screenToPageTranslation(J,v),this.x+=J/Q,this.y+=v/$,this.div.style.left=100*this.x+"%",this.div.style.top=100*this.y+"%"}screenToPageTranslation(J,v){switch(this.parentRotation){case 90:return[v,-J];case 180:return[-J,-v];case 270:return[-v,J];default:return[J,v]}}get parentScale(){return this._uiManager.viewParameters.realScale}get parentRotation(){return(this._uiManager.viewParameters.rotation+this.pageRotation)%360}get parentDimensions(){const{realScale:J}=this._uiManager.viewParameters,[v,Q]=this.pageDimensions;return[v*J,Q*J]}setDims(J,v){const[Q,$]=this.parentDimensions;this.div.style.width=100*J/Q+"%",this.div.style.height=100*v/$+"%"}fixDims(){const{style:J}=this.div,{height:v,width:Q}=J,$=Q.endsWith("%"),q=v.endsWith("%");if($&&q)return;const[x,D]=this.parentDimensions;$||(J.width=100*parseFloat(Q)/x+"%"),q||(J.height=100*parseFloat(v)/D+"%")}getInitialTranslation(){return[0,0]}render(){this.div=document.createElement("div"),this.div.setAttribute("data-editor-rotation",(360-this.rotation)%360),this.div.className=this.name,this.div.setAttribute("id",this.id),this.div.setAttribute("tabIndex",0),this.setInForeground(),this.div.addEventListener("focusin",R(this,h)),this.div.addEventListener("focusout",R(this,u));const[J,v]=this.getInitialTranslation();return this.translate(J,v),(0,I.bindEvents)(this,this.div,["dragstart","pointerdown"]),this.div}pointerdown(J){const{isMac:v}=T.FeatureTest.platform;J.button!==0||J.ctrlKey&&v?J.preventDefault():(J.ctrlKey&&!v||J.shiftKey||J.metaKey&&v?this.parent.toggleSelected(this):this.parent.setSelected(this),hl(this,M,!0))}getRect(J,v){const Q=this.parentScale,[$,q]=this.pageDimensions,[x,D]=this.pageTranslation,r=J/Q,w=v/Q,j=this.x*$,f=this.y*q,sl=this.width*$,tl=this.height*q;switch(this.rotation){case 0:return[j+r+x,q-f-w-tl+D,j+r+sl+x,q-f-w+D];case 90:return[j+w+x,q-f+r+D,j+w+tl+x,q-f+r+sl+D];case 180:return[j-r-sl+x,q-f+w+D,j-r+x,q-f+w+tl+D];case 270:return[j-w-tl+x,q-f-r-sl+D,j-w+x,q-f-r+D];default:throw new Error("Invalid rotation")}}getRectInCurrentCoords(J,v){const[Q,$,q,x]=J,D=q-Q,r=x-$;switch(this.rotation){case 0:return[Q,v-x,D,r];case 90:return[Q,v-$,r,D];case 180:return[q,v-$,D,r];case 270:return[q,v-x,r,D];default:throw new Error("Invalid rotation")}}onceAdded(){}isEmpty(){return!1}enableEditMode(){hl(this,n,!0)}disableEditMode(){hl(this,n,!1)}isInEditMode(){return R(this,n)}shouldGetKeyboardEvents(){return!1}needsToBeRebuilt(){return this.div&&!this.isAttachedToDOM}rebuild(){var J;(J=this.div)===null||J===void 0||J.addEventListener("focusin",R(this,h))}serialize(){(0,T.unreachable)("An editor must be serializable")}static deserialize(J,v,Q){const $=new this.prototype.constructor({parent:v,id:v.getNextId(),uiManager:Q});$.rotation=J.rotation;const[q,x]=$.pageDimensions,[D,r,w,j]=$.getRectInCurrentCoords(J.rect,x);return $.x=D/q,$.y=r/x,$.width=w/q,$.height=j/x,$}remove(){this.div.removeEventListener("focusin",R(this,h)),this.div.removeEventListener("focusout",R(this,u)),this.isEmpty()||this.commit(),this.parent.remove(this)}select(){var J;(J=this.div)===null||J===void 0||J.classList.add("selectedEditor")}unselect(){var J;(J=this.div)===null||J===void 0||J.classList.remove("selectedEditor")}updateParams(J,v){}disableEditing(){}enableEditing(){}get propertiesToUpdate(){return{}}get contentDiv(){return this.div}get isEditing(){return R(this,e)}set isEditing(J){hl(this,e,J),J?(this.parent.setSelected(this),this.parent.setActiveEditor(this)):this.parent.setActiveEditor(null)}};let C=o;h=new WeakMap,u=new WeakMap,M=new WeakMap,e=new WeakMap,n=new WeakMap,Y=new WeakMap,kl(C,"_colorManager",new I.ColorManager),kl(C,"_zIndex",1),d.AnnotationEditor=C},(c,d,m)=>{var h,u,M,e,n,Y,I,T,o,C,J,v,Q,$,q,x,D,r,w,j,f,sl,tl,B,cl,al,Tl,nl,Rl,E,F,H,P,g,K,il,ml,Gl,ul,Nl,yl,Xl,Wl,Dl,Ul,ll,V,O,A,_,dl,Ml;Object.defineProperty(d,"__esModule",{value:!0}),d.KeyboardManager=d.CommandManager=d.ColorManager=d.AnnotationEditorUIManager=void 0,d.bindEvents=function(el,wl,gl){for(const Hl of gl)wl.addEventListener(Hl,el[Hl].bind(el))},d.opacityToHex=function(el){return Math.round(Math.min(255,Math.max(1,255*el))).toString(16).padStart(2,"0")};var Yl=m(1),Vl=m(142);class Ll{constructor(){Zl(this,h,0)}getId(){return`${Yl.AnnotationEditorPrefix}${hZ(this,h)._++}`}}h=new WeakMap;class ol{constructor(){Zl(this,u,[]),Zl(this,M,!1),Zl(this,e,void 0),Zl(this,n,-1);let wl=arguments.length>0&&arguments[0]!==void 0?arguments[0]:128;hl(this,e,wl)}add(wl){let{cmd:gl,undo:Hl,mustExec:ZZ,type:vl=NaN,overwriteIfSameType:xl=!1,keepUndo:Ql=!1}=wl;if(ZZ&&gl(),R(this,M))return;const Pl={cmd:gl,undo:Hl,type:vl};if(R(this,n)===-1){R(this,u).length>0&&(R(this,u).length=0),hl(this,n,0),R(this,u).push(Pl);return}if(xl&&R(this,u)[R(this,n)].type===vl){Ql&&(Pl.undo=R(this,u)[R(this,n)].undo),R(this,u)[R(this,n)]=Pl;return}const Al=R(this,n)+1;Al===R(this,e)?R(this,u).splice(0,1):(hl(this,n,Al),Al<R(this,u).length&&R(this,u).splice(Al)),R(this,u).push(Pl)}undo(){R(this,n)!==-1&&(hl(this,M,!0),R(this,u)[R(this,n)].undo(),hl(this,M,!1),hl(this,n,R(this,n)-1))}redo(){R(this,n)<R(this,u).length-1&&(hl(this,n,R(this,n)+1),hl(this,M,!0),R(this,u)[R(this,n)].cmd(),hl(this,M,!1))}hasSomethingToUndo(){return R(this,n)!==-1}hasSomethingToRedo(){return R(this,n)<R(this,u).length-1}destroy(){hl(this,u,null)}}u=new WeakMap,M=new WeakMap,e=new WeakMap,n=new WeakMap,d.CommandManager=ol;class zl{constructor(wl){Zl(this,Y),this.buffer=[],this.callbacks=new Map,this.allKeys=new Set;const{isMac:gl}=Yl.FeatureTest.platform;for(const[Hl,ZZ]of wl)for(const vl of Hl){const xl=vl.startsWith("mac+");gl&&xl?(this.callbacks.set(vl.slice(4),ZZ),this.allKeys.add(vl.split("+").at(-1))):!gl&&!xl&&(this.callbacks.set(vl,ZZ),this.allKeys.add(vl.split("+").at(-1)))}}exec(wl,gl){if(!this.allKeys.has(gl.key))return;const Hl=this.callbacks.get(bl(this,Y,I).call(this,gl));Hl&&(Hl.bind(wl)(),gl.stopPropagation(),gl.preventDefault())}}Y=new WeakSet,I=function(el){el.altKey&&this.buffer.push("alt"),el.ctrlKey&&this.buffer.push("ctrl"),el.metaKey&&this.buffer.push("meta"),el.shiftKey&&this.buffer.push("shift"),this.buffer.push(el.key);const wl=this.buffer.join("+");return this.buffer.length=0,wl},d.KeyboardManager=zl;const Il=class{get _colors(){const el=new Map([["CanvasText",null],["Canvas",null]]);return(0,Vl.getColorValues)(el),(0,Yl.shadow)(this,"_colors",el)}convert(el){const wl=(0,Vl.getRGB)(el);if(!window.matchMedia("(forced-colors: active)").matches)return wl;for(const[gl,Hl]of this._colors)if(Hl.every((ZZ,vl)=>ZZ===wl[vl]))return Il._colorsMapping.get(gl);return wl}getHexCode(el){const wl=this._colors.get(el);return wl?Yl.Util.makeHexColor(...wl):el}};let Sl=Il;kl(Sl,"_colorsMapping",new Map([["CanvasText",[0,0,0]],["Canvas",[255,255,255]]])),d.ColorManager=Sl;const Jl=class{constructor(el,wl,gl){Zl(this,F),Zl(this,P),Zl(this,K),Zl(this,ml),Zl(this,ul),Zl(this,yl),Zl(this,Wl),Zl(this,Ul),Zl(this,V),Zl(this,A),Zl(this,dl),Zl(this,T,null),Zl(this,o,new Map),Zl(this,C,new Map),Zl(this,J,null),Zl(this,v,new ol),Zl(this,Q,0),Zl(this,$,null),Zl(this,q,new Set),Zl(this,x,null),Zl(this,D,new Ll),Zl(this,r,!1),Zl(this,w,Yl.AnnotationEditorType.NONE),Zl(this,j,new Set),Zl(this,f,this.copy.bind(this)),Zl(this,sl,this.cut.bind(this)),Zl(this,tl,this.paste.bind(this)),Zl(this,B,this.keydown.bind(this)),Zl(this,cl,this.onEditingAction.bind(this)),Zl(this,al,this.onPageChanging.bind(this)),Zl(this,Tl,this.onScaleChanging.bind(this)),Zl(this,nl,this.onRotationChanging.bind(this)),Zl(this,Rl,{isEditing:!1,isEmpty:!0,hasSomethingToUndo:!1,hasSomethingToRedo:!1,hasSelectedEditor:!1}),Zl(this,E,null),hl(this,E,el),hl(this,x,wl),R(this,x)._on("editingaction",R(this,cl)),R(this,x)._on("pagechanging",R(this,al)),R(this,x)._on("scalechanging",R(this,Tl)),R(this,x)._on("rotationchanging",R(this,nl)),hl(this,J,gl),this.viewParameters={realScale:Vl.PixelsPerInch.PDF_TO_CSS_UNITS,rotation:0}}destroy(){bl(this,P,g).call(this),R(this,x)._off("editingaction",R(this,cl)),R(this,x)._off("pagechanging",R(this,al)),R(this,x)._off("scalechanging",R(this,Tl)),R(this,x)._off("rotationchanging",R(this,nl));for(const el of R(this,C).values())el.destroy();R(this,C).clear(),R(this,o).clear(),R(this,q).clear(),hl(this,T,null),R(this,j).clear(),R(this,v).destroy()}onPageChanging(el){let{pageNumber:wl}=el;hl(this,Q,wl-1)}focusMainContainer(){R(this,E).focus()}addShouldRescale(el){R(this,q).add(el)}removeShouldRescale(el){R(this,q).delete(el)}onScaleChanging(el){let{scale:wl}=el;this.commitOrRemove(),this.viewParameters.realScale=wl*Vl.PixelsPerInch.PDF_TO_CSS_UNITS;for(const gl of R(this,q))gl.onScaleChanging()}onRotationChanging(el){let{pagesRotation:wl}=el;this.commitOrRemove(),this.viewParameters.rotation=wl}addToAnnotationStorage(el){el.isEmpty()||!R(this,J)||R(this,J).has(el.id)||R(this,J).setValue(el.id,el)}copy(el){if(el.preventDefault(),R(this,T)&&R(this,T).commitOrRemove(),!this.hasSelection)return;const wl=[];for(const gl of R(this,j))gl.isEmpty()||wl.push(gl.serialize());wl.length!==0&&el.clipboardData.setData("application/pdfjs",JSON.stringify(wl))}cut(el){this.copy(el),this.delete()}paste(el){el.preventDefault();let wl=el.clipboardData.getData("application/pdfjs");if(!wl)return;try{wl=JSON.parse(wl)}catch(Hl){(0,Yl.warn)(`paste: "${Hl.message}".`);return}if(!Array.isArray(wl))return;this.unselectAll();const gl=R(this,C).get(R(this,Q));try{const Hl=[];for(const xl of wl){const Ql=gl.deserialize(xl);if(!Ql)return;Hl.push(Ql)}const ZZ=()=>{for(const xl of Hl)bl(this,V,O).call(this,xl);bl(this,dl,Ml).call(this,Hl)},vl=()=>{for(const xl of Hl)xl.remove()};this.addCommands({cmd:ZZ,undo:vl,mustExec:!0})}catch(Hl){(0,Yl.warn)(`paste: "${Hl.message}".`)}}keydown(el){var wl;(wl=this.getActive())!==null&&wl!==void 0&&wl.shouldGetKeyboardEvents()||Jl._keyboardManager.exec(this,el)}onEditingAction(el){["undo","redo","delete","selectAll"].includes(el.name)&&this[el.name]()}setEditingState(el){el?(bl(this,F,H).call(this),bl(this,K,il).call(this),bl(this,ul,Nl).call(this,{isEditing:R(this,w)!==Yl.AnnotationEditorType.NONE,isEmpty:bl(this,A,_).call(this),hasSomethingToUndo:R(this,v).hasSomethingToUndo(),hasSomethingToRedo:R(this,v).hasSomethingToRedo(),hasSelectedEditor:!1})):(bl(this,P,g).call(this),bl(this,ml,Gl).call(this),bl(this,ul,Nl).call(this,{isEditing:!1}))}registerEditorTypes(el){if(!R(this,$)){hl(this,$,el);for(const wl of R(this,$))bl(this,yl,Xl).call(this,wl.defaultPropertiesToUpdate)}}getId(){return R(this,D).getId()}get currentLayer(){return R(this,C).get(R(this,Q))}get currentPageIndex(){return R(this,Q)}addLayer(el){R(this,C).set(el.pageIndex,el),R(this,r)?el.enable():el.disable()}removeLayer(el){R(this,C).delete(el.pageIndex)}updateMode(el){if(hl(this,w,el),el===Yl.AnnotationEditorType.NONE)this.setEditingState(!1),bl(this,Ul,ll).call(this);else{this.setEditingState(!0),bl(this,Wl,Dl).call(this);for(const wl of R(this,C).values())wl.updateMode(el)}}updateToolbar(el){el!==R(this,w)&&R(this,x).dispatch("switchannotationeditormode",{source:this,mode:el})}updateParams(el,wl){if(R(this,$)){for(const gl of R(this,j))gl.updateParams(el,wl);for(const gl of R(this,$))gl.updateDefaultParams(el,wl)}}getEditors(el){const wl=[];for(const gl of R(this,o).values())gl.pageIndex===el&&wl.push(gl);return wl}getEditor(el){return R(this,o).get(el)}addEditor(el){R(this,o).set(el.id,el)}removeEditor(el){var wl;R(this,o).delete(el.id),this.unselect(el),(wl=R(this,J))===null||wl===void 0||wl.remove(el.id)}setActiveEditor(el){R(this,T)!==el&&(hl(this,T,el),el&&bl(this,yl,Xl).call(this,el.propertiesToUpdate))}toggleSelected(el){R(this,j).has(el)?(R(this,j).delete(el),el.unselect(),bl(this,ul,Nl).call(this,{hasSelectedEditor:this.hasSelection})):(R(this,j).add(el),el.select(),bl(this,yl,Xl).call(this,el.propertiesToUpdate),bl(this,ul,Nl).call(this,{hasSelectedEditor:!0}))}setSelected(el){for(const wl of R(this,j))wl!==el&&wl.unselect();R(this,j).clear(),R(this,j).add(el),el.select(),bl(this,yl,Xl).call(this,el.propertiesToUpdate),bl(this,ul,Nl).call(this,{hasSelectedEditor:!0})}isSelected(el){return R(this,j).has(el)}unselect(el){el.unselect(),R(this,j).delete(el),bl(this,ul,Nl).call(this,{hasSelectedEditor:this.hasSelection})}get hasSelection(){return R(this,j).size!==0}undo(){R(this,v).undo(),bl(this,ul,Nl).call(this,{hasSomethingToUndo:R(this,v).hasSomethingToUndo(),hasSomethingToRedo:!0,isEmpty:bl(this,A,_).call(this)})}redo(){R(this,v).redo(),bl(this,ul,Nl).call(this,{hasSomethingToUndo:!0,hasSomethingToRedo:R(this,v).hasSomethingToRedo(),isEmpty:bl(this,A,_).call(this)})}addCommands(el){R(this,v).add(el),bl(this,ul,Nl).call(this,{hasSomethingToUndo:!0,hasSomethingToRedo:!1,isEmpty:bl(this,A,_).call(this)})}delete(){if(this.commitOrRemove(),!this.hasSelection)return;const el=[...R(this,j)];this.addCommands({cmd:()=>{for(const wl of el)wl.remove()},undo:()=>{for(const wl of el)bl(this,V,O).call(this,wl)},mustExec:!0})}commitOrRemove(){var el;(el=R(this,T))===null||el===void 0||el.commitOrRemove()}selectAll(){for(const el of R(this,j))el.commit();bl(this,dl,Ml).call(this,R(this,o).values())}unselectAll(){if(R(this,T))R(this,T).commitOrRemove();else if(R(this,j).size!==0){for(const el of R(this,j))el.unselect();R(this,j).clear(),bl(this,ul,Nl).call(this,{hasSelectedEditor:!1})}}isActive(el){return R(this,T)===el}getActive(){return R(this,T)}getMode(){return R(this,w)}};let Cl=Jl;T=new WeakMap,o=new WeakMap,C=new WeakMap,J=new WeakMap,v=new WeakMap,Q=new WeakMap,$=new WeakMap,q=new WeakMap,x=new WeakMap,D=new WeakMap,r=new WeakMap,w=new WeakMap,j=new WeakMap,f=new WeakMap,sl=new WeakMap,tl=new WeakMap,B=new WeakMap,cl=new WeakMap,al=new WeakMap,Tl=new WeakMap,nl=new WeakMap,Rl=new WeakMap,E=new WeakMap,F=new WeakSet,H=function(){R(this,E).addEventListener("keydown",R(this,B))},P=new WeakSet,g=function(){R(this,E).removeEventListener("keydown",R(this,B))},K=new WeakSet,il=function(){document.addEventListener("copy",R(this,f)),document.addEventListener("cut",R(this,sl)),document.addEventListener("paste",R(this,tl))},ml=new WeakSet,Gl=function(){document.removeEventListener("copy",R(this,f)),document.removeEventListener("cut",R(this,sl)),document.removeEventListener("paste",R(this,tl))},ul=new WeakSet,Nl=function(el){Object.entries(el).some(wl=>{let[gl,Hl]=wl;return R(this,Rl)[gl]!==Hl})&&R(this,x).dispatch("annotationeditorstateschanged",{source:this,details:Object.assign(R(this,Rl),el)})},yl=new WeakSet,Xl=function(el){R(this,x).dispatch("annotationeditorparamschanged",{source:this,details:el})},Wl=new WeakSet,Dl=function(){if(!R(this,r)){hl(this,r,!0);for(const el of R(this,C).values())el.enable()}},Ul=new WeakSet,ll=function(){if(this.unselectAll(),R(this,r)){hl(this,r,!1);for(const el of R(this,C).values())el.disable()}},V=new WeakSet,O=function(el){const wl=R(this,C).get(el.pageIndex);wl?wl.addOrRebuild(el):this.addEditor(el)},A=new WeakSet,_=function(){if(R(this,o).size===0)return!0;if(R(this,o).size===1)for(const el of R(this,o).values())return el.isEmpty();return!1},dl=new WeakSet,Ml=function(el){R(this,j).clear();for(const wl of el)wl.isEmpty()||(R(this,j).add(wl),wl.select());bl(this,ul,Nl).call(this,{hasSelectedEditor:!0})},kl(Cl,"_keyboardManager",new zl([[["ctrl+a","mac+meta+a"],Jl.prototype.selectAll],[["ctrl+z","mac+meta+z"],Jl.prototype.undo],[["ctrl+y","ctrl+shift+Z","mac+meta+shift+Z"],Jl.prototype.redo],[["Backspace","alt+Backspace","ctrl+Backspace","shift+Backspace","mac+Backspace","mac+alt+Backspace","mac+ctrl+Backspace","Delete","ctrl+Delete","shift+Delete"],Jl.prototype.delete],[["Escape","mac+Escape"],Jl.prototype.unselectAll]])),d.AnnotationEditorUIManager=Cl},(c,d,m)=>{var h,u,M,e,n,Y,I,T,o,C,J,v,Q,$;Object.defineProperty(d,"__esModule",{value:!0}),d.StatTimer=d.RenderingCancelledException=d.PixelsPerInch=d.PageViewport=d.PDFDateString=d.DOMStandardFontDataFactory=d.DOMSVGFactory=d.DOMFilterFactory=d.DOMCanvasFactory=d.DOMCMapReaderFactory=d.AnnotationPrefix=void 0,d.deprecated=function(H){console.log("Deprecated API usage: "+H)},d.getColorValues=function(H){const P=document.createElement("span");P.style.visibility="hidden",document.body.append(P);for(const g of H.keys()){P.style.color=g;const K=window.getComputedStyle(P).color;H.set(g,F(K))}P.remove()},d.getCurrentTransform=function(H){const{a:P,b:g,c:K,d:il,e:ml,f:Gl}=H.getTransform();return[P,g,K,il,ml,Gl]},d.getCurrentTransformInverse=function(H){const{a:P,b:g,c:K,d:il,e:ml,f:Gl}=H.getTransform().invertSelf();return[P,g,K,il,ml,Gl]},d.getFilenameFromUrl=function(H){return arguments.length>1&&arguments[1]!==void 0&&arguments[1]||([H]=H.split(/[#?]/,1)),H.substring(H.lastIndexOf("/")+1)},d.getPdfFilenameFromUrl=function(H){let P=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"document.pdf";if(typeof H!="string")return P;if(nl(H))return(0,x.warn)('getPdfFilenameFromUrl: ignore "data:"-URL for performance reasons.'),P;const g=/[^/?#=]+\.pdf\b(?!.*\.pdf\b)/i,K=/^(?:(?:[^:]+:)?\/\/[^/]+)?([^?#]*)(\?[^#]*)?(#.*)?$/.exec(H);let il=g.exec(K[1])||g.exec(K[2])||g.exec(K[3]);if(il&&(il=il[0],il.includes("%")))try{il=g.exec(decodeURIComponent(il))[0]}catch{}return il||P},d.getRGB=F,d.getXfaPageViewport=function(H,P){let{scale:g=1,rotation:K=0}=P;const{width:il,height:ml}=H.attributes.style,Gl=[0,0,parseInt(il),parseInt(ml)];return new al({viewBox:Gl,scale:g,rotation:K})},d.isDataScheme=nl,d.isPdfFile=function(H){return typeof H=="string"&&/\.pdf$/i.test(H)},d.isValidFetchUrl=Rl,d.loadScript=function(H){let P=arguments.length>1&&arguments[1]!==void 0&&arguments[1];return new Promise((g,K)=>{const il=document.createElement("script");il.src=H,il.onload=function(ml){P&&il.remove(),g(ml)},il.onerror=function(){K(new Error(`Cannot load script at: ${il.src}`))},(document.head||document.documentElement).append(il)})},d.setLayerDimensions=function(H,P){let g=arguments.length>2&&arguments[2]!==void 0&&arguments[2],K=!(arguments.length>3&&arguments[3]!==void 0)||arguments[3];if(P instanceof al){const{pageWidth:il,pageHeight:ml}=P.rawDims,{style:Gl}=H,ul=`calc(var(--scale-factor) * ${il}px)`,Nl=`calc(var(--scale-factor) * ${ml}px)`;g&&P.rotation%180!=0?(Gl.width=Nl,Gl.height=ul):(Gl.width=ul,Gl.height=Nl)}K&&H.setAttribute("data-main-rotation",P.rotation)};var q=m(143),x=m(1);const D="http://www.w3.org/2000/svg";d.AnnotationPrefix="pdfjs_internal_id_";const r=class{};let w=r;kl(w,"CSS",96),kl(w,"PDF",72),kl(w,"PDF_TO_CSS_UNITS",r.CSS/r.PDF),d.PixelsPerInch=w;class j extends q.BaseFilterFactory{constructor(){let{docId:P,ownerDocument:g=globalThis.document}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};super(),Zl(this,o),Zl(this,J),Zl(this,Q),Zl(this,h,void 0),Zl(this,u,void 0),Zl(this,M,void 0),Zl(this,e,void 0),Zl(this,n,void 0),Zl(this,Y,void 0),Zl(this,I,void 0),Zl(this,T,0),hl(this,M,P),hl(this,e,g)}addFilter(P){if(!P)return"none";let g,K,il,ml,Gl=R(this,o,C).get(P);if(Gl)return Gl;if(P.length===1){const Wl=P[0],Dl=new Array(256);for(let Ul=0;Ul<256;Ul++)Dl[Ul]=Wl[Ul]/255;ml=g=K=il=Dl.join(",")}else{const[Wl,Dl,Ul]=P,ll=new Array(256),V=new Array(256),O=new Array(256);for(let A=0;A<256;A++)ll[A]=Wl[A]/255,V[A]=Dl[A]/255,O[A]=Ul[A]/255;g=ll.join(","),K=V.join(","),il=O.join(","),ml=`${g}${K}${il}`}if(Gl=R(this,o,C).get(ml),Gl)return R(this,o,C).set(P,Gl),Gl;const ul=`g_${R(this,M)}_transfer_map_${hZ(this,T)._++}`,Nl=`url(#${ul})`;R(this,o,C).set(P,Nl),R(this,o,C).set(ml,Nl);const yl=R(this,e).createElementNS(D,"filter",D);yl.setAttribute("id",ul),yl.setAttribute("color-interpolation-filters","sRGB");const Xl=R(this,e).createElementNS(D,"feComponentTransfer");return yl.append(Xl),bl(this,Q,$).call(this,Xl,"feFuncR",g),bl(this,Q,$).call(this,Xl,"feFuncG",K),bl(this,Q,$).call(this,Xl,"feFuncB",il),R(this,J,v).append(yl),Nl}addHCMFilter(P,g){var K;const il=`${P}-${g}`;if(R(this,Y)===il)return R(this,I);if(hl(this,Y,il),hl(this,I,"none"),(K=R(this,n))===null||K===void 0||K.remove(),!P||!g)return R(this,I);R(this,J,v).style.color=P;const ml=F(P=getComputedStyle(R(this,J,v)).getPropertyValue("color"));P=x.Util.makeHexColor(...ml),R(this,J,v).style.color=g;const Gl=F(g=getComputedStyle(R(this,J,v)).getPropertyValue("color"));if(g=x.Util.makeHexColor(...Gl),R(this,J,v).style.color="",P==="#000000"&&g==="#ffffff"||P===g)return R(this,I);const ul=new Array(256);for(let ll=0;ll<=255;ll++){const V=ll/255;ul[ll]=V<=.03928?V/12.92:((V+.055)/1.055)**2.4}const Nl=ul.join(","),yl=`g_${R(this,M)}_hcm_filter`,Xl=hl(this,n,R(this,e).createElementNS(D,"filter",D));Xl.setAttribute("id",yl),Xl.setAttribute("color-interpolation-filters","sRGB");let Wl=R(this,e).createElementNS(D,"feComponentTransfer");Xl.append(Wl),bl(this,Q,$).call(this,Wl,"feFuncR",Nl),bl(this,Q,$).call(this,Wl,"feFuncG",Nl),bl(this,Q,$).call(this,Wl,"feFuncB",Nl);const Dl=R(this,e).createElementNS(D,"feColorMatrix");Dl.setAttribute("type","matrix"),Dl.setAttribute("values","0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0"),Xl.append(Dl),Wl=R(this,e).createElementNS(D,"feComponentTransfer"),Xl.append(Wl);const Ul=(ll,V)=>{const O=ml[ll]/255,A=Gl[ll]/255,_=new Array(V+1);for(let dl=0;dl<=V;dl++)_[dl]=O+dl/V*(A-O);return _.join(",")};return bl(this,Q,$).call(this,Wl,"feFuncR",Ul(0,5)),bl(this,Q,$).call(this,Wl,"feFuncG",Ul(1,5)),bl(this,Q,$).call(this,Wl,"feFuncB",Ul(2,5)),R(this,J,v).append(Xl),hl(this,I,`url(#${yl})`),R(this,I)}destroy(){(!(arguments.length>0&&arguments[0]!==void 0&&arguments[0])||!R(this,I))&&(R(this,u)&&(R(this,u).parentNode.parentNode.remove(),hl(this,u,null)),R(this,h)&&(R(this,h).clear(),hl(this,h,null)),hl(this,T,0))}}h=new WeakMap,u=new WeakMap,M=new WeakMap,e=new WeakMap,n=new WeakMap,Y=new WeakMap,I=new WeakMap,T=new WeakMap,o=new WeakSet,C=function(){return R(this,h)||hl(this,h,new Map)},J=new WeakSet,v=function(){if(!R(this,u)){const H=R(this,e).createElement("div"),{style:P}=H;P.visibility="hidden",P.contain="strict",P.width=P.height=0,P.position="absolute",P.top=P.left=0,P.zIndex=-1;const g=R(this,e).createElementNS(D,"svg");g.setAttribute("width",0),g.setAttribute("height",0),hl(this,u,R(this,e).createElementNS(D,"defs")),H.append(g),g.append(R(this,u)),R(this,e).body.append(H)}return R(this,u)},Q=new WeakSet,$=function(H,P,g){const K=R(this,e).createElementNS(D,P);K.setAttribute("type","discrete"),K.setAttribute("tableValues",g),H.append(K)},d.DOMFilterFactory=j;class f extends q.BaseCanvasFactory{constructor(){let{ownerDocument:P=globalThis.document}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};super(),this._document=P}_createCanvas(P,g){const K=this._document.createElement("canvas");return K.width=P,K.height=g,K}}d.DOMCanvasFactory=f;async function sl(H){let P=arguments.length>1&&arguments[1]!==void 0&&arguments[1];if(Rl(H,document.baseURI)){const g=await fetch(H);if(!g.ok)throw new Error(g.statusText);return P?new Uint8Array(await g.arrayBuffer()):(0,x.stringToBytes)(await g.text())}return new Promise((g,K)=>{const il=new XMLHttpRequest;il.open("GET",H,!0),P&&(il.responseType="arraybuffer"),il.onreadystatechange=()=>{if(il.readyState===XMLHttpRequest.DONE){if(il.status===200||il.status===0){let ml;if(P&&il.response?ml=new Uint8Array(il.response):!P&&il.responseText&&(ml=(0,x.stringToBytes)(il.responseText)),ml){g(ml);return}}K(new Error(il.statusText))}},il.send(null)})}class tl extends q.BaseCMapReaderFactory{_fetchData(P,g){return sl(P,this.isCompressed).then(K=>({cMapData:K,compressionType:g}))}}d.DOMCMapReaderFactory=tl;class B extends q.BaseStandardFontDataFactory{_fetchData(P){return sl(P,!0)}}d.DOMStandardFontDataFactory=B;class cl extends q.BaseSVGFactory{_createSVG(P){return document.createElementNS(D,P)}}d.DOMSVGFactory=cl;class al{constructor(P){let{viewBox:g,scale:K,rotation:il,offsetX:ml=0,offsetY:Gl=0,dontFlip:ul=!1}=P;this.viewBox=g,this.scale=K,this.rotation=il,this.offsetX=ml,this.offsetY=Gl;const Nl=(g[2]+g[0])/2,yl=(g[3]+g[1])/2;let Xl,Wl,Dl,Ul,ll,V,O,A;switch(il%=360,il<0&&(il+=360),il){case 180:Xl=-1,Wl=0,Dl=0,Ul=1;break;case 90:Xl=0,Wl=1,Dl=1,Ul=0;break;case 270:Xl=0,Wl=-1,Dl=-1,Ul=0;break;case 0:Xl=1,Wl=0,Dl=0,Ul=-1;break;default:throw new Error("PageViewport: Invalid rotation, must be a multiple of 90 degrees.")}ul&&(Dl=-Dl,Ul=-Ul),Xl===0?(ll=Math.abs(yl-g[1])*K+ml,V=Math.abs(Nl-g[0])*K+Gl,O=(g[3]-g[1])*K,A=(g[2]-g[0])*K):(ll=Math.abs(Nl-g[0])*K+ml,V=Math.abs(yl-g[1])*K+Gl,O=(g[2]-g[0])*K,A=(g[3]-g[1])*K),this.transform=[Xl*K,Wl*K,Dl*K,Ul*K,ll-Xl*K*Nl-Dl*K*yl,V-Wl*K*Nl-Ul*K*yl],this.width=O,this.height=A}get rawDims(){const{viewBox:P}=this;return(0,x.shadow)(this,"rawDims",{pageWidth:P[2]-P[0],pageHeight:P[3]-P[1],pageX:P[0],pageY:P[1]})}clone(){let{scale:P=this.scale,rotation:g=this.rotation,offsetX:K=this.offsetX,offsetY:il=this.offsetY,dontFlip:ml=!1}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};return new al({viewBox:this.viewBox.slice(),scale:P,rotation:g,offsetX:K,offsetY:il,dontFlip:ml})}convertToViewportPoint(P,g){return x.Util.applyTransform([P,g],this.transform)}convertToViewportRectangle(P){const g=x.Util.applyTransform([P[0],P[1]],this.transform),K=x.Util.applyTransform([P[2],P[3]],this.transform);return[g[0],g[1],K[0],K[1]]}convertToPdfPoint(P,g){return x.Util.applyInverseTransform([P,g],this.transform)}}d.PageViewport=al;class Tl extends x.BaseException{constructor(P,g){let K=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0;super(P,"RenderingCancelledException"),this.type=g,this.extraDelay=K}}d.RenderingCancelledException=Tl;function nl(H){const P=H.length;let g=0;for(;g<P&&H[g].trim()==="";)g++;return H.substring(g,g+5).toLowerCase()==="data:"}d.StatTimer=class{constructor(){kl(this,"started",Object.create(null)),kl(this,"times",[])}time(H){H in this.started&&(0,x.warn)(`Timer is already running for ${H}`),this.started[H]=Date.now()}timeEnd(H){H in this.started||(0,x.warn)(`Timer has not been started for ${H}`),this.times.push({name:H,start:this.started[H],end:Date.now()}),delete this.started[H]}toString(){const H=[];let P=0;for(const{name:g}of this.times)P=Math.max(g.length,P);for(const{name:g,start:K,end:il}of this.times)H.push(`${g.padEnd(P)} ${il-K}ms
`);return H.join("")}};function Rl(H,P){try{const{protocol:g}=P?new URL(H,P):new URL(H);return g==="http:"||g==="https:"}catch{return!1}}let E;d.PDFDateString=class{static toDateObject(H){if(!H||typeof H!="string")return null;E||(E=new RegExp("^D:(\\d{4})(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?([Z|+|-])?(\\d{2})?'?(\\d{2})?'?"));const P=E.exec(H);if(!P)return null;const g=parseInt(P[1],10);let K=parseInt(P[2],10);K=K>=1&&K<=12?K-1:0;let il=parseInt(P[3],10);il=il>=1&&il<=31?il:1;let ml=parseInt(P[4],10);ml=ml>=0&&ml<=23?ml:0;let Gl=parseInt(P[5],10);Gl=Gl>=0&&Gl<=59?Gl:0;let ul=parseInt(P[6],10);ul=ul>=0&&ul<=59?ul:0;const Nl=P[7]||"Z";let yl=parseInt(P[8],10);yl=yl>=0&&yl<=23?yl:0;let Xl=parseInt(P[9],10)||0;return Xl=Xl>=0&&Xl<=59?Xl:0,Nl==="-"?(ml+=yl,Gl+=Xl):Nl==="+"&&(ml-=yl,Gl-=Xl),new Date(Date.UTC(g,K,il,ml,Gl,ul))}};function F(H){if(H.startsWith("#")){const P=parseInt(H.slice(1),16);return[(16711680&P)>>16,(65280&P)>>8,255&P]}return H.startsWith("rgb(")?H.slice(4,-1).split(",").map(P=>parseInt(P)):H.startsWith("rgba(")?H.slice(5,-1).split(",").map(P=>parseInt(P)).slice(0,3):((0,x.warn)(`Not a valid color format: "${H}"`),[0,0,0])}},(c,d,m)=>{Object.defineProperty(d,"__esModule",{value:!0}),d.BaseStandardFontDataFactory=d.BaseSVGFactory=d.BaseFilterFactory=d.BaseCanvasFactory=d.BaseCMapReaderFactory=void 0;var h=m(1);class u{constructor(){this.constructor===u&&(0,h.unreachable)("Cannot initialize BaseFilterFactory.")}addFilter(T){return"none"}addHCMFilter(T,o){return"none"}destroy(){}}d.BaseFilterFactory=u;class M{constructor(){this.constructor===M&&(0,h.unreachable)("Cannot initialize BaseCanvasFactory.")}create(T,o){if(T<=0||o<=0)throw new Error("Invalid canvas size");const C=this._createCanvas(T,o);return{canvas:C,context:C.getContext("2d")}}reset(T,o,C){if(!T.canvas)throw new Error("Canvas is not specified");if(o<=0||C<=0)throw new Error("Invalid canvas size");T.canvas.width=o,T.canvas.height=C}destroy(T){if(!T.canvas)throw new Error("Canvas is not specified");T.canvas.width=0,T.canvas.height=0,T.canvas=null,T.context=null}_createCanvas(T,o){(0,h.unreachable)("Abstract method `_createCanvas` called.")}}d.BaseCanvasFactory=M;class e{constructor(T){let{baseUrl:o=null,isCompressed:C=!0}=T;this.constructor===e&&(0,h.unreachable)("Cannot initialize BaseCMapReaderFactory."),this.baseUrl=o,this.isCompressed=C}async fetch(T){let{name:o}=T;if(!this.baseUrl)throw new Error('The CMap "baseUrl" parameter must be specified, ensure that the "cMapUrl" and "cMapPacked" API parameters are provided.');if(!o)throw new Error("CMap name must be specified.");const C=this.baseUrl+o+(this.isCompressed?".bcmap":""),J=this.isCompressed?h.CMapCompressionType.BINARY:h.CMapCompressionType.NONE;return this._fetchData(C,J).catch(v=>{throw new Error(`Unable to load ${this.isCompressed?"binary ":""}CMap at: ${C}`)})}_fetchData(T,o){(0,h.unreachable)("Abstract method `_fetchData` called.")}}d.BaseCMapReaderFactory=e;class n{constructor(T){let{baseUrl:o=null}=T;this.constructor===n&&(0,h.unreachable)("Cannot initialize BaseStandardFontDataFactory."),this.baseUrl=o}async fetch(T){let{filename:o}=T;if(!this.baseUrl)throw new Error('The standard font "baseUrl" parameter must be specified, ensure that the "standardFontDataUrl" API parameter is provided.');if(!o)throw new Error("Font filename must be specified.");const C=`${this.baseUrl}${o}`;return this._fetchData(C).catch(J=>{throw new Error(`Unable to load font data at: ${C}`)})}_fetchData(T){(0,h.unreachable)("Abstract method `_fetchData` called.")}}d.BaseStandardFontDataFactory=n;class Y{constructor(){this.constructor===Y&&(0,h.unreachable)("Cannot initialize BaseSVGFactory.")}create(T,o){let C=arguments.length>2&&arguments[2]!==void 0&&arguments[2];if(T<=0||o<=0)throw new Error("Invalid SVG dimensions");const J=this._createSVG("svg:svg");return J.setAttribute("version","1.1"),C||(J.setAttribute("width",`${T}px`),J.setAttribute("height",`${o}px`)),J.setAttribute("preserveAspectRatio","none"),J.setAttribute("viewBox",`0 0 ${T} ${o}`),J}createElement(T){if(typeof T!="string")throw new Error("Invalid SVG element type");return this._createSVG(T)}_createSVG(T){(0,h.unreachable)("Abstract method `_createSVG` called.")}}d.BaseSVGFactory=Y},(c,d,m)=>{Object.defineProperty(d,"__esModule",{value:!0}),d.MurmurHash3_64=void 0;var h=m(1);const u=3285377520,M=4294901760,e=65535;d.MurmurHash3_64=class{constructor(n){this.h1=n?4294967295&n:u,this.h2=n?4294967295&n:u}update(n){let Y,I;if(typeof n=="string"){Y=new Uint8Array(2*n.length),I=0;for(let w=0,j=n.length;w<j;w++){const f=n.charCodeAt(w);f<=255?Y[I++]=f:(Y[I++]=f>>>8,Y[I++]=255&f)}}else{if(!(0,h.isArrayBuffer)(n))throw new Error("Wrong data format in MurmurHash3_64_update. Input must be a string or array.");Y=n.slice(),I=Y.byteLength}const T=I>>2,o=I-4*T,C=new Uint32Array(Y.buffer,0,T);let J=0,v=0,Q=this.h1,$=this.h2;const q=3432918353,x=461845907,D=11601,r=13715;for(let w=0;w<T;w++)1&w?(J=C[w],J=J*q&M|J*D&e,J=J<<15|J>>>17,J=J*x&M|J*r&e,Q^=J,Q=Q<<13|Q>>>19,Q=5*Q+3864292196):(v=C[w],v=v*q&M|v*D&e,v=v<<15|v>>>17,v=v*x&M|v*r&e,$^=v,$=$<<13|$>>>19,$=5*$+3864292196);switch(J=0,o){case 3:J^=Y[4*T+2]<<16;case 2:J^=Y[4*T+1]<<8;case 1:J^=Y[4*T],J=J*q&M|J*D&e,J=J<<15|J>>>17,J=J*x&M|J*r&e,1&T?Q^=J:$^=J}this.h1=Q,this.h2=$}hexdigest(){let n=this.h1,Y=this.h2;return n^=Y>>>1,n=3981806797*n&M|36045*n&e,Y=4283543511*Y&M|(2950163797*(Y<<16|n>>>16)&M)>>>16,n^=Y>>>1,n=444984403*n&M|60499*n&e,Y=3301882366*Y&M|(3120437893*(Y<<16|n>>>16)&M)>>>16,n^=Y>>>1,(n>>>0).toString(16).padStart(8,"0")+(Y>>>0).toString(16).padStart(8,"0")}}},(c,d,m)=>{var h,u;Object.defineProperty(d,"__esModule",{value:!0}),d.FontLoader=d.FontFaceObject=void 0;var M=m(1),e=m(3);d.FontLoader=(u=class{constructor(n){Zl(this,h,new Set);let{ownerDocument:Y=globalThis.document,styleElement:I=null}=n;this._document=Y,this.nativeFontFaces=new Set,this.styleElement=null,this.loadingRequests=[],this.loadTestFontId=0}addNativeFontFace(n){this.nativeFontFaces.add(n),this._document.fonts.add(n)}removeNativeFontFace(n){this.nativeFontFaces.delete(n),this._document.fonts.delete(n)}insertRule(n){this.styleElement||(this.styleElement=this._document.createElement("style"),this._document.documentElement.getElementsByTagName("head")[0].append(this.styleElement));const Y=this.styleElement.sheet;Y.insertRule(n,Y.cssRules.length)}clear(){for(const n of this.nativeFontFaces)this._document.fonts.delete(n);this.nativeFontFaces.clear(),R(this,h).clear(),this.styleElement&&(this.styleElement.remove(),this.styleElement=null)}async loadSystemFont(n){if(n&&!R(this,h).has(n.loadedName))if((0,M.assert)(!this.disableFontFace,"loadSystemFont shouldn't be called when `disableFontFace` is set."),this.isFontLoadingAPISupported){const{loadedName:Y,src:I,style:T}=n,o=new FontFace(Y,I,T);this.addNativeFontFace(o);try{await o.load(),R(this,h).add(Y)}catch{(0,M.warn)(`Cannot load system font: ${n.baseFontName}, installing it could help to improve PDF rendering.`),this.removeNativeFontFace(o)}}else(0,M.unreachable)("Not implemented: loadSystemFont without the Font Loading API.")}async bind(n){if(n.attached||n.missingFile&&!n.systemFontInfo)return;if(n.attached=!0,n.systemFontInfo){await this.loadSystemFont(n.systemFontInfo);return}if(this.isFontLoadingAPISupported){const I=n.createNativeFontFace();if(I){this.addNativeFontFace(I);try{await I.loaded}catch(T){throw(0,M.warn)(`Failed to load font '${I.family}': '${T}'.`),n.disableFontFace=!0,T}}return}const Y=n.createFontFaceRule();if(Y){if(this.insertRule(Y),this.isSyncFontLoadingSupported)return;await new Promise(I=>{const T=this._queueLoadingCallback(I);this._prepareFontLoadEvent(n,T)})}}get isFontLoadingAPISupported(){var n;const Y=!((n=this._document)===null||n===void 0||!n.fonts);return(0,M.shadow)(this,"isFontLoadingAPISupported",Y)}get isSyncFontLoadingSupported(){let n=!1;return(e.isNodeJS||typeof navigator<"u"&&/Mozilla\/5.0.*?rv:\d+.*? Gecko/.test(navigator.userAgent))&&(n=!0),(0,M.shadow)(this,"isSyncFontLoadingSupported",n)}_queueLoadingCallback(n){const{loadingRequests:Y}=this,I={done:!1,complete:function(){for((0,M.assert)(!I.done,"completeRequest() cannot be called twice."),I.done=!0;Y.length>0&&Y[0].done;){const T=Y.shift();setTimeout(T.callback,0)}},callback:n};return Y.push(I),I}get _loadTestFont(){const n=atob("T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==");return(0,M.shadow)(this,"_loadTestFont",n)}_prepareFontLoadEvent(n,Y){function I(j,f){return j.charCodeAt(f)<<24|j.charCodeAt(f+1)<<16|j.charCodeAt(f+2)<<8|255&j.charCodeAt(f+3)}function T(j,f,sl,tl){return j.substring(0,f)+tl+j.substring(f+sl)}let o,C;const J=this._document.createElement("canvas");J.width=1,J.height=1;const v=J.getContext("2d");let Q=0;const $=`lt${Date.now()}${this.loadTestFontId++}`;let q=this._loadTestFont;q=T(q,976,$.length,$);const x=1482184792;let D=I(q,16);for(o=0,C=$.length-3;o<C;o+=4)D=D-x+I($,o)|0;o<$.length&&(D=D-x+I($+"XXX",o)|0),q=T(q,16,4,(0,M.string32)(D));const r=`@font-face {font-family:"${$}";src:${`url(data:font/opentype;base64,${btoa(q)});`}}`;this.insertRule(r);const w=this._document.createElement("div");w.style.visibility="hidden",w.style.width=w.style.height="10px",w.style.position="absolute",w.style.top=w.style.left="0px";for(const j of[n.loadedName,$]){const f=this._document.createElement("span");f.textContent="Hi",f.style.fontFamily=j,w.append(f)}this._document.body.append(w),function j(f,sl){if(++Q>30){(0,M.warn)("Load test font never loaded."),sl();return}v.font="30px "+f,v.fillText(".",0,20),v.getImageData(0,0,1,1).data[3]>0?sl():setTimeout(j.bind(null,f,sl))}($,()=>{w.remove(),Y.complete()})}},h=new WeakMap,u),d.FontFaceObject=class{constructor(n,Y){let{isEvalSupported:I=!0,disableFontFace:T=!1,ignoreErrors:o=!1,inspectFont:C=null}=Y;this.compiledGlyphs=Object.create(null);for(const J in n)this[J]=n[J];this.isEvalSupported=I!==!1,this.disableFontFace=T===!0,this.ignoreErrors=o===!0,this._inspectFont=C}createNativeFontFace(){var n;if(!this.data||this.disableFontFace)return null;let Y;if(this.cssFontInfo){const I={weight:this.cssFontInfo.fontWeight};this.cssFontInfo.italicAngle&&(I.style=`oblique ${this.cssFontInfo.italicAngle}deg`),Y=new FontFace(this.cssFontInfo.fontFamily,this.data,I)}else Y=new FontFace(this.loadedName,this.data,{});return(n=this._inspectFont)===null||n===void 0||n.call(this,this),Y}createFontFaceRule(){var n;if(!this.data||this.disableFontFace)return null;const Y=(0,M.bytesToString)(this.data),I=`url(data:${this.mimetype};base64,${btoa(Y)});`;let T;if(this.cssFontInfo){let o=`font-weight: ${this.cssFontInfo.fontWeight};`;this.cssFontInfo.italicAngle&&(o+=`font-style: oblique ${this.cssFontInfo.italicAngle}deg;`),T=`@font-face {font-family:"${this.cssFontInfo.fontFamily}";${o}src:${I}}`}else T=`@font-face {font-family:"${this.loadedName}";src:${I}}`;return(n=this._inspectFont)===null||n===void 0||n.call(this,this,I),T}getPathGenerator(n,Y){if(this.compiledGlyphs[Y]!==void 0)return this.compiledGlyphs[Y];let I;try{I=n.get(this.loadedName+"_path_"+Y)}catch(T){if(!this.ignoreErrors)throw T;return(0,M.warn)(`getPathGenerator - ignoring character: "${T}".`),this.compiledGlyphs[Y]=function(o,C){}}if(this.isEvalSupported&&M.FeatureTest.isEvalSupported){const T=[];for(const o of I){const C=o.args!==void 0?o.args.join(","):"";T.push("c.",o.cmd,"(",C,`);
`)}return this.compiledGlyphs[Y]=new Function("c","size",T.join(""))}return this.compiledGlyphs[Y]=function(T,o){for(const C of I)C.cmd==="scale"&&(C.args=[o,-o]),T[C.cmd].apply(T,C.args)}}}},(c,d,m)=>{var h,u,M,e;Object.defineProperty(d,"__esModule",{value:!0}),d.CanvasGraphics=void 0;var n=m(1),Y=m(142),I=m(147),T=m(148),o=m(3);const C=4096,J=16;class v{constructor(F){this.canvasFactory=F,this.cache=Object.create(null)}getCanvas(F,H,P){let g;return this.cache[F]!==void 0?(g=this.cache[F],this.canvasFactory.reset(g,H,P)):(g=this.canvasFactory.create(H,P),this.cache[F]=g),g}delete(F){delete this.cache[F]}clear(){for(const F in this.cache){const H=this.cache[F];this.canvasFactory.destroy(H),delete this.cache[F]}}}function Q(E,F,H,P,g,K,il,ml,Gl,ul){const[Nl,yl,Xl,Wl,Dl,Ul]=(0,Y.getCurrentTransform)(E);if(yl===0&&Xl===0){const ll=il*Nl+Dl,V=Math.round(ll),O=ml*Wl+Ul,A=Math.round(O),_=(il+Gl)*Nl+Dl,dl=Math.abs(Math.round(_)-V)||1,Ml=(ml+ul)*Wl+Ul,Yl=Math.abs(Math.round(Ml)-A)||1;return E.setTransform(Math.sign(Nl),0,0,Math.sign(Wl),V,A),E.drawImage(F,H,P,g,K,0,0,dl,Yl),E.setTransform(Nl,yl,Xl,Wl,Dl,Ul),[dl,Yl]}if(Nl===0&&Wl===0){const ll=ml*Xl+Dl,V=Math.round(ll),O=il*yl+Ul,A=Math.round(O),_=(ml+ul)*Xl+Dl,dl=Math.abs(Math.round(_)-V)||1,Ml=(il+Gl)*yl+Ul,Yl=Math.abs(Math.round(Ml)-A)||1;return E.setTransform(0,Math.sign(yl),Math.sign(Xl),0,V,A),E.drawImage(F,H,P,g,K,0,0,Yl,dl),E.setTransform(Nl,yl,Xl,Wl,Dl,Ul),[Yl,dl]}return E.drawImage(F,H,P,g,K,il,ml,Gl,ul),[Math.hypot(Nl,yl)*Gl,Math.hypot(Xl,Wl)*ul]}class ${constructor(F,H){this.alphaIsShape=!1,this.fontSize=0,this.fontSizeScale=1,this.textMatrix=n.IDENTITY_MATRIX,this.textMatrixScale=1,this.fontMatrix=n.FONT_IDENTITY_MATRIX,this.leading=0,this.x=0,this.y=0,this.lineX=0,this.lineY=0,this.charSpacing=0,this.wordSpacing=0,this.textHScale=1,this.textRenderingMode=n.TextRenderingMode.FILL,this.textRise=0,this.fillColor="#000000",this.strokeColor="#000000",this.patternFill=!1,this.fillAlpha=1,this.strokeAlpha=1,this.lineWidth=1,this.activeSMask=null,this.transferMaps="none",this.startNewPathAndClipBox([0,0,F,H])}clone(){const F=Object.create(this);return F.clipBox=this.clipBox.slice(),F}setCurrentPoint(F,H){this.x=F,this.y=H}updatePathMinMax(F,H,P){[H,P]=n.Util.applyTransform([H,P],F),this.minX=Math.min(this.minX,H),this.minY=Math.min(this.minY,P),this.maxX=Math.max(this.maxX,H),this.maxY=Math.max(this.maxY,P)}updateRectMinMax(F,H){const P=n.Util.applyTransform(H,F),g=n.Util.applyTransform(H.slice(2),F);this.minX=Math.min(this.minX,P[0],g[0]),this.minY=Math.min(this.minY,P[1],g[1]),this.maxX=Math.max(this.maxX,P[0],g[0]),this.maxY=Math.max(this.maxY,P[1],g[1])}updateScalingPathMinMax(F,H){n.Util.scaleMinMax(F,H),this.minX=Math.min(this.minX,H[0]),this.maxX=Math.max(this.maxX,H[1]),this.minY=Math.min(this.minY,H[2]),this.maxY=Math.max(this.maxY,H[3])}updateCurvePathMinMax(F,H,P,g,K,il,ml,Gl,ul,Nl){const yl=n.Util.bezierBoundingBox(H,P,g,K,il,ml,Gl,ul);Nl?(Nl[0]=Math.min(Nl[0],yl[0],yl[2]),Nl[1]=Math.max(Nl[1],yl[0],yl[2]),Nl[2]=Math.min(Nl[2],yl[1],yl[3]),Nl[3]=Math.max(Nl[3],yl[1],yl[3])):this.updateRectMinMax(F,yl)}getPathBoundingBox(){let F=arguments.length>0&&arguments[0]!==void 0?arguments[0]:I.PathType.FILL,H=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;const P=[this.minX,this.minY,this.maxX,this.maxY];if(F===I.PathType.STROKE){H||(0,n.unreachable)("Stroke bounding box must include transform.");const g=n.Util.singularValueDecompose2dScale(H),K=g[0]*this.lineWidth/2,il=g[1]*this.lineWidth/2;P[0]-=K,P[1]-=il,P[2]+=K,P[3]+=il}return P}updateClipFromPath(){const F=n.Util.intersect(this.clipBox,this.getPathBoundingBox());this.startNewPathAndClipBox(F||[0,0,0,0])}isEmptyClip(){return this.minX===1/0}startNewPathAndClipBox(F){this.clipBox=F,this.minX=1/0,this.minY=1/0,this.maxX=0,this.maxY=0}getClippedPathBoundingBox(){let F=arguments.length>0&&arguments[0]!==void 0?arguments[0]:I.PathType.FILL,H=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;return n.Util.intersect(this.clipBox,this.getPathBoundingBox(F,H))}}function q(E,F){if(typeof ImageData<"u"&&F instanceof ImageData){E.putImageData(F,0,0);return}const H=F.height,P=F.width,g=H%J,K=(H-g)/J,il=g===0?K:K+1,ml=E.createImageData(P,J);let Gl,ul=0;const Nl=F.data,yl=ml.data;let Xl,Wl,Dl,Ul;if(F.kind===n.ImageKind.GRAYSCALE_1BPP){const ll=Nl.byteLength,V=new Uint32Array(yl.buffer,0,yl.byteLength>>2),O=V.length,A=P+7>>3,_=4294967295,dl=n.FeatureTest.isLittleEndian?4278190080:255;for(Xl=0;Xl<il;Xl++){for(Dl=Xl<K?J:g,Gl=0,Wl=0;Wl<Dl;Wl++){const Ml=ll-ul;let Yl=0;const Vl=Ml>A?P:8*Ml-7,Ll=-8&Vl;let ol=0,zl=0;for(;Yl<Ll;Yl+=8)zl=Nl[ul++],V[Gl++]=128&zl?_:dl,V[Gl++]=64&zl?_:dl,V[Gl++]=32&zl?_:dl,V[Gl++]=16&zl?_:dl,V[Gl++]=8&zl?_:dl,V[Gl++]=4&zl?_:dl,V[Gl++]=2&zl?_:dl,V[Gl++]=1&zl?_:dl;for(;Yl<Vl;Yl++)ol===0&&(zl=Nl[ul++],ol=128),V[Gl++]=zl&ol?_:dl,ol>>=1}for(;Gl<O;)V[Gl++]=0;E.putImageData(ml,0,Xl*J)}}else if(F.kind===n.ImageKind.RGBA_32BPP){for(Wl=0,Ul=P*J*4,Xl=0;Xl<K;Xl++)yl.set(Nl.subarray(ul,ul+Ul)),ul+=Ul,E.putImageData(ml,0,Wl),Wl+=J;Xl<il&&(Ul=P*g*4,yl.set(Nl.subarray(ul,ul+Ul)),E.putImageData(ml,0,Wl))}else{if(F.kind!==n.ImageKind.RGB_24BPP)throw new Error(`bad image kind: ${F.kind}`);for(Dl=J,Ul=P*Dl,Xl=0;Xl<il;Xl++){for(Xl>=K&&(Dl=g,Ul=P*Dl),Gl=0,Wl=Ul;Wl--;)yl[Gl++]=Nl[ul++],yl[Gl++]=Nl[ul++],yl[Gl++]=Nl[ul++],yl[Gl++]=255;E.putImageData(ml,0,Xl*J)}}}function x(E,F){if(F.bitmap){E.drawImage(F.bitmap,0,0);return}const H=F.height,P=F.width,g=H%J,K=(H-g)/J,il=g===0?K:K+1,ml=E.createImageData(P,J);let Gl=0;const ul=F.data,Nl=ml.data;for(let yl=0;yl<il;yl++){const Xl=yl<K?J:g;({srcPos:Gl}=(0,T.convertBlackAndWhiteToRGBA)({src:ul,srcPos:Gl,dest:Nl,width:P,height:Xl,nonBlackColor:0})),E.putImageData(ml,0,yl*J)}}function D(E,F){const H=["strokeStyle","fillStyle","fillRule","globalAlpha","lineWidth","lineCap","lineJoin","miterLimit","globalCompositeOperation","font","filter"];for(const P of H)E[P]!==void 0&&(F[P]=E[P]);E.setLineDash!==void 0&&(F.setLineDash(E.getLineDash()),F.lineDashOffset=E.lineDashOffset)}function r(E){E.strokeStyle=E.fillStyle="#000000",E.fillRule="nonzero",E.globalAlpha=1,E.lineWidth=1,E.lineCap="butt",E.lineJoin="miter",E.miterLimit=10,E.globalCompositeOperation="source-over",E.font="10px sans-serif",E.setLineDash!==void 0&&(E.setLineDash([]),E.lineDashOffset=0),o.isNodeJS||(E.filter="none")}function w(E,F,H,P){const g=E.length;for(let K=3;K<g;K+=4){const il=E[K];if(il===0)E[K-3]=F,E[K-2]=H,E[K-1]=P;else if(il<255){const ml=255-il;E[K-3]=E[K-3]*il+F*ml>>8,E[K-2]=E[K-2]*il+H*ml>>8,E[K-1]=E[K-1]*il+P*ml>>8}}}function j(E,F,H){const P=E.length;for(let g=3;g<P;g+=4){const K=H?H[E[g]]:E[g];F[g]=F[g]*K*.00392156862745098|0}}function f(E,F,H){const P=E.length;for(let g=3;g<P;g+=4){const K=77*E[g-3]+152*E[g-2]+28*E[g-1];F[g]=H?F[g]*H[K>>8]>>8:F[g]*K>>16}}function sl(E,F,H,P){const g=P[0],K=P[1],il=P[2]-g,ml=P[3]-K;il!==0&&ml!==0&&(function(Gl,ul,Nl,yl,Xl,Wl,Dl,Ul,ll,V,O){const A=!!Wl,_=A?Wl[0]:0,dl=A?Wl[1]:0,Ml=A?Wl[2]:0;let Yl;Yl=Xl==="Luminosity"?f:j;const Vl=Math.min(yl,Math.ceil(1048576/Nl));for(let Ll=0;Ll<yl;Ll+=Vl){const ol=Math.min(Vl,yl-Ll),zl=Gl.getImageData(Ul-V,Ll+(ll-O),Nl,ol),Il=ul.getImageData(Ul,Ll+ll,Nl,ol);A&&w(zl.data,_,dl,Ml),Yl(zl.data,Il.data,Dl),ul.putImageData(Il,Ul,Ll+ll)}}(F.context,H,il,ml,F.subtype,F.backdrop,F.transferMap,g,K,F.offsetX,F.offsetY),E.save(),E.globalAlpha=1,E.globalCompositeOperation="source-over",E.setTransform(1,0,0,1,0,0),E.drawImage(H.canvas,0,0),E.restore())}function tl(E,F){const H=n.Util.singularValueDecompose2dScale(E);H[0]=Math.fround(H[0]),H[1]=Math.fround(H[1]);const P=Math.fround((globalThis.devicePixelRatio||1)*Y.PixelsPerInch.PDF_TO_CSS_UNITS);return F!==void 0?F:H[0]<=P||H[1]<=P}const B=["butt","round","square"],cl=["miter","round","bevel"],al={},Tl={},nl=class{constructor(E,F,H,P,g,K,il,ml){Zl(this,h),Zl(this,M);let{optionalContentConfig:Gl,markedContentStack:ul=null}=K;this.ctx=E,this.current=new $(this.ctx.canvas.width,this.ctx.canvas.height),this.stateStack=[],this.pendingClip=null,this.pendingEOFill=!1,this.res=null,this.xobjs=null,this.commonObjs=F,this.objs=H,this.canvasFactory=P,this.filterFactory=g,this.groupStack=[],this.processingType3=null,this.baseTransform=null,this.baseTransformStack=[],this.groupLevel=0,this.smaskStack=[],this.smaskCounter=0,this.tempSMask=null,this.suspendedCtx=null,this.contentVisible=!0,this.markedContentStack=ul||[],this.optionalContentConfig=Gl,this.cachedCanvases=new v(this.canvasFactory),this.cachedPatterns=new Map,this.annotationCanvasMap=il,this.viewportScale=1,this.outputScaleX=1,this.outputScaleY=1,this.pageColors=ml,this._cachedScaleForStroking=[-1,0],this._cachedGetSinglePixelWidth=null,this._cachedBitmapsMap=new Map}getObject(E){let F=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;return typeof E=="string"?E.startsWith("g_")?this.commonObjs.get(E):this.objs.get(E):F}beginDrawing(E){let{transform:F,viewport:H,transparency:P=!1,background:g=null}=E;const K=this.ctx.canvas.width,il=this.ctx.canvas.height,ml=this.ctx.fillStyle;if(this.ctx.fillStyle=g||"#ffffff",this.ctx.fillRect(0,0,K,il),this.ctx.fillStyle=ml,P){const Gl=this.cachedCanvases.getCanvas("transparent",K,il);this.compositeCtx=this.ctx,this.transparentCanvas=Gl.canvas,this.ctx=Gl.context,this.ctx.save(),this.ctx.transform(...(0,Y.getCurrentTransform)(this.compositeCtx))}this.ctx.save(),r(this.ctx),F&&(this.ctx.transform(...F),this.outputScaleX=F[0],this.outputScaleY=F[0]),this.ctx.transform(...H.transform),this.viewportScale=H.scale,this.baseTransform=(0,Y.getCurrentTransform)(this.ctx)}executeOperatorList(E,F,H,P){const g=E.argsArray,K=E.fnArray;let il=F||0;const ml=g.length;if(ml===il)return il;const Gl=ml-il>10&&typeof H=="function",ul=Gl?Date.now()+15:0;let Nl=0;const yl=this.commonObjs,Xl=this.objs;let Wl;for(;;){if(P!==void 0&&il===P.nextBreakPoint)return P.breakIt(il,H),il;if(Wl=K[il],Wl!==n.OPS.dependency)this[Wl].apply(this,g[il]);else for(const Dl of g[il]){const Ul=Dl.startsWith("g_")?yl:Xl;if(!Ul.has(Dl))return Ul.get(Dl,H),il}if(il++,il===ml)return il;if(Gl&&++Nl>10){if(Date.now()>ul)return H(),il;Nl=0}}}endDrawing(){bl(this,h,u).call(this),this.cachedCanvases.clear(),this.cachedPatterns.clear();for(const E of this._cachedBitmapsMap.values()){for(const F of E.values())typeof HTMLCanvasElement<"u"&&F instanceof HTMLCanvasElement&&(F.width=F.height=0);E.clear()}this._cachedBitmapsMap.clear(),bl(this,M,e).call(this)}_scaleImage(E,F){const H=E.width,P=E.height;let g,K,il=Math.max(Math.hypot(F[0],F[1]),1),ml=Math.max(Math.hypot(F[2],F[3]),1),Gl=H,ul=P,Nl="prescale1";for(;il>2&&Gl>1||ml>2&&ul>1;){let yl=Gl,Xl=ul;il>2&&Gl>1&&(yl=Gl>=16384?Math.floor(Gl/2)-1||1:Math.ceil(Gl/2),il/=Gl/yl),ml>2&&ul>1&&(Xl=ul>=16384?Math.floor(ul/2)-1||1:Math.ceil(ul)/2,ml/=ul/Xl),g=this.cachedCanvases.getCanvas(Nl,yl,Xl),K=g.context,K.clearRect(0,0,yl,Xl),K.drawImage(E,0,0,Gl,ul,0,0,yl,Xl),E=g.canvas,Gl=yl,ul=Xl,Nl=Nl==="prescale1"?"prescale2":"prescale1"}return{img:E,paintWidth:Gl,paintHeight:ul}}_createMaskCanvas(E){const F=this.ctx,{width:H,height:P}=E,g=this.current.fillColor,K=this.current.patternFill,il=(0,Y.getCurrentTransform)(F);let ml,Gl,ul,Nl;if((E.bitmap||E.data)&&E.count>1){const Ml=E.bitmap||E.data.buffer;Gl=JSON.stringify(K?il:[il.slice(0,4),g]),ml=this._cachedBitmapsMap.get(Ml),ml||(ml=new Map,this._cachedBitmapsMap.set(Ml,ml));const Yl=ml.get(Gl);if(Yl&&!K)return{canvas:Yl,offsetX:Math.round(Math.min(il[0],il[2])+il[4]),offsetY:Math.round(Math.min(il[1],il[3])+il[5])};ul=Yl}ul||(Nl=this.cachedCanvases.getCanvas("maskCanvas",H,P),x(Nl.context,E));let yl=n.Util.transform(il,[1/H,0,0,-1/P,0,0]);yl=n.Util.transform(yl,[1,0,0,1,0,-P]);const Xl=n.Util.applyTransform([0,0],yl),Wl=n.Util.applyTransform([H,P],yl),Dl=n.Util.normalizeRect([Xl[0],Xl[1],Wl[0],Wl[1]]),Ul=Math.round(Dl[2]-Dl[0])||1,ll=Math.round(Dl[3]-Dl[1])||1,V=this.cachedCanvases.getCanvas("fillCanvas",Ul,ll),O=V.context,A=Math.min(Xl[0],Wl[0]),_=Math.min(Xl[1],Wl[1]);O.translate(-A,-_),O.transform(...yl),ul||(ul=this._scaleImage(Nl.canvas,(0,Y.getCurrentTransformInverse)(O)),ul=ul.img,ml&&K&&ml.set(Gl,ul)),O.imageSmoothingEnabled=tl((0,Y.getCurrentTransform)(O),E.interpolate),Q(O,ul,0,0,ul.width,ul.height,0,0,H,P),O.globalCompositeOperation="source-in";const dl=n.Util.transform((0,Y.getCurrentTransformInverse)(O),[1,0,0,1,-A,-_]);return O.fillStyle=K?g.getPattern(F,this,dl,I.PathType.FILL):g,O.fillRect(0,0,H,P),ml&&!K&&(this.cachedCanvases.delete("fillCanvas"),ml.set(Gl,V.canvas)),{canvas:V.canvas,offsetX:Math.round(A),offsetY:Math.round(_)}}setLineWidth(E){E!==this.current.lineWidth&&(this._cachedScaleForStroking[0]=-1),this.current.lineWidth=E,this.ctx.lineWidth=E}setLineCap(E){this.ctx.lineCap=B[E]}setLineJoin(E){this.ctx.lineJoin=cl[E]}setMiterLimit(E){this.ctx.miterLimit=E}setDash(E,F){const H=this.ctx;H.setLineDash!==void 0&&(H.setLineDash(E),H.lineDashOffset=F)}setRenderingIntent(E){}setFlatness(E){}setGState(E){for(const[F,H]of E)switch(F){case"LW":this.setLineWidth(H);break;case"LC":this.setLineCap(H);break;case"LJ":this.setLineJoin(H);break;case"ML":this.setMiterLimit(H);break;case"D":this.setDash(H[0],H[1]);break;case"RI":this.setRenderingIntent(H);break;case"FL":this.setFlatness(H);break;case"Font":this.setFont(H[0],H[1]);break;case"CA":this.current.strokeAlpha=H;break;case"ca":this.current.fillAlpha=H,this.ctx.globalAlpha=H;break;case"BM":this.ctx.globalCompositeOperation=H;break;case"SMask":this.current.activeSMask=H?this.tempSMask:null,this.tempSMask=null,this.checkSMaskState();break;case"TR":this.ctx.filter=this.current.transferMaps=this.filterFactory.addFilter(H)}}get inSMaskMode(){return!!this.suspendedCtx}checkSMaskState(){const E=this.inSMaskMode;this.current.activeSMask&&!E?this.beginSMaskMode():!this.current.activeSMask&&E&&this.endSMaskMode()}beginSMaskMode(){if(this.inSMaskMode)throw new Error("beginSMaskMode called while already in smask mode");const E=this.ctx.canvas.width,F=this.ctx.canvas.height,H="smaskGroupAt"+this.groupLevel,P=this.cachedCanvases.getCanvas(H,E,F);this.suspendedCtx=this.ctx,this.ctx=P.context;const g=this.ctx;g.setTransform(...(0,Y.getCurrentTransform)(this.suspendedCtx)),D(this.suspendedCtx,g),function(K,il){if(K._removeMirroring)throw new Error("Context is already forwarding operations.");K.__originalSave=K.save,K.__originalRestore=K.restore,K.__originalRotate=K.rotate,K.__originalScale=K.scale,K.__originalTranslate=K.translate,K.__originalTransform=K.transform,K.__originalSetTransform=K.setTransform,K.__originalResetTransform=K.resetTransform,K.__originalClip=K.clip,K.__originalMoveTo=K.moveTo,K.__originalLineTo=K.lineTo,K.__originalBezierCurveTo=K.bezierCurveTo,K.__originalRect=K.rect,K.__originalClosePath=K.closePath,K.__originalBeginPath=K.beginPath,K._removeMirroring=()=>{K.save=K.__originalSave,K.restore=K.__originalRestore,K.rotate=K.__originalRotate,K.scale=K.__originalScale,K.translate=K.__originalTranslate,K.transform=K.__originalTransform,K.setTransform=K.__originalSetTransform,K.resetTransform=K.__originalResetTransform,K.clip=K.__originalClip,K.moveTo=K.__originalMoveTo,K.lineTo=K.__originalLineTo,K.bezierCurveTo=K.__originalBezierCurveTo,K.rect=K.__originalRect,K.closePath=K.__originalClosePath,K.beginPath=K.__originalBeginPath,delete K._removeMirroring},K.save=function(){il.save(),this.__originalSave()},K.restore=function(){il.restore(),this.__originalRestore()},K.translate=function(ml,Gl){il.translate(ml,Gl),this.__originalTranslate(ml,Gl)},K.scale=function(ml,Gl){il.scale(ml,Gl),this.__originalScale(ml,Gl)},K.transform=function(ml,Gl,ul,Nl,yl,Xl){il.transform(ml,Gl,ul,Nl,yl,Xl),this.__originalTransform(ml,Gl,ul,Nl,yl,Xl)},K.setTransform=function(ml,Gl,ul,Nl,yl,Xl){il.setTransform(ml,Gl,ul,Nl,yl,Xl),this.__originalSetTransform(ml,Gl,ul,Nl,yl,Xl)},K.resetTransform=function(){il.resetTransform(),this.__originalResetTransform()},K.rotate=function(ml){il.rotate(ml),this.__originalRotate(ml)},K.clip=function(ml){il.clip(ml),this.__originalClip(ml)},K.moveTo=function(ml,Gl){il.moveTo(ml,Gl),this.__originalMoveTo(ml,Gl)},K.lineTo=function(ml,Gl){il.lineTo(ml,Gl),this.__originalLineTo(ml,Gl)},K.bezierCurveTo=function(ml,Gl,ul,Nl,yl,Xl){il.bezierCurveTo(ml,Gl,ul,Nl,yl,Xl),this.__originalBezierCurveTo(ml,Gl,ul,Nl,yl,Xl)},K.rect=function(ml,Gl,ul,Nl){il.rect(ml,Gl,ul,Nl),this.__originalRect(ml,Gl,ul,Nl)},K.closePath=function(){il.closePath(),this.__originalClosePath()},K.beginPath=function(){il.beginPath(),this.__originalBeginPath()}}(g,this.suspendedCtx),this.setGState([["BM","source-over"],["ca",1],["CA",1]])}endSMaskMode(){if(!this.inSMaskMode)throw new Error("endSMaskMode called while not in smask mode");this.ctx._removeMirroring(),D(this.ctx,this.suspendedCtx),this.ctx=this.suspendedCtx,this.suspendedCtx=null}compose(E){if(!this.current.activeSMask)return;E?(E[0]=Math.floor(E[0]),E[1]=Math.floor(E[1]),E[2]=Math.ceil(E[2]),E[3]=Math.ceil(E[3])):E=[0,0,this.ctx.canvas.width,this.ctx.canvas.height];const F=this.current.activeSMask;sl(this.suspendedCtx,F,this.ctx,E),this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height),this.ctx.restore()}save(){this.inSMaskMode?(D(this.ctx,this.suspendedCtx),this.suspendedCtx.save()):this.ctx.save();const E=this.current;this.stateStack.push(E),this.current=E.clone()}restore(){this.stateStack.length===0&&this.inSMaskMode&&this.endSMaskMode(),this.stateStack.length!==0&&(this.current=this.stateStack.pop(),this.inSMaskMode?(this.suspendedCtx.restore(),D(this.suspendedCtx,this.ctx)):this.ctx.restore(),this.checkSMaskState(),this.pendingClip=null,this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null)}transform(E,F,H,P,g,K){this.ctx.transform(E,F,H,P,g,K),this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null}constructPath(E,F,H){const P=this.ctx,g=this.current;let K,il,ml=g.x,Gl=g.y;const ul=(0,Y.getCurrentTransform)(P),Nl=ul[0]===0&&ul[3]===0||ul[1]===0&&ul[2]===0,yl=Nl?H.slice(0):null;for(let Xl=0,Wl=0,Dl=E.length;Xl<Dl;Xl++)switch(0|E[Xl]){case n.OPS.rectangle:ml=F[Wl++],Gl=F[Wl++];const Ul=F[Wl++],ll=F[Wl++],V=ml+Ul,O=Gl+ll;P.moveTo(ml,Gl),Ul===0||ll===0?P.lineTo(V,O):(P.lineTo(V,Gl),P.lineTo(V,O),P.lineTo(ml,O)),Nl||g.updateRectMinMax(ul,[ml,Gl,V,O]),P.closePath();break;case n.OPS.moveTo:ml=F[Wl++],Gl=F[Wl++],P.moveTo(ml,Gl),Nl||g.updatePathMinMax(ul,ml,Gl);break;case n.OPS.lineTo:ml=F[Wl++],Gl=F[Wl++],P.lineTo(ml,Gl),Nl||g.updatePathMinMax(ul,ml,Gl);break;case n.OPS.curveTo:K=ml,il=Gl,ml=F[Wl+4],Gl=F[Wl+5],P.bezierCurveTo(F[Wl],F[Wl+1],F[Wl+2],F[Wl+3],ml,Gl),g.updateCurvePathMinMax(ul,K,il,F[Wl],F[Wl+1],F[Wl+2],F[Wl+3],ml,Gl,yl),Wl+=6;break;case n.OPS.curveTo2:K=ml,il=Gl,P.bezierCurveTo(ml,Gl,F[Wl],F[Wl+1],F[Wl+2],F[Wl+3]),g.updateCurvePathMinMax(ul,K,il,ml,Gl,F[Wl],F[Wl+1],F[Wl+2],F[Wl+3],yl),ml=F[Wl+2],Gl=F[Wl+3],Wl+=4;break;case n.OPS.curveTo3:K=ml,il=Gl,ml=F[Wl+2],Gl=F[Wl+3],P.bezierCurveTo(F[Wl],F[Wl+1],ml,Gl,ml,Gl),g.updateCurvePathMinMax(ul,K,il,F[Wl],F[Wl+1],ml,Gl,ml,Gl,yl),Wl+=4;break;case n.OPS.closePath:P.closePath()}Nl&&g.updateScalingPathMinMax(ul,yl),g.setCurrentPoint(ml,Gl)}closePath(){this.ctx.closePath()}stroke(){let E=!(arguments.length>0&&arguments[0]!==void 0)||arguments[0];const F=this.ctx,H=this.current.strokeColor;F.globalAlpha=this.current.strokeAlpha,this.contentVisible&&(typeof H=="object"&&H!=null&&H.getPattern?(F.save(),F.strokeStyle=H.getPattern(F,this,(0,Y.getCurrentTransformInverse)(F),I.PathType.STROKE),this.rescaleAndStroke(!1),F.restore()):this.rescaleAndStroke(!0)),E&&this.consumePath(this.current.getClippedPathBoundingBox()),F.globalAlpha=this.current.fillAlpha}closeStroke(){this.closePath(),this.stroke()}fill(){let E=!(arguments.length>0&&arguments[0]!==void 0)||arguments[0];const F=this.ctx,H=this.current.fillColor;let P=!1;this.current.patternFill&&(F.save(),F.fillStyle=H.getPattern(F,this,(0,Y.getCurrentTransformInverse)(F),I.PathType.FILL),P=!0);const g=this.current.getClippedPathBoundingBox();this.contentVisible&&g!==null&&(this.pendingEOFill?(F.fill("evenodd"),this.pendingEOFill=!1):F.fill()),P&&F.restore(),E&&this.consumePath(g)}eoFill(){this.pendingEOFill=!0,this.fill()}fillStroke(){this.fill(!1),this.stroke(!1),this.consumePath()}eoFillStroke(){this.pendingEOFill=!0,this.fillStroke()}closeFillStroke(){this.closePath(),this.fillStroke()}closeEOFillStroke(){this.pendingEOFill=!0,this.closePath(),this.fillStroke()}endPath(){this.consumePath()}clip(){this.pendingClip=al}eoClip(){this.pendingClip=Tl}beginText(){this.current.textMatrix=n.IDENTITY_MATRIX,this.current.textMatrixScale=1,this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0}endText(){const E=this.pendingTextPaths,F=this.ctx;if(E!==void 0){F.save(),F.beginPath();for(const H of E)F.setTransform(...H.transform),F.translate(H.x,H.y),H.addToPath(F,H.fontSize);F.restore(),F.clip(),F.beginPath(),delete this.pendingTextPaths}else F.beginPath()}setCharSpacing(E){this.current.charSpacing=E}setWordSpacing(E){this.current.wordSpacing=E}setHScale(E){this.current.textHScale=E/100}setLeading(E){this.current.leading=-E}setFont(E,F){var H;const P=this.commonObjs.get(E),g=this.current;if(!P)throw new Error(`Can't find font for ${E}`);if(g.fontMatrix=P.fontMatrix||n.FONT_IDENTITY_MATRIX,g.fontMatrix[0]!==0&&g.fontMatrix[3]!==0||(0,n.warn)("Invalid font matrix for font "+E),F<0?(F=-F,g.fontDirection=-1):g.fontDirection=1,this.current.font=P,this.current.fontSize=F,P.isType3Font)return;const K=P.loadedName||"sans-serif",il=((H=P.systemFontInfo)===null||H===void 0?void 0:H.css)||`"${K}", ${P.fallbackName}`;let ml="normal";P.black?ml="900":P.bold&&(ml="bold");const Gl=P.italic?"italic":"normal";let ul=F;F<16?ul=16:F>100&&(ul=100),this.current.fontSizeScale=F/ul,this.ctx.font=`${Gl} ${ml} ${ul}px ${il}`}setTextRenderingMode(E){this.current.textRenderingMode=E}setTextRise(E){this.current.textRise=E}moveText(E,F){this.current.x=this.current.lineX+=E,this.current.y=this.current.lineY+=F}setLeadingMoveText(E,F){this.setLeading(-F),this.moveText(E,F)}setTextMatrix(E,F,H,P,g,K){this.current.textMatrix=[E,F,H,P,g,K],this.current.textMatrixScale=Math.hypot(E,F),this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0}nextLine(){this.moveText(0,this.current.leading)}paintChar(E,F,H,P){const g=this.ctx,K=this.current,il=K.font,ml=K.textRenderingMode,Gl=K.fontSize/K.fontSizeScale,ul=ml&n.TextRenderingMode.FILL_STROKE_MASK,Nl=!!(ml&n.TextRenderingMode.ADD_TO_PATH_FLAG),yl=K.patternFill&&!il.missingFile;let Xl;(il.disableFontFace||Nl||yl)&&(Xl=il.getPathGenerator(this.commonObjs,E)),il.disableFontFace||yl?(g.save(),g.translate(F,H),g.beginPath(),Xl(g,Gl),P&&g.setTransform(...P),ul!==n.TextRenderingMode.FILL&&ul!==n.TextRenderingMode.FILL_STROKE||g.fill(),ul!==n.TextRenderingMode.STROKE&&ul!==n.TextRenderingMode.FILL_STROKE||g.stroke(),g.restore()):(ul!==n.TextRenderingMode.FILL&&ul!==n.TextRenderingMode.FILL_STROKE||g.fillText(E,F,H),ul!==n.TextRenderingMode.STROKE&&ul!==n.TextRenderingMode.FILL_STROKE||g.strokeText(E,F,H)),Nl&&(this.pendingTextPaths||(this.pendingTextPaths=[])).push({transform:(0,Y.getCurrentTransform)(g),x:F,y:H,fontSize:Gl,addToPath:Xl})}get isFontSubpixelAAEnabled(){const{context:E}=this.cachedCanvases.getCanvas("isFontSubpixelAAEnabled",10,10);E.scale(1.5,1),E.fillText("I",0,10);const F=E.getImageData(0,0,10,10).data;let H=!1;for(let P=3;P<F.length;P+=4)if(F[P]>0&&F[P]<255){H=!0;break}return(0,n.shadow)(this,"isFontSubpixelAAEnabled",H)}showText(E){const F=this.current,H=F.font;if(H.isType3Font)return this.showType3Text(E);const P=F.fontSize;if(P===0)return;const g=this.ctx,K=F.fontSizeScale,il=F.charSpacing,ml=F.wordSpacing,Gl=F.fontDirection,ul=F.textHScale*Gl,Nl=E.length,yl=H.vertical,Xl=yl?1:-1,Wl=H.defaultVMetrics,Dl=P*F.fontMatrix[0],Ul=F.textRenderingMode===n.TextRenderingMode.FILL&&!H.disableFontFace&&!F.patternFill;g.save(),g.transform(...F.textMatrix),g.translate(F.x,F.y+F.textRise),Gl>0?g.scale(ul,-1):g.scale(ul,1);let ll;if(F.patternFill){g.save();const dl=F.fillColor.getPattern(g,this,(0,Y.getCurrentTransformInverse)(g),I.PathType.FILL);ll=(0,Y.getCurrentTransform)(g),g.restore(),g.fillStyle=dl}let V=F.lineWidth;const O=F.textMatrixScale;if(O===0||V===0){const dl=F.textRenderingMode&n.TextRenderingMode.FILL_STROKE_MASK;dl!==n.TextRenderingMode.STROKE&&dl!==n.TextRenderingMode.FILL_STROKE||(V=this.getSinglePixelWidth())}else V/=O;if(K!==1&&(g.scale(K,K),V/=K),g.lineWidth=V,H.isInvalidPDFjsFont){const dl=[];let Ml=0;for(const Yl of E)dl.push(Yl.unicode),Ml+=Yl.width;g.fillText(dl.join(""),0,0),F.x+=Ml*Dl*ul,g.restore(),this.compose();return}let A,_=0;for(A=0;A<Nl;++A){const dl=E[A];if(typeof dl=="number"){_+=Xl*dl*P/1e3;continue}let Ml=!1;const Yl=(dl.isSpace?ml:0)+il,Vl=dl.fontChar,Ll=dl.accent;let ol,zl,Il,Sl=dl.width;if(yl){const Jl=dl.vmetric||Wl,Cl=-(dl.vmetric?Jl[1]:.5*Sl)*Dl,el=Jl[2]*Dl;Sl=Jl?-Jl[0]:Sl,ol=Cl/K,zl=(_+el)/K}else ol=_/K,zl=0;if(H.remeasure&&Sl>0){const Jl=1e3*g.measureText(Vl).width/P*K;if(Sl<Jl&&this.isFontSubpixelAAEnabled){const Cl=Sl/Jl;Ml=!0,g.save(),g.scale(Cl,1),ol/=Cl}else Sl!==Jl&&(ol+=(Sl-Jl)/2e3*P/K)}if(this.contentVisible&&(dl.isInFont||H.missingFile)){if(Ul&&!Ll)g.fillText(Vl,ol,zl);else if(this.paintChar(Vl,ol,zl,ll),Ll){const Jl=ol+P*Ll.offset.x/K,Cl=zl-P*Ll.offset.y/K;this.paintChar(Ll.fontChar,Jl,Cl,ll)}}Il=yl?Sl*Dl-Yl*Gl:Sl*Dl+Yl*Gl,_+=Il,Ml&&g.restore()}yl?F.y-=_:F.x+=_*ul,g.restore(),this.compose()}showType3Text(E){const F=this.ctx,H=this.current,P=H.font,g=H.fontSize,K=H.fontDirection,il=P.vertical?1:-1,ml=H.charSpacing,Gl=H.wordSpacing,ul=H.textHScale*K,Nl=H.fontMatrix||n.FONT_IDENTITY_MATRIX,yl=E.length;let Xl,Wl,Dl,Ul;if(H.textRenderingMode!==n.TextRenderingMode.INVISIBLE&&g!==0){for(this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null,F.save(),F.transform(...H.textMatrix),F.translate(H.x,H.y),F.scale(ul,K),Xl=0;Xl<yl;++Xl){if(Wl=E[Xl],typeof Wl=="number"){Ul=il*Wl*g/1e3,this.ctx.translate(Ul,0),H.x+=Ul*ul;continue}const ll=(Wl.isSpace?Gl:0)+ml,V=P.charProcOperatorList[Wl.operatorListId];if(!V){(0,n.warn)(`Type3 character "${Wl.operatorListId}" is not available.`);continue}this.contentVisible&&(this.processingType3=Wl,this.save(),F.scale(g,g),F.transform(...Nl),this.executeOperatorList(V),this.restore()),Dl=n.Util.applyTransform([Wl.width,0],Nl)[0]*g+ll,F.translate(Dl,0),H.x+=Dl*ul}F.restore(),this.processingType3=null}}setCharWidth(E,F){}setCharWidthAndBounds(E,F,H,P,g,K){this.ctx.rect(H,P,g-H,K-P),this.ctx.clip(),this.endPath()}getColorN_Pattern(E){let F;if(E[0]==="TilingPattern"){const H=E[1],P=this.baseTransform||(0,Y.getCurrentTransform)(this.ctx),g={createCanvasGraphics:K=>new nl(K,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:this.optionalContentConfig,markedContentStack:this.markedContentStack})};F=new I.TilingPattern(E,H,this.ctx,g,P)}else F=this._getPattern(E[1],E[2]);return F}setStrokeColorN(){this.current.strokeColor=this.getColorN_Pattern(arguments)}setFillColorN(){this.current.fillColor=this.getColorN_Pattern(arguments),this.current.patternFill=!0}setStrokeRGBColor(E,F,H){const P=n.Util.makeHexColor(E,F,H);this.ctx.strokeStyle=P,this.current.strokeColor=P}setFillRGBColor(E,F,H){const P=n.Util.makeHexColor(E,F,H);this.ctx.fillStyle=P,this.current.fillColor=P,this.current.patternFill=!1}_getPattern(E){let F,H=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;return this.cachedPatterns.has(E)?F=this.cachedPatterns.get(E):(F=(0,I.getShadingPattern)(this.getObject(E)),this.cachedPatterns.set(E,F)),H&&(F.matrix=H),F}shadingFill(E){if(!this.contentVisible)return;const F=this.ctx;this.save();const H=this._getPattern(E);F.fillStyle=H.getPattern(F,this,(0,Y.getCurrentTransformInverse)(F),I.PathType.SHADING);const P=(0,Y.getCurrentTransformInverse)(F);if(P){const g=F.canvas,K=g.width,il=g.height,ml=n.Util.applyTransform([0,0],P),Gl=n.Util.applyTransform([0,il],P),ul=n.Util.applyTransform([K,0],P),Nl=n.Util.applyTransform([K,il],P),yl=Math.min(ml[0],Gl[0],ul[0],Nl[0]),Xl=Math.min(ml[1],Gl[1],ul[1],Nl[1]),Wl=Math.max(ml[0],Gl[0],ul[0],Nl[0]),Dl=Math.max(ml[1],Gl[1],ul[1],Nl[1]);this.ctx.fillRect(yl,Xl,Wl-yl,Dl-Xl)}else this.ctx.fillRect(-1e10,-1e10,2e10,2e10);this.compose(this.current.getClippedPathBoundingBox()),this.restore()}beginInlineImage(){(0,n.unreachable)("Should not call beginInlineImage")}beginImageData(){(0,n.unreachable)("Should not call beginImageData")}paintFormXObjectBegin(E,F){if(this.contentVisible&&(this.save(),this.baseTransformStack.push(this.baseTransform),Array.isArray(E)&&E.length===6&&this.transform(...E),this.baseTransform=(0,Y.getCurrentTransform)(this.ctx),F)){const H=F[2]-F[0],P=F[3]-F[1];this.ctx.rect(F[0],F[1],H,P),this.current.updateRectMinMax((0,Y.getCurrentTransform)(this.ctx),F),this.clip(),this.endPath()}}paintFormXObjectEnd(){this.contentVisible&&(this.restore(),this.baseTransform=this.baseTransformStack.pop())}beginGroup(E){if(!this.contentVisible)return;this.save(),this.inSMaskMode&&(this.endSMaskMode(),this.current.activeSMask=null);const F=this.ctx;E.isolated||(0,n.info)("TODO: Support non-isolated groups."),E.knockout&&(0,n.warn)("Knockout groups not supported.");const H=(0,Y.getCurrentTransform)(F);if(E.matrix&&F.transform(...E.matrix),!E.bbox)throw new Error("Bounding box is required.");let P=n.Util.getAxialAlignedBoundingBox(E.bbox,(0,Y.getCurrentTransform)(F));const g=[0,0,F.canvas.width,F.canvas.height];P=n.Util.intersect(P,g)||[0,0,0,0];const K=Math.floor(P[0]),il=Math.floor(P[1]);let ml=Math.max(Math.ceil(P[2])-K,1),Gl=Math.max(Math.ceil(P[3])-il,1),ul=1,Nl=1;ml>C&&(ul=ml/C,ml=C),Gl>C&&(Nl=Gl/C,Gl=C),this.current.startNewPathAndClipBox([0,0,ml,Gl]);let yl="groupAt"+this.groupLevel;E.smask&&(yl+="_smask_"+this.smaskCounter++%2);const Xl=this.cachedCanvases.getCanvas(yl,ml,Gl),Wl=Xl.context;Wl.scale(1/ul,1/Nl),Wl.translate(-K,-il),Wl.transform(...H),E.smask?this.smaskStack.push({canvas:Xl.canvas,context:Wl,offsetX:K,offsetY:il,scaleX:ul,scaleY:Nl,subtype:E.smask.subtype,backdrop:E.smask.backdrop,transferMap:E.smask.transferMap||null,startTransformInverse:null}):(F.setTransform(1,0,0,1,0,0),F.translate(K,il),F.scale(ul,Nl),F.save()),D(F,Wl),this.ctx=Wl,this.setGState([["BM","source-over"],["ca",1],["CA",1]]),this.groupStack.push(F),this.groupLevel++}endGroup(E){if(!this.contentVisible)return;this.groupLevel--;const F=this.ctx,H=this.groupStack.pop();if(this.ctx=H,this.ctx.imageSmoothingEnabled=!1,E.smask)this.tempSMask=this.smaskStack.pop(),this.restore();else{this.ctx.restore();const P=(0,Y.getCurrentTransform)(this.ctx);this.restore(),this.ctx.save(),this.ctx.setTransform(...P);const g=n.Util.getAxialAlignedBoundingBox([0,0,F.canvas.width,F.canvas.height],P);this.ctx.drawImage(F.canvas,0,0),this.ctx.restore(),this.compose(g)}}beginAnnotation(E,F,H,P,g){if(bl(this,h,u).call(this),r(this.ctx),this.ctx.save(),this.save(),this.baseTransform&&this.ctx.setTransform(...this.baseTransform),Array.isArray(F)&&F.length===4){const K=F[2]-F[0],il=F[3]-F[1];if(g&&this.annotationCanvasMap){(H=H.slice())[4]-=F[0],H[5]-=F[1],(F=F.slice())[0]=F[1]=0,F[2]=K,F[3]=il;const[ml,Gl]=n.Util.singularValueDecompose2dScale((0,Y.getCurrentTransform)(this.ctx)),{viewportScale:ul}=this,Nl=Math.ceil(K*this.outputScaleX*ul),yl=Math.ceil(il*this.outputScaleY*ul);this.annotationCanvas=this.canvasFactory.create(Nl,yl);const{canvas:Xl,context:Wl}=this.annotationCanvas;this.annotationCanvasMap.set(E,Xl),this.annotationCanvas.savedCtx=this.ctx,this.ctx=Wl,this.ctx.save(),this.ctx.setTransform(ml,0,0,-Gl,0,il*Gl),r(this.ctx)}else r(this.ctx),this.ctx.rect(F[0],F[1],K,il),this.ctx.clip(),this.endPath()}this.current=new $(this.ctx.canvas.width,this.ctx.canvas.height),this.transform(...H),this.transform(...P)}endAnnotation(){this.annotationCanvas&&(this.ctx.restore(),bl(this,M,e).call(this),this.ctx=this.annotationCanvas.savedCtx,delete this.annotationCanvas.savedCtx,delete this.annotationCanvas)}paintImageMaskXObject(E){if(!this.contentVisible)return;const F=E.count;(E=this.getObject(E.data,E)).count=F;const H=this.ctx,P=this.processingType3;if(P&&(P.compiled===void 0&&(P.compiled=function(il){const{width:ml,height:Gl}=il;if(ml>1e3||Gl>1e3)return null;const ul=new Uint8Array([0,2,4,0,1,0,5,4,8,10,0,8,0,2,1,0]),Nl=ml+1;let yl,Xl,Wl,Dl=new Uint8Array(Nl*(Gl+1));const Ul=ml+7&-8;let ll=new Uint8Array(Ul*Gl),V=0;for(const dl of il.data){let Ml=128;for(;Ml>0;)ll[V++]=dl&Ml?0:255,Ml>>=1}let O=0;for(V=0,ll[V]!==0&&(Dl[0]=1,++O),Xl=1;Xl<ml;Xl++)ll[V]!==ll[V+1]&&(Dl[Xl]=ll[V]?2:1,++O),V++;for(ll[V]!==0&&(Dl[Xl]=2,++O),yl=1;yl<Gl;yl++){V=yl*Ul,Wl=yl*Nl,ll[V-Ul]!==ll[V]&&(Dl[Wl]=ll[V]?1:8,++O);let dl=(ll[V]?4:0)+(ll[V-Ul]?8:0);for(Xl=1;Xl<ml;Xl++)dl=(dl>>2)+(ll[V+1]?4:0)+(ll[V-Ul+1]?8:0),ul[dl]&&(Dl[Wl+Xl]=ul[dl],++O),V++;if(ll[V-Ul]!==ll[V]&&(Dl[Wl+Xl]=ll[V]?2:4,++O),O>1e3)return null}for(V=Ul*(Gl-1),Wl=yl*Nl,ll[V]!==0&&(Dl[Wl]=8,++O),Xl=1;Xl<ml;Xl++)ll[V]!==ll[V+1]&&(Dl[Wl+Xl]=ll[V]?4:8,++O),V++;if(ll[V]!==0&&(Dl[Wl+Xl]=4,++O),O>1e3)return null;const A=new Int32Array([0,Nl,-1,0,-Nl,0,0,0,1]),_=new Path2D;for(yl=0;O&&yl<=Gl;yl++){let dl=yl*Nl;const Ml=dl+ml;for(;dl<Ml&&!Dl[dl];)dl++;if(dl===Ml)continue;_.moveTo(dl%Nl,yl);const Yl=dl;let Vl=Dl[dl];do{const Ll=A[Vl];do dl+=Ll;while(!Dl[dl]);const ol=Dl[dl];ol!==5&&ol!==10?(Vl=ol,Dl[dl]=0):(Vl=ol&51*Vl>>4,Dl[dl]&=Vl>>2|Vl<<2),_.lineTo(dl%Nl,dl/Nl|0),Dl[dl]||--O}while(Yl!==dl);--yl}return ll=null,Dl=null,function(dl){dl.save(),dl.scale(1/ml,-1/Gl),dl.translate(0,-Gl),dl.fill(_),dl.beginPath(),dl.restore()}}(E)),P.compiled)){P.compiled(H);return}const g=this._createMaskCanvas(E),K=g.canvas;H.save(),H.setTransform(1,0,0,1,0,0),H.drawImage(K,g.offsetX,g.offsetY),H.restore(),this.compose()}paintImageMaskXObjectRepeat(E,F){let H=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,P=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,g=arguments.length>4?arguments[4]:void 0,K=arguments.length>5?arguments[5]:void 0;if(!this.contentVisible)return;E=this.getObject(E.data,E);const il=this.ctx;il.save();const ml=(0,Y.getCurrentTransform)(il);il.transform(F,H,P,g,0,0);const Gl=this._createMaskCanvas(E);il.setTransform(1,0,0,1,Gl.offsetX-ml[4],Gl.offsetY-ml[5]);for(let ul=0,Nl=K.length;ul<Nl;ul+=2){const yl=n.Util.transform(ml,[F,H,P,g,K[ul],K[ul+1]]),[Xl,Wl]=n.Util.applyTransform([0,0],yl);il.drawImage(Gl.canvas,Xl,Wl)}il.restore(),this.compose()}paintImageMaskXObjectGroup(E){if(!this.contentVisible)return;const F=this.ctx,H=this.current.fillColor,P=this.current.patternFill;for(const g of E){const{data:K,width:il,height:ml,transform:Gl}=g,ul=this.cachedCanvases.getCanvas("maskCanvas",il,ml),Nl=ul.context;Nl.save(),x(Nl,this.getObject(K,g)),Nl.globalCompositeOperation="source-in",Nl.fillStyle=P?H.getPattern(Nl,this,(0,Y.getCurrentTransformInverse)(F),I.PathType.FILL):H,Nl.fillRect(0,0,il,ml),Nl.restore(),F.save(),F.transform(...Gl),F.scale(1,-1),Q(F,ul.canvas,0,0,il,ml,0,-1,1,1),F.restore()}this.compose()}paintImageXObject(E){if(!this.contentVisible)return;const F=this.getObject(E);F?this.paintInlineImageXObject(F):(0,n.warn)("Dependent image isn't ready yet")}paintImageXObjectRepeat(E,F,H,P){if(!this.contentVisible)return;const g=this.getObject(E);if(!g){(0,n.warn)("Dependent image isn't ready yet");return}const K=g.width,il=g.height,ml=[];for(let Gl=0,ul=P.length;Gl<ul;Gl+=2)ml.push({transform:[F,0,0,H,P[Gl],P[Gl+1]],x:0,y:0,w:K,h:il});this.paintInlineImageXObjectGroup(g,ml)}applyTransferMapsToCanvas(E){return this.current.transferMaps!=="none"&&(E.filter=this.current.transferMaps,E.drawImage(E.canvas,0,0),E.filter="none"),E.canvas}applyTransferMapsToBitmap(E){if(this.current.transferMaps==="none")return E.bitmap;const{bitmap:F,width:H,height:P}=E,g=this.cachedCanvases.getCanvas("inlineImage",H,P),K=g.context;return K.filter=this.current.transferMaps,K.drawImage(F,0,0),K.filter="none",g.canvas}paintInlineImageXObject(E){if(!this.contentVisible)return;const F=E.width,H=E.height,P=this.ctx;this.save(),o.isNodeJS||(P.filter="none"),P.scale(1/F,-1/H);let g;if(E.bitmap)g=this.applyTransferMapsToBitmap(E);else if(typeof HTMLElement=="function"&&E instanceof HTMLElement||!E.data)g=E;else{const il=this.cachedCanvases.getCanvas("inlineImage",F,H).context;q(il,E),g=this.applyTransferMapsToCanvas(il)}const K=this._scaleImage(g,(0,Y.getCurrentTransformInverse)(P));P.imageSmoothingEnabled=tl((0,Y.getCurrentTransform)(P),E.interpolate),Q(P,K.img,0,0,K.paintWidth,K.paintHeight,0,-H,F,H),this.compose(),this.restore()}paintInlineImageXObjectGroup(E,F){if(!this.contentVisible)return;const H=this.ctx;let P;if(E.bitmap)P=E.bitmap;else{const g=E.width,K=E.height,il=this.cachedCanvases.getCanvas("inlineImage",g,K).context;q(il,E),P=this.applyTransferMapsToCanvas(il)}for(const g of F)H.save(),H.transform(...g.transform),H.scale(1,-1),Q(H,P,g.x,g.y,g.w,g.h,0,-1,1,1),H.restore();this.compose()}paintSolidColorImageMask(){this.contentVisible&&(this.ctx.fillRect(0,0,1,1),this.compose())}markPoint(E){}markPointProps(E,F){}beginMarkedContent(E){this.markedContentStack.push({visible:!0})}beginMarkedContentProps(E,F){E==="OC"?this.markedContentStack.push({visible:this.optionalContentConfig.isVisible(F)}):this.markedContentStack.push({visible:!0}),this.contentVisible=this.isContentVisible()}endMarkedContent(){this.markedContentStack.pop(),this.contentVisible=this.isContentVisible()}beginCompat(){}endCompat(){}consumePath(E){const F=this.current.isEmptyClip();this.pendingClip&&this.current.updateClipFromPath(),this.pendingClip||this.compose(E);const H=this.ctx;this.pendingClip&&(F||(this.pendingClip===Tl?H.clip("evenodd"):H.clip()),this.pendingClip=null),this.current.startNewPathAndClipBox(this.current.clipBox),H.beginPath()}getSinglePixelWidth(){if(!this._cachedGetSinglePixelWidth){const E=(0,Y.getCurrentTransform)(this.ctx);if(E[1]===0&&E[2]===0)this._cachedGetSinglePixelWidth=1/Math.min(Math.abs(E[0]),Math.abs(E[3]));else{const F=Math.abs(E[0]*E[3]-E[2]*E[1]),H=Math.hypot(E[0],E[2]),P=Math.hypot(E[1],E[3]);this._cachedGetSinglePixelWidth=Math.max(H,P)/F}}return this._cachedGetSinglePixelWidth}getScaleForStroking(){if(this._cachedScaleForStroking[0]===-1){const{lineWidth:E}=this.current,{a:F,b:H,c:P,d:g}=this.ctx.getTransform();let K,il;if(H===0&&P===0){const ml=Math.abs(F),Gl=Math.abs(g);if(ml===Gl)if(E===0)K=il=1/ml;else{const ul=ml*E;K=il=ul<1?1/ul:1}else if(E===0)K=1/ml,il=1/Gl;else{const ul=ml*E,Nl=Gl*E;K=ul<1?1/ul:1,il=Nl<1?1/Nl:1}}else{const ml=Math.abs(F*g-H*P),Gl=Math.hypot(F,H),ul=Math.hypot(P,g);if(E===0)K=ul/ml,il=Gl/ml;else{const Nl=E*ml;K=ul>Nl?ul/Nl:1,il=Gl>Nl?Gl/Nl:1}}this._cachedScaleForStroking[0]=K,this._cachedScaleForStroking[1]=il}return this._cachedScaleForStroking}rescaleAndStroke(E){const{ctx:F}=this,{lineWidth:H}=this.current,[P,g]=this.getScaleForStroking();if(F.lineWidth=H||1,P===1&&g===1){F.stroke();return}const K=F.getLineDash();if(E&&F.save(),F.scale(P,g),K.length>0){const il=Math.max(P,g);F.setLineDash(K.map(ml=>ml/il)),F.lineDashOffset/=il}F.stroke(),E&&F.restore()}isContentVisible(){for(let E=this.markedContentStack.length-1;E>=0;E--)if(!this.markedContentStack[E].visible)return!1;return!0}};let Rl=nl;h=new WeakSet,u=function(){for(;this.stateStack.length||this.inSMaskMode;)this.restore();this.ctx.restore(),this.transparentCanvas&&(this.ctx=this.compositeCtx,this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.drawImage(this.transparentCanvas,0,0),this.ctx.restore(),this.transparentCanvas=null)},M=new WeakSet,e=function(){if(this.pageColors){const E=this.filterFactory.addHCMFilter(this.pageColors.foreground,this.pageColors.background);if(E!=="none"){const F=this.ctx.filter;this.ctx.filter=E,this.ctx.drawImage(this.ctx.canvas,0,0),this.ctx.filter=F}}},d.CanvasGraphics=Rl;for(const E in n.OPS)Rl.prototype[E]!==void 0&&(Rl.prototype[n.OPS[E]]=Rl.prototype[E])},(c,d,m)=>{Object.defineProperty(d,"__esModule",{value:!0}),d.TilingPattern=d.PathType=void 0,d.getShadingPattern=function(q){switch(q[0]){case"RadialAxial":return new Y(q);case"Mesh":return new o(q);case"Dummy":return new C}throw new Error(`Unknown IR type: ${q[0]}`)};var h=m(1),u=m(142);const M={FILL:"Fill",STROKE:"Stroke",SHADING:"Shading"};d.PathType=M;function e(q,x){if(!x)return;const D=x[2]-x[0],r=x[3]-x[1],w=new Path2D;w.rect(x[0],x[1],D,r),q.clip(w)}class n{constructor(){this.constructor===n&&(0,h.unreachable)("Cannot initialize BaseShadingPattern.")}getPattern(){(0,h.unreachable)("Abstract method `getPattern` called.")}}class Y extends n{constructor(x){super(),this._type=x[1],this._bbox=x[2],this._colorStops=x[3],this._p0=x[4],this._p1=x[5],this._r0=x[6],this._r1=x[7],this.matrix=null}_createGradient(x){let D;this._type==="axial"?D=x.createLinearGradient(this._p0[0],this._p0[1],this._p1[0],this._p1[1]):this._type==="radial"&&(D=x.createRadialGradient(this._p0[0],this._p0[1],this._r0,this._p1[0],this._p1[1],this._r1));for(const r of this._colorStops)D.addColorStop(r[0],r[1]);return D}getPattern(x,D,r,w){let j;if(w===M.STROKE||w===M.FILL){const f=D.current.getClippedPathBoundingBox(w,(0,u.getCurrentTransform)(x))||[0,0,0,0],sl=Math.ceil(f[2]-f[0])||1,tl=Math.ceil(f[3]-f[1])||1,B=D.cachedCanvases.getCanvas("pattern",sl,tl,!0),cl=B.context;cl.clearRect(0,0,cl.canvas.width,cl.canvas.height),cl.beginPath(),cl.rect(0,0,cl.canvas.width,cl.canvas.height),cl.translate(-f[0],-f[1]),r=h.Util.transform(r,[1,0,0,1,f[0],f[1]]),cl.transform(...D.baseTransform),this.matrix&&cl.transform(...this.matrix),e(cl,this._bbox),cl.fillStyle=this._createGradient(cl),cl.fill(),j=x.createPattern(B.canvas,"no-repeat");const al=new DOMMatrix(r);j.setTransform(al)}else e(x,this._bbox),j=this._createGradient(x);return j}}function I(q,x,D,r,w,j,f,sl){const tl=x.coords,B=x.colors,cl=q.data,al=4*q.width;let Tl;tl[D+1]>tl[r+1]&&(Tl=D,D=r,r=Tl,Tl=j,j=f,f=Tl),tl[r+1]>tl[w+1]&&(Tl=r,r=w,w=Tl,Tl=f,f=sl,sl=Tl),tl[D+1]>tl[r+1]&&(Tl=D,D=r,r=Tl,Tl=j,j=f,f=Tl);const nl=(tl[D]+x.offsetX)*x.scaleX,Rl=(tl[D+1]+x.offsetY)*x.scaleY,E=(tl[r]+x.offsetX)*x.scaleX,F=(tl[r+1]+x.offsetY)*x.scaleY,H=(tl[w]+x.offsetX)*x.scaleX,P=(tl[w+1]+x.offsetY)*x.scaleY;if(Rl>=P)return;const g=B[j],K=B[j+1],il=B[j+2],ml=B[f],Gl=B[f+1],ul=B[f+2],Nl=B[sl],yl=B[sl+1],Xl=B[sl+2],Wl=Math.round(Rl),Dl=Math.round(P);let Ul,ll,V,O,A,_,dl,Ml;for(let Yl=Wl;Yl<=Dl;Yl++){if(Yl<F){let Il;Il=Yl<Rl?0:(Rl-Yl)/(Rl-F),Ul=nl-(nl-E)*Il,ll=g-(g-ml)*Il,V=K-(K-Gl)*Il,O=il-(il-ul)*Il}else{let Il;Il=Yl>P?1:F===P?0:(F-Yl)/(F-P),Ul=E-(E-H)*Il,ll=ml-(ml-Nl)*Il,V=Gl-(Gl-yl)*Il,O=ul-(ul-Xl)*Il}let Vl;Vl=Yl<Rl?0:Yl>P?1:(Rl-Yl)/(Rl-P),A=nl-(nl-H)*Vl,_=g-(g-Nl)*Vl,dl=K-(K-yl)*Vl,Ml=il-(il-Xl)*Vl;const Ll=Math.round(Math.min(Ul,A)),ol=Math.round(Math.max(Ul,A));let zl=al*Yl+4*Ll;for(let Il=Ll;Il<=ol;Il++)Vl=(Ul-Il)/(Ul-A),Vl<0?Vl=0:Vl>1&&(Vl=1),cl[zl++]=ll-(ll-_)*Vl|0,cl[zl++]=V-(V-dl)*Vl|0,cl[zl++]=O-(O-Ml)*Vl|0,cl[zl++]=255}}function T(q,x,D){const r=x.coords,w=x.colors;let j,f;switch(x.type){case"lattice":const sl=x.verticesPerRow,tl=Math.floor(r.length/sl)-1,B=sl-1;for(j=0;j<tl;j++){let cl=j*sl;for(let al=0;al<B;al++,cl++)I(q,D,r[cl],r[cl+1],r[cl+sl],w[cl],w[cl+1],w[cl+sl]),I(q,D,r[cl+sl+1],r[cl+1],r[cl+sl],w[cl+sl+1],w[cl+1],w[cl+sl])}break;case"triangles":for(j=0,f=r.length;j<f;j+=3)I(q,D,r[j],r[j+1],r[j+2],w[j],w[j+1],w[j+2]);break;default:throw new Error("illegal figure")}}class o extends n{constructor(x){super(),this._coords=x[2],this._colors=x[3],this._figures=x[4],this._bounds=x[5],this._bbox=x[7],this._background=x[8],this.matrix=null}_createMeshCanvas(x,D,r){const w=Math.floor(this._bounds[0]),j=Math.floor(this._bounds[1]),f=Math.ceil(this._bounds[2])-w,sl=Math.ceil(this._bounds[3])-j,tl=Math.min(Math.ceil(Math.abs(f*x[0]*1.1)),3e3),B=Math.min(Math.ceil(Math.abs(sl*x[1]*1.1)),3e3),cl=f/tl,al=sl/B,Tl={coords:this._coords,colors:this._colors,offsetX:-w,offsetY:-j,scaleX:1/cl,scaleY:1/al},nl=tl+4,Rl=B+4,E=r.getCanvas("mesh",nl,Rl,!1),F=E.context,H=F.createImageData(tl,B);if(D){const P=H.data;for(let g=0,K=P.length;g<K;g+=4)P[g]=D[0],P[g+1]=D[1],P[g+2]=D[2],P[g+3]=255}for(const P of this._figures)T(H,P,Tl);return F.putImageData(H,2,2),{canvas:E.canvas,offsetX:w-2*cl,offsetY:j-2*al,scaleX:cl,scaleY:al}}getPattern(x,D,r,w){e(x,this._bbox);let j;if(w===M.SHADING)j=h.Util.singularValueDecompose2dScale((0,u.getCurrentTransform)(x));else if(j=h.Util.singularValueDecompose2dScale(D.baseTransform),this.matrix){const sl=h.Util.singularValueDecompose2dScale(this.matrix);j=[j[0]*sl[0],j[1]*sl[1]]}const f=this._createMeshCanvas(j,w===M.SHADING?null:this._background,D.cachedCanvases);return w!==M.SHADING&&(x.setTransform(...D.baseTransform),this.matrix&&x.transform(...this.matrix)),x.translate(f.offsetX,f.offsetY),x.scale(f.scaleX,f.scaleY),x.createPattern(f.canvas,"no-repeat")}}class C extends n{getPattern(){return"hotpink"}}const J=1,v=2,Q=class{constructor(q,x,D,r,w){this.operatorList=q[2],this.matrix=q[3]||[1,0,0,1,0,0],this.bbox=q[4],this.xstep=q[5],this.ystep=q[6],this.paintType=q[7],this.tilingType=q[8],this.color=x,this.ctx=D,this.canvasGraphicsFactory=r,this.baseTransform=w}createPatternCanvas(q){const x=this.operatorList,D=this.bbox,r=this.xstep,w=this.ystep,j=this.paintType,f=this.tilingType,sl=this.color,tl=this.canvasGraphicsFactory;(0,h.info)("TilingType: "+f);const B=D[0],cl=D[1],al=D[2],Tl=D[3],nl=h.Util.singularValueDecompose2dScale(this.matrix),Rl=h.Util.singularValueDecompose2dScale(this.baseTransform),E=[nl[0]*Rl[0],nl[1]*Rl[1]],F=this.getSizeAndScale(r,this.ctx.canvas.width,E[0]),H=this.getSizeAndScale(w,this.ctx.canvas.height,E[1]),P=q.cachedCanvases.getCanvas("pattern",F.size,H.size,!0),g=P.context,K=tl.createCanvasGraphics(g);K.groupLevel=q.groupLevel,this.setFillAndStrokeStyleToContext(K,j,sl);let il=B,ml=cl,Gl=al,ul=Tl;return B<0&&(il=0,Gl+=Math.abs(B)),cl<0&&(ml=0,ul+=Math.abs(cl)),g.translate(-F.scale*il,-H.scale*ml),K.transform(F.scale,0,0,H.scale,0,0),g.save(),this.clipBbox(K,il,ml,Gl,ul),K.baseTransform=(0,u.getCurrentTransform)(K.ctx),K.executeOperatorList(x),K.endDrawing(),{canvas:P.canvas,scaleX:F.scale,scaleY:H.scale,offsetX:il,offsetY:ml}}getSizeAndScale(q,x,D){q=Math.abs(q);const r=Math.max(Q.MAX_PATTERN_SIZE,x);let w=Math.ceil(q*D);return w>=r?w=r:D=w/q,{scale:D,size:w}}clipBbox(q,x,D,r,w){const j=r-x,f=w-D;q.ctx.rect(x,D,j,f),q.current.updateRectMinMax((0,u.getCurrentTransform)(q.ctx),[x,D,r,w]),q.clip(),q.endPath()}setFillAndStrokeStyleToContext(q,x,D){const r=q.ctx,w=q.current;switch(x){case J:const j=this.ctx;r.fillStyle=j.fillStyle,r.strokeStyle=j.strokeStyle,w.fillColor=j.fillStyle,w.strokeColor=j.strokeStyle;break;case v:const f=h.Util.makeHexColor(D[0],D[1],D[2]);r.fillStyle=f,r.strokeStyle=f,w.fillColor=f,w.strokeColor=f;break;default:throw new h.FormatError(`Unsupported paint type: ${x}`)}}getPattern(q,x,D,r){let w=D;r!==M.SHADING&&(w=h.Util.transform(w,x.baseTransform),this.matrix&&(w=h.Util.transform(w,this.matrix)));const j=this.createPatternCanvas(x);let f=new DOMMatrix(w);f=f.translate(j.offsetX,j.offsetY),f=f.scale(1/j.scaleX,1/j.scaleY);const sl=q.createPattern(j.canvas,"repeat");return sl.setTransform(f),sl}};let $=Q;kl($,"MAX_PATTERN_SIZE",3e3),d.TilingPattern=$},(c,d,m)=>{Object.defineProperty(d,"__esModule",{value:!0}),d.convertBlackAndWhiteToRGBA=u,d.convertToRGBA=function(M){switch(M.kind){case h.ImageKind.GRAYSCALE_1BPP:return u(M);case h.ImageKind.RGB_24BPP:return function(e){let{src:n,srcPos:Y=0,dest:I,destPos:T=0,width:o,height:C}=e,J=0;const v=n.length>>2,Q=new Uint32Array(n.buffer,Y,v);if(h.FeatureTest.isLittleEndian){for(;J<v-2;J+=3,T+=4){const $=Q[J],q=Q[J+1],x=Q[J+2];I[T]=4278190080|$,I[T+1]=$>>>24|q<<8|4278190080,I[T+2]=q>>>16|x<<16|4278190080,I[T+3]=x>>>8|4278190080}for(let $=4*J,q=n.length;$<q;$+=3)I[T++]=n[$]|n[$+1]<<8|n[$+2]<<16|4278190080}else{for(;J<v-2;J+=3,T+=4){const $=Q[J],q=Q[J+1],x=Q[J+2];I[T]=255|$,I[T+1]=$<<24|q>>>8|255,I[T+2]=q<<16|x>>>16|255,I[T+3]=x<<8|255}for(let $=4*J,q=n.length;$<q;$+=3)I[T++]=n[$]<<24|n[$+1]<<16|n[$+2]<<8|255}return{srcPos:Y,destPos:T}}(M)}return null},d.grayToRGBA=function(M,e){if(h.FeatureTest.isLittleEndian)for(let n=0,Y=M.length;n<Y;n++)e[n]=65793*M[n]|4278190080;else for(let n=0,Y=M.length;n<Y;n++)e[n]=16843008*M[n]|255};var h=m(1);function u(M){let{src:e,srcPos:n=0,dest:Y,width:I,height:T,nonBlackColor:o=4294967295,inverseDecode:C=!1}=M;const J=h.FeatureTest.isLittleEndian?4278190080:255,[v,Q]=C?[o,J]:[J,o],$=I>>3,q=7&I,x=e.length;Y=new Uint32Array(Y.buffer);let D=0;for(let r=0;r<T;r++){for(const j=n+$;n<j;n++){const f=n<x?e[n]:255;Y[D++]=128&f?Q:v,Y[D++]=64&f?Q:v,Y[D++]=32&f?Q:v,Y[D++]=16&f?Q:v,Y[D++]=8&f?Q:v,Y[D++]=4&f?Q:v,Y[D++]=2&f?Q:v,Y[D++]=1&f?Q:v}if(q===0)continue;const w=n<x?e[n++]:255;for(let j=0;j<q;j++)Y[D++]=w&1<<7-j?Q:v}return{srcPos:n,destPos:D}}},(c,d)=>{Object.defineProperty(d,"__esModule",{value:!0}),d.GlobalWorkerOptions=void 0;const m=Object.create(null);d.GlobalWorkerOptions=m,m.workerPort=null,m.workerSrc=""},(c,d,m)=>{var h,u,M,e,n,Y,I;Object.defineProperty(d,"__esModule",{value:!0}),d.MessageHandler=void 0;var T=m(1);const o=1,C=2,J=1,v=2,Q=3,$=4,q=5,x=6,D=7,r=8;function w(j){switch(j instanceof Error||typeof j=="object"&&j!==null||(0,T.unreachable)('wrapReason: Expected "reason" to be a (possibly cloned) Error.'),j.name){case"AbortException":return new T.AbortException(j.message);case"MissingPDFException":return new T.MissingPDFException(j.message);case"PasswordException":return new T.PasswordException(j.message,j.code);case"UnexpectedResponseException":return new T.UnexpectedResponseException(j.message,j.status);case"UnknownErrorException":return new T.UnknownErrorException(j.message,j.details);default:return new T.UnknownErrorException(j.message,j.toString())}}d.MessageHandler=(I=class{constructor(j,f,sl){Zl(this,h),Zl(this,M),Zl(this,n),this.sourceName=j,this.targetName=f,this.comObj=sl,this.callbackId=1,this.streamId=1,this.streamSinks=Object.create(null),this.streamControllers=Object.create(null),this.callbackCapabilities=Object.create(null),this.actionHandler=Object.create(null),this._onComObjOnMessage=tl=>{const B=tl.data;if(B.targetName!==this.sourceName)return;if(B.stream){bl(this,M,e).call(this,B);return}if(B.callback){const al=B.callbackId,Tl=this.callbackCapabilities[al];if(!Tl)throw new Error(`Cannot resolve callback ${al}`);if(delete this.callbackCapabilities[al],B.callback===o)Tl.resolve(B.data);else{if(B.callback!==C)throw new Error("Unexpected callback case");Tl.reject(w(B.reason))}return}const cl=this.actionHandler[B.action];if(!cl)throw new Error(`Unknown action from worker: ${B.action}`);if(B.callbackId){const al=this.sourceName,Tl=B.sourceName;new Promise(function(nl){nl(cl(B.data))}).then(function(nl){sl.postMessage({sourceName:al,targetName:Tl,callback:o,callbackId:B.callbackId,data:nl})},function(nl){sl.postMessage({sourceName:al,targetName:Tl,callback:C,callbackId:B.callbackId,reason:w(nl)})})}else B.streamId?bl(this,h,u).call(this,B):cl(B.data)},sl.addEventListener("message",this._onComObjOnMessage)}on(j,f){const sl=this.actionHandler;if(sl[j])throw new Error(`There is already an actionName called "${j}"`);sl[j]=f}send(j,f,sl){this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:j,data:f},sl)}sendWithPromise(j,f,sl){const tl=this.callbackId++,B=new T.PromiseCapability;this.callbackCapabilities[tl]=B;try{this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:j,callbackId:tl,data:f},sl)}catch(cl){B.reject(cl)}return B.promise}sendWithStream(j,f,sl,tl){const B=this.streamId++,cl=this.sourceName,al=this.targetName,Tl=this.comObj;return new ReadableStream({start:nl=>{const Rl=new T.PromiseCapability;return this.streamControllers[B]={controller:nl,startCall:Rl,pullCall:null,cancelCall:null,isClosed:!1},Tl.postMessage({sourceName:cl,targetName:al,action:j,streamId:B,data:f,desiredSize:nl.desiredSize},tl),Rl.promise},pull:nl=>{const Rl=new T.PromiseCapability;return this.streamControllers[B].pullCall=Rl,Tl.postMessage({sourceName:cl,targetName:al,stream:x,streamId:B,desiredSize:nl.desiredSize}),Rl.promise},cancel:nl=>{(0,T.assert)(nl instanceof Error,"cancel must have a valid reason");const Rl=new T.PromiseCapability;return this.streamControllers[B].cancelCall=Rl,this.streamControllers[B].isClosed=!0,Tl.postMessage({sourceName:cl,targetName:al,stream:J,streamId:B,reason:w(nl)}),Rl.promise}},sl)}destroy(){this.comObj.removeEventListener("message",this._onComObjOnMessage)}},h=new WeakSet,u=function(j){const f=j.streamId,sl=this.sourceName,tl=j.sourceName,B=this.comObj,cl=this,al=this.actionHandler[j.action],Tl={enqueue(nl){let Rl=arguments.length>1&&arguments[1]!==void 0?arguments[1]:1,E=arguments.length>2?arguments[2]:void 0;if(this.isCancelled)return;const F=this.desiredSize;this.desiredSize-=Rl,F>0&&this.desiredSize<=0&&(this.sinkCapability=new T.PromiseCapability,this.ready=this.sinkCapability.promise),B.postMessage({sourceName:sl,targetName:tl,stream:$,streamId:f,chunk:nl},E)},close(){this.isCancelled||(this.isCancelled=!0,B.postMessage({sourceName:sl,targetName:tl,stream:Q,streamId:f}),delete cl.streamSinks[f])},error(nl){(0,T.assert)(nl instanceof Error,"error must have a valid reason"),this.isCancelled||(this.isCancelled=!0,B.postMessage({sourceName:sl,targetName:tl,stream:q,streamId:f,reason:w(nl)}))},sinkCapability:new T.PromiseCapability,onPull:null,onCancel:null,isCancelled:!1,desiredSize:j.desiredSize,ready:null};Tl.sinkCapability.resolve(),Tl.ready=Tl.sinkCapability.promise,this.streamSinks[f]=Tl,new Promise(function(nl){nl(al(j.data,Tl))}).then(function(){B.postMessage({sourceName:sl,targetName:tl,stream:r,streamId:f,success:!0})},function(nl){B.postMessage({sourceName:sl,targetName:tl,stream:r,streamId:f,reason:w(nl)})})},M=new WeakSet,e=function(j){const f=j.streamId,sl=this.sourceName,tl=j.sourceName,B=this.comObj,cl=this.streamControllers[f],al=this.streamSinks[f];switch(j.stream){case r:j.success?cl.startCall.resolve():cl.startCall.reject(w(j.reason));break;case D:j.success?cl.pullCall.resolve():cl.pullCall.reject(w(j.reason));break;case x:if(!al){B.postMessage({sourceName:sl,targetName:tl,stream:D,streamId:f,success:!0});break}al.desiredSize<=0&&j.desiredSize>0&&al.sinkCapability.resolve(),al.desiredSize=j.desiredSize,new Promise(function(Tl){var nl;Tl((nl=al.onPull)===null||nl===void 0?void 0:nl.call(al))}).then(function(){B.postMessage({sourceName:sl,targetName:tl,stream:D,streamId:f,success:!0})},function(Tl){B.postMessage({sourceName:sl,targetName:tl,stream:D,streamId:f,reason:w(Tl)})});break;case $:if((0,T.assert)(cl,"enqueue should have stream controller"),cl.isClosed)break;cl.controller.enqueue(j.chunk);break;case Q:if((0,T.assert)(cl,"close should have stream controller"),cl.isClosed)break;cl.isClosed=!0,cl.controller.close(),bl(this,n,Y).call(this,cl,f);break;case q:(0,T.assert)(cl,"error should have stream controller"),cl.controller.error(w(j.reason)),bl(this,n,Y).call(this,cl,f);break;case v:j.success?cl.cancelCall.resolve():cl.cancelCall.reject(w(j.reason)),bl(this,n,Y).call(this,cl,f);break;case J:if(!al)break;new Promise(function(Tl){var nl;Tl((nl=al.onCancel)===null||nl===void 0?void 0:nl.call(al,w(j.reason)))}).then(function(){B.postMessage({sourceName:sl,targetName:tl,stream:v,streamId:f,success:!0})},function(Tl){B.postMessage({sourceName:sl,targetName:tl,stream:v,streamId:f,reason:w(Tl)})}),al.sinkCapability.reject(w(j.reason)),al.isCancelled=!0,delete this.streamSinks[f];break;default:throw new Error("Unexpected stream case")}},n=new WeakSet,Y=async function(j,f){var sl,tl,B;await Promise.allSettled([(sl=j.startCall)===null||sl===void 0?void 0:sl.promise,(tl=j.pullCall)===null||tl===void 0?void 0:tl.promise,(B=j.cancelCall)===null||B===void 0?void 0:B.promise]),delete this.streamControllers[f]},I)},(c,d,m)=>{var h,u,M;Object.defineProperty(d,"__esModule",{value:!0}),d.Metadata=void 0;var e=m(1);d.Metadata=(M=class{constructor(n){Zl(this,h,void 0),Zl(this,u,void 0);let{parsedData:Y,rawData:I}=n;hl(this,h,Y),hl(this,u,I)}getRaw(){return R(this,u)}get(n){return R(this,h).get(n)??null}getAll(){return(0,e.objectFromMap)(R(this,h))}has(n){return R(this,h).has(n)}},h=new WeakMap,u=new WeakMap,M)},(c,d,m)=>{var h,u,M,e,n,Y,I,T;Object.defineProperty(d,"__esModule",{value:!0}),d.OptionalContentConfig=void 0;var o=m(1),C=m(144);const J=Symbol("INTERNAL");class v{constructor($,q){Zl(this,h,!0),this.name=$,this.intent=q}get visible(){return R(this,h)}_setVisible($,q){$!==J&&(0,o.unreachable)("Internal method `_setVisible` called."),hl(this,h,q)}}h=new WeakMap,d.OptionalContentConfig=(T=class{constructor(Q){if(Zl(this,Y),Zl(this,u,null),Zl(this,M,new Map),Zl(this,e,null),Zl(this,n,null),this.name=null,this.creator=null,Q!==null){this.name=Q.name,this.creator=Q.creator,hl(this,n,Q.order);for(const $ of Q.groups)R(this,M).set($.id,new v($.name,$.intent));if(Q.baseState==="OFF")for(const $ of R(this,M).values())$._setVisible(J,!1);for(const $ of Q.on)R(this,M).get($)._setVisible(J,!0);for(const $ of Q.off)R(this,M).get($)._setVisible(J,!1);hl(this,e,this.getHash())}}isVisible(Q){if(R(this,M).size===0)return!0;if(!Q)return(0,o.warn)("Optional content group not defined."),!0;if(Q.type==="OCG")return R(this,M).has(Q.id)?R(this,M).get(Q.id).visible:((0,o.warn)(`Optional content group not found: ${Q.id}`),!0);if(Q.type==="OCMD"){if(Q.expression)return bl(this,Y,I).call(this,Q.expression);if(!Q.policy||Q.policy==="AnyOn"){for(const $ of Q.ids){if(!R(this,M).has($))return(0,o.warn)(`Optional content group not found: ${$}`),!0;if(R(this,M).get($).visible)return!0}return!1}if(Q.policy==="AllOn"){for(const $ of Q.ids){if(!R(this,M).has($))return(0,o.warn)(`Optional content group not found: ${$}`),!0;if(!R(this,M).get($).visible)return!1}return!0}if(Q.policy==="AnyOff"){for(const $ of Q.ids){if(!R(this,M).has($))return(0,o.warn)(`Optional content group not found: ${$}`),!0;if(!R(this,M).get($).visible)return!0}return!1}if(Q.policy==="AllOff"){for(const $ of Q.ids){if(!R(this,M).has($))return(0,o.warn)(`Optional content group not found: ${$}`),!0;if(R(this,M).get($).visible)return!1}return!0}return(0,o.warn)(`Unknown optional content policy ${Q.policy}.`),!0}return(0,o.warn)(`Unknown group type ${Q.type}.`),!0}setVisibility(Q){let $=!(arguments.length>1&&arguments[1]!==void 0)||arguments[1];R(this,M).has(Q)?(R(this,M).get(Q)._setVisible(J,!!$),hl(this,u,null)):(0,o.warn)(`Optional content group not found: ${Q}`)}get hasInitialVisibility(){return this.getHash()===R(this,e)}getOrder(){return R(this,M).size?R(this,n)?R(this,n).slice():[...R(this,M).keys()]:null}getGroups(){return R(this,M).size>0?(0,o.objectFromMap)(R(this,M)):null}getGroup(Q){return R(this,M).get(Q)||null}getHash(){if(R(this,u)!==null)return R(this,u);const Q=new C.MurmurHash3_64;for(const[$,q]of R(this,M))Q.update(`${$}:${q.visible}`);return hl(this,u,Q.hexdigest())}},u=new WeakMap,M=new WeakMap,e=new WeakMap,n=new WeakMap,Y=new WeakSet,I=function(Q){const $=Q.length;if($<2)return!0;const q=Q[0];for(let x=1;x<$;x++){const D=Q[x];let r;if(Array.isArray(D))r=bl(this,Y,I).call(this,D);else{if(!R(this,M).has(D))return(0,o.warn)(`Optional content group not found: ${D}`),!0;r=R(this,M).get(D).visible}switch(q){case"And":if(!r)return!1;break;case"Or":if(r)return!0;break;case"Not":return!r;default:return!0}}return q==="And"},T)},(c,d,m)=>{Object.defineProperty(d,"__esModule",{value:!0}),d.PDFDataTransportStream=void 0;var h=m(1),u=m(142);d.PDFDataTransportStream=class{constructor(n,Y){let{length:I,initialData:T,progressiveDone:o=!1,contentDispositionFilename:C=null,disableRange:J=!1,disableStream:v=!1}=n;if((0,h.assert)(Y,'PDFDataTransportStream - missing required "pdfDataRangeTransport" argument.'),this._queuedChunks=[],this._progressiveDone=o,this._contentDispositionFilename=C,(T==null?void 0:T.length)>0){const Q=T instanceof Uint8Array&&T.byteLength===T.buffer.byteLength?T.buffer:new Uint8Array(T).buffer;this._queuedChunks.push(Q)}this._pdfDataRangeTransport=Y,this._isStreamingSupported=!v,this._isRangeSupported=!J,this._contentLength=I,this._fullRequestReader=null,this._rangeReaders=[],this._pdfDataRangeTransport.addRangeListener((Q,$)=>{this._onReceiveData({begin:Q,chunk:$})}),this._pdfDataRangeTransport.addProgressListener((Q,$)=>{this._onProgress({loaded:Q,total:$})}),this._pdfDataRangeTransport.addProgressiveReadListener(Q=>{this._onReceiveData({chunk:Q})}),this._pdfDataRangeTransport.addProgressiveDoneListener(()=>{this._onProgressiveDone()}),this._pdfDataRangeTransport.transportReady()}_onReceiveData(n){let{begin:Y,chunk:I}=n;const T=I instanceof Uint8Array&&I.byteLength===I.buffer.byteLength?I.buffer:new Uint8Array(I).buffer;if(Y===void 0)this._fullRequestReader?this._fullRequestReader._enqueue(T):this._queuedChunks.push(T);else{const o=this._rangeReaders.some(function(C){return C._begin!==Y?!1:(C._enqueue(T),!0)});(0,h.assert)(o,"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.")}}get _progressiveDataLength(){var n;return((n=this._fullRequestReader)===null||n===void 0?void 0:n._loaded)??0}_onProgress(n){if(n.total===void 0){var Y,I;(Y=this._rangeReaders[0])===null||Y===void 0||(I=Y.onProgress)===null||I===void 0||I.call(Y,{loaded:n.loaded})}else{var T,o;(T=this._fullRequestReader)===null||T===void 0||(o=T.onProgress)===null||o===void 0||o.call(T,{loaded:n.loaded,total:n.total})}}_onProgressiveDone(){var n;(n=this._fullRequestReader)===null||n===void 0||n.progressiveDone(),this._progressiveDone=!0}_removeRangeReader(n){const Y=this._rangeReaders.indexOf(n);Y>=0&&this._rangeReaders.splice(Y,1)}getFullReader(){(0,h.assert)(!this._fullRequestReader,"PDFDataTransportStream.getFullReader can only be called once.");const n=this._queuedChunks;return this._queuedChunks=null,new M(this,n,this._progressiveDone,this._contentDispositionFilename)}getRangeReader(n,Y){if(Y<=this._progressiveDataLength)return null;const I=new e(this,n,Y);return this._pdfDataRangeTransport.requestDataRange(n,Y),this._rangeReaders.push(I),I}cancelAllRequests(n){var Y;(Y=this._fullRequestReader)===null||Y===void 0||Y.cancel(n);for(const I of this._rangeReaders.slice(0))I.cancel(n);this._pdfDataRangeTransport.abort()}};class M{constructor(Y,I){let T=arguments.length>2&&arguments[2]!==void 0&&arguments[2],o=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;this._stream=Y,this._done=T||!1,this._filename=(0,u.isPdfFile)(o)?o:null,this._queuedChunks=I||[],this._loaded=0;for(const C of this._queuedChunks)this._loaded+=C.byteLength;this._requests=[],this._headersReady=Promise.resolve(),Y._fullRequestReader=this,this.onProgress=null}_enqueue(Y){this._done||(this._requests.length>0?this._requests.shift().resolve({value:Y,done:!1}):this._queuedChunks.push(Y),this._loaded+=Y.byteLength)}get headersReady(){return this._headersReady}get filename(){return this._filename}get isRangeSupported(){return this._stream._isRangeSupported}get isStreamingSupported(){return this._stream._isStreamingSupported}get contentLength(){return this._stream._contentLength}async read(){if(this._queuedChunks.length>0)return{value:this._queuedChunks.shift(),done:!1};if(this._done)return{value:void 0,done:!0};const Y=new h.PromiseCapability;return this._requests.push(Y),Y.promise}cancel(Y){this._done=!0;for(const I of this._requests)I.resolve({value:void 0,done:!0});this._requests.length=0}progressiveDone(){this._done||(this._done=!0)}}class e{constructor(Y,I,T){this._stream=Y,this._begin=I,this._end=T,this._queuedChunk=null,this._requests=[],this._done=!1,this.onProgress=null}_enqueue(Y){if(!this._done){if(this._requests.length===0)this._queuedChunk=Y;else{this._requests.shift().resolve({value:Y,done:!1});for(const I of this._requests)I.resolve({value:void 0,done:!0});this._requests.length=0}this._done=!0,this._stream._removeRangeReader(this)}}get isStreamingSupported(){return!1}async read(){if(this._queuedChunk){const I=this._queuedChunk;return this._queuedChunk=null,{value:I,done:!1}}if(this._done)return{value:void 0,done:!0};const Y=new h.PromiseCapability;return this._requests.push(Y),Y.promise}cancel(Y){this._done=!0;for(const I of this._requests)I.resolve({value:void 0,done:!0});this._requests.length=0,this._stream._removeRangeReader(this)}}},(c,d)=>{Object.defineProperty(d,"__esModule",{value:!0}),d.XfaText=void 0;class m{static textContent(u){const M=[],e={items:M,styles:Object.create(null)};return function n(Y){var I;if(!Y)return;let T=null;const o=Y.name;if(o==="#text")T=Y.value;else{if(!m.shouldBuildText(o))return;Y!=null&&(I=Y.attributes)!==null&&I!==void 0&&I.textContent?T=Y.attributes.textContent:Y.value&&(T=Y.value)}if(T!==null&&M.push({str:T}),Y.children)for(const C of Y.children)n(C)}(u),e}static shouldBuildText(u){return!(u==="textarea"||u==="input"||u==="option"||u==="select")}}d.XfaText=m},(c,d,m)=>{Object.defineProperty(d,"__esModule",{value:!0}),d.NodeStandardFontDataFactory=d.NodeFilterFactory=d.NodeCanvasFactory=d.NodeCMapReaderFactory=void 0;var h=m(143);const u=function(I){return new Promise((T,o)=>{require$$6.readFile(I,(C,J)=>{!C&&J?T(new Uint8Array(J)):o(new Error(C))})})};class M extends h.BaseFilterFactory{}d.NodeFilterFactory=M;class e extends h.BaseCanvasFactory{_createCanvas(T,o){return require$$6.createCanvas(T,o)}}d.NodeCanvasFactory=e;class n extends h.BaseCMapReaderFactory{_fetchData(T,o){return u(T).then(C=>({cMapData:C,compressionType:o}))}}d.NodeCMapReaderFactory=n;class Y extends h.BaseStandardFontDataFactory{_fetchData(T){return u(T)}}d.NodeStandardFontDataFactory=Y},(c,d,m)=>{Object.defineProperty(d,"__esModule",{value:!0}),d.PDFNodeStream=void 0;var h=m(1),u=m(157);const M=require$$6,e=require$$6,n=require$$6,Y=require$$6,I=/^file:\/\/\/[a-zA-Z]:\//;d.PDFNodeStream=class{constructor(q){this.source=q,this.url=function(x){const D=Y.parse(x);return D.protocol==="file:"||D.host?D:/^[a-z]:[/\\]/i.test(x)?Y.parse(`file:///${x}`):(D.host||(D.protocol="file:"),D)}(q.url),this.isHttp=this.url.protocol==="http:"||this.url.protocol==="https:",this.isFsUrl=this.url.protocol==="file:",this.httpHeaders=this.isHttp&&q.httpHeaders||{},this._fullRequestReader=null,this._rangeRequestReaders=[]}get _progressiveDataLength(){var q;return((q=this._fullRequestReader)===null||q===void 0?void 0:q._loaded)??0}getFullReader(){return(0,h.assert)(!this._fullRequestReader,"PDFNodeStream.getFullReader can only be called once."),this._fullRequestReader=this.isFsUrl?new Q(this):new J(this),this._fullRequestReader}getRangeReader(q,x){if(x<=this._progressiveDataLength)return null;const D=this.isFsUrl?new $(this,q,x):new v(this,q,x);return this._rangeRequestReaders.push(D),D}cancelAllRequests(q){var x;(x=this._fullRequestReader)===null||x===void 0||x.cancel(q);for(const D of this._rangeRequestReaders.slice(0))D.cancel(q)}};class T{constructor(x){this._url=x.url,this._done=!1,this._storedError=null,this.onProgress=null;const D=x.source;this._contentLength=D.length,this._loaded=0,this._filename=null,this._disableRange=D.disableRange||!1,this._rangeChunkSize=D.rangeChunkSize,this._rangeChunkSize||this._disableRange||(this._disableRange=!0),this._isStreamingSupported=!D.disableStream,this._isRangeSupported=!D.disableRange,this._readableStream=null,this._readCapability=new h.PromiseCapability,this._headersCapability=new h.PromiseCapability}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){var x;if(await this._readCapability.promise,this._done)return{value:void 0,done:!0};if(this._storedError)throw this._storedError;const D=this._readableStream.read();return D===null?(this._readCapability=new h.PromiseCapability,this.read()):(this._loaded+=D.length,(x=this.onProgress)===null||x===void 0||x.call(this,{loaded:this._loaded,total:this._contentLength}),{value:new Uint8Array(D).buffer,done:!1})}cancel(x){this._readableStream?this._readableStream.destroy(x):this._error(x)}_error(x){this._storedError=x,this._readCapability.resolve()}_setReadableStream(x){this._readableStream=x,x.on("readable",()=>{this._readCapability.resolve()}),x.on("end",()=>{x.destroy(),this._done=!0,this._readCapability.resolve()}),x.on("error",D=>{this._error(D)}),!this._isStreamingSupported&&this._isRangeSupported&&this._error(new h.AbortException("streaming is disabled")),this._storedError&&this._readableStream.destroy(this._storedError)}}class o{constructor(x){this._url=x.url,this._done=!1,this._storedError=null,this.onProgress=null,this._loaded=0,this._readableStream=null,this._readCapability=new h.PromiseCapability;const D=x.source;this._isStreamingSupported=!D.disableStream}get isStreamingSupported(){return this._isStreamingSupported}async read(){var x;if(await this._readCapability.promise,this._done)return{value:void 0,done:!0};if(this._storedError)throw this._storedError;const D=this._readableStream.read();return D===null?(this._readCapability=new h.PromiseCapability,this.read()):(this._loaded+=D.length,(x=this.onProgress)===null||x===void 0||x.call(this,{loaded:this._loaded}),{value:new Uint8Array(D).buffer,done:!1})}cancel(x){this._readableStream?this._readableStream.destroy(x):this._error(x)}_error(x){this._storedError=x,this._readCapability.resolve()}_setReadableStream(x){this._readableStream=x,x.on("readable",()=>{this._readCapability.resolve()}),x.on("end",()=>{x.destroy(),this._done=!0,this._readCapability.resolve()}),x.on("error",D=>{this._error(D)}),this._storedError&&this._readableStream.destroy(this._storedError)}}function C(q,x){return{protocol:q.protocol,auth:q.auth,host:q.hostname,port:q.port,path:q.path,method:"GET",headers:x}}class J extends T{constructor(x){super(x);const D=r=>{if(r.statusCode===404){const sl=new h.MissingPDFException(`Missing PDF "${this._url}".`);this._storedError=sl,this._headersCapability.reject(sl);return}this._headersCapability.resolve(),this._setReadableStream(r);const w=sl=>this._readableStream.headers[sl.toLowerCase()],{allowRangeRequests:j,suggestedLength:f}=(0,u.validateRangeRequestCapabilities)({getResponseHeader:w,isHttp:x.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});this._isRangeSupported=j,this._contentLength=f||this._contentLength,this._filename=(0,u.extractFilenameFromHeader)(w)};this._request=null,this._url.protocol==="http:"?this._request=e.request(C(this._url,x.httpHeaders),D):this._request=n.request(C(this._url,x.httpHeaders),D),this._request.on("error",r=>{this._storedError=r,this._headersCapability.reject(r)}),this._request.end()}}class v extends o{constructor(x,D,r){super(x),this._httpHeaders={};for(const j in x.httpHeaders){const f=x.httpHeaders[j];f!==void 0&&(this._httpHeaders[j]=f)}this._httpHeaders.Range=`bytes=${D}-${r-1}`;const w=j=>{if(j.statusCode!==404)this._setReadableStream(j);else{const f=new h.MissingPDFException(`Missing PDF "${this._url}".`);this._storedError=f}};this._request=null,this._url.protocol==="http:"?this._request=e.request(C(this._url,this._httpHeaders),w):this._request=n.request(C(this._url,this._httpHeaders),w),this._request.on("error",j=>{this._storedError=j}),this._request.end()}}class Q extends T{constructor(x){super(x);let D=decodeURIComponent(this._url.path);I.test(this._url.href)&&(D=D.replace(/^\//,"")),M.lstat(D,(r,w)=>{r?(r.code==="ENOENT"&&(r=new h.MissingPDFException(`Missing PDF "${D}".`)),this._storedError=r,this._headersCapability.reject(r)):(this._contentLength=w.size,this._setReadableStream(M.createReadStream(D)),this._headersCapability.resolve())})}}class $ extends o{constructor(x,D,r){super(x);let w=decodeURIComponent(this._url.path);I.test(this._url.href)&&(w=w.replace(/^\//,"")),this._setReadableStream(M.createReadStream(w,{start:D,end:r-1}))}}},(c,d,m)=>{Object.defineProperty(d,"__esModule",{value:!0}),d.createResponseStatusError=function(e,n){return e===404||e===0&&n.startsWith("file:")?new h.MissingPDFException('Missing PDF "'+n+'".'):new h.UnexpectedResponseException(`Unexpected server response (${e}) while retrieving PDF "${n}".`,e)},d.extractFilenameFromHeader=function(e){const n=e("Content-Disposition");if(n){let Y=(0,u.getFilenameFromContentDispositionHeader)(n);if(Y.includes("%"))try{Y=decodeURIComponent(Y)}catch{}if((0,M.isPdfFile)(Y))return Y}return null},d.validateRangeRequestCapabilities=function(e){let{getResponseHeader:n,isHttp:Y,rangeChunkSize:I,disableRange:T}=e;const o={allowRangeRequests:!1,suggestedLength:void 0},C=parseInt(n("Content-Length"),10);return!Number.isInteger(C)||(o.suggestedLength=C,C<=2*I)||T||!Y||n("Accept-Ranges")!=="bytes"||(n("Content-Encoding")||"identity")!=="identity"||(o.allowRangeRequests=!0),o},d.validateResponseStatus=function(e){return e===200||e===206};var h=m(1),u=m(158),M=m(142)},(c,d,m)=>{Object.defineProperty(d,"__esModule",{value:!0}),d.getFilenameFromContentDispositionHeader=function(u){let M=!0,e=n("filename\\*","i").exec(u);if(e){e=e[1];let J=T(e);return J=unescape(J),J=o(J),J=C(J),I(J)}if(e=function(J){const v=[];let Q;const $=n("filename\\*((?!0\\d)\\d+)(\\*?)","ig");for(;(Q=$.exec(J))!==null;){let[,x,D,r]=Q;if(x=parseInt(x,10),x in v){if(x===0)break}else v[x]=[D,r]}const q=[];for(let x=0;x<v.length&&x in v;++x){let[D,r]=v[x];r=T(r),D&&(r=unescape(r),x===0&&(r=o(r))),q.push(r)}return q.join("")}(u),e)return I(C(e));if(e=n("filename","i").exec(u),e){e=e[1];let J=T(e);return J=C(J),I(J)}function n(J,v){return new RegExp("(?:^|;)\\s*"+J+'\\s*=\\s*([^";\\s][^;\\s]*|"(?:[^"\\\\]|\\\\"?)+"?)',v)}function Y(J,v){if(J){if(!/^[\x00-\xFF]+$/.test(v))return v;try{const Q=new TextDecoder(J,{fatal:!0}),$=(0,h.stringToBytes)(v);v=Q.decode($),M=!1}catch{}}return v}function I(J){return M&&/[\x80-\xff]/.test(J)&&(J=Y("utf-8",J),M&&(J=Y("iso-8859-1",J))),J}function T(J){if(J.startsWith('"')){const v=J.slice(1).split('\\"');for(let Q=0;Q<v.length;++Q){const $=v[Q].indexOf('"');$!==-1&&(v[Q]=v[Q].slice(0,$),v.length=Q+1),v[Q]=v[Q].replaceAll(/\\(.)/g,"$1")}J=v.join('"')}return J}function o(J){const v=J.indexOf("'");return v===-1?J:Y(J.slice(0,v),J.slice(v+1).replace(/^[^']*'/,""))}function C(J){return!J.startsWith("=?")||/[\x00-\x19\x80-\xff]/.test(J)?J:J.replaceAll(/=\?([\w-]*)\?([QqBb])\?((?:[^?]|\?(?!=))*)\?=/g,function(v,Q,$,q){if($==="q"||$==="Q")return Y(Q,q=(q=q.replaceAll("_"," ")).replaceAll(/=([0-9a-fA-F]{2})/g,function(x,D){return String.fromCharCode(parseInt(D,16))}));try{q=atob(q)}catch{}return Y(Q,q)})}return""};var h=m(1)},(c,d,m)=>{Object.defineProperty(d,"__esModule",{value:!0}),d.PDFNetworkStream=void 0;var h=m(1),u=m(157);class M{constructor(I){let T=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};this.url=I,this.isHttp=/^https?:/i.test(I),this.httpHeaders=this.isHttp&&T.httpHeaders||Object.create(null),this.withCredentials=T.withCredentials||!1,this.currXhrId=0,this.pendingRequests=Object.create(null)}requestRange(I,T,o){const C={begin:I,end:T};for(const J in o)C[J]=o[J];return this.request(C)}requestFull(I){return this.request(I)}request(I){const T=new XMLHttpRequest,o=this.currXhrId++,C=this.pendingRequests[o]={xhr:T};T.open("GET",this.url),T.withCredentials=this.withCredentials;for(const J in this.httpHeaders){const v=this.httpHeaders[J];v!==void 0&&T.setRequestHeader(J,v)}return this.isHttp&&"begin"in I&&"end"in I?(T.setRequestHeader("Range",`bytes=${I.begin}-${I.end-1}`),C.expectedStatus=206):C.expectedStatus=200,T.responseType="arraybuffer",I.onError&&(T.onerror=function(J){I.onError(T.status)}),T.onreadystatechange=this.onStateChange.bind(this,o),T.onprogress=this.onProgress.bind(this,o),C.onHeadersReceived=I.onHeadersReceived,C.onDone=I.onDone,C.onError=I.onError,C.onProgress=I.onProgress,T.send(null),o}onProgress(I,T){var o;const C=this.pendingRequests[I];C&&((o=C.onProgress)===null||o===void 0||o.call(C,T))}onStateChange(I,T){const o=this.pendingRequests[I];if(!o)return;const C=o.xhr;if(C.readyState>=2&&o.onHeadersReceived&&(o.onHeadersReceived(),delete o.onHeadersReceived),C.readyState!==4||!(I in this.pendingRequests))return;if(delete this.pendingRequests[I],C.status===0&&this.isHttp){var J;(J=o.onError)===null||J===void 0||J.call(o,C.status);return}const v=C.status||200;if(!(v===200&&o.expectedStatus===206)&&v!==o.expectedStatus){var Q;(Q=o.onError)===null||Q===void 0||Q.call(o,C.status);return}const $=function(x){const D=x.response;return typeof D!="string"?D:(0,h.stringToBytes)(D).buffer}(C);if(v===206){const x=C.getResponseHeader("Content-Range"),D=/bytes (\d+)-(\d+)\/(\d+)/.exec(x);o.onDone({begin:parseInt(D[1],10),chunk:$})}else if($)o.onDone({begin:0,chunk:$});else{var q;(q=o.onError)===null||q===void 0||q.call(o,C.status)}}getRequestXhr(I){return this.pendingRequests[I].xhr}isPendingRequest(I){return I in this.pendingRequests}abortRequest(I){const T=this.pendingRequests[I].xhr;delete this.pendingRequests[I],T.abort()}}d.PDFNetworkStream=class{constructor(Y){this._source=Y,this._manager=new M(Y.url,{httpHeaders:Y.httpHeaders,withCredentials:Y.withCredentials}),this._rangeChunkSize=Y.rangeChunkSize,this._fullRequestReader=null,this._rangeRequestReaders=[]}_onRangeRequestReaderClosed(Y){const I=this._rangeRequestReaders.indexOf(Y);I>=0&&this._rangeRequestReaders.splice(I,1)}getFullReader(){return(0,h.assert)(!this._fullRequestReader,"PDFNetworkStream.getFullReader can only be called once."),this._fullRequestReader=new e(this._manager,this._source),this._fullRequestReader}getRangeReader(Y,I){const T=new n(this._manager,Y,I);return T.onClosed=this._onRangeRequestReaderClosed.bind(this),this._rangeRequestReaders.push(T),T}cancelAllRequests(Y){var I;(I=this._fullRequestReader)===null||I===void 0||I.cancel(Y);for(const T of this._rangeRequestReaders.slice(0))T.cancel(Y)}};class e{constructor(I,T){this._manager=I;const o={onHeadersReceived:this._onHeadersReceived.bind(this),onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)};this._url=T.url,this._fullRequestId=I.requestFull(o),this._headersReceivedCapability=new h.PromiseCapability,this._disableRange=T.disableRange||!1,this._contentLength=T.length,this._rangeChunkSize=T.rangeChunkSize,this._rangeChunkSize||this._disableRange||(this._disableRange=!0),this._isStreamingSupported=!1,this._isRangeSupported=!1,this._cachedChunks=[],this._requests=[],this._done=!1,this._storedError=void 0,this._filename=null,this.onProgress=null}_onHeadersReceived(){const I=this._fullRequestId,T=this._manager.getRequestXhr(I),o=v=>T.getResponseHeader(v),{allowRangeRequests:C,suggestedLength:J}=(0,u.validateRangeRequestCapabilities)({getResponseHeader:o,isHttp:this._manager.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});C&&(this._isRangeSupported=!0),this._contentLength=J||this._contentLength,this._filename=(0,u.extractFilenameFromHeader)(o),this._isRangeSupported&&this._manager.abortRequest(I),this._headersReceivedCapability.resolve()}_onDone(I){if(I&&(this._requests.length>0?this._requests.shift().resolve({value:I.chunk,done:!1}):this._cachedChunks.push(I.chunk)),this._done=!0,!(this._cachedChunks.length>0)){for(const T of this._requests)T.resolve({value:void 0,done:!0});this._requests.length=0}}_onError(I){this._storedError=(0,u.createResponseStatusError)(I,this._url),this._headersReceivedCapability.reject(this._storedError);for(const T of this._requests)T.reject(this._storedError);this._requests.length=0,this._cachedChunks.length=0}_onProgress(I){var T;(T=this.onProgress)===null||T===void 0||T.call(this,{loaded:I.loaded,total:I.lengthComputable?I.total:this._contentLength})}get filename(){return this._filename}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}get contentLength(){return this._contentLength}get headersReady(){return this._headersReceivedCapability.promise}async read(){if(this._storedError)throw this._storedError;if(this._cachedChunks.length>0)return{value:this._cachedChunks.shift(),done:!1};if(this._done)return{value:void 0,done:!0};const I=new h.PromiseCapability;return this._requests.push(I),I.promise}cancel(I){this._done=!0,this._headersReceivedCapability.reject(I);for(const T of this._requests)T.resolve({value:void 0,done:!0});this._requests.length=0,this._manager.isPendingRequest(this._fullRequestId)&&this._manager.abortRequest(this._fullRequestId),this._fullRequestReader=null}}class n{constructor(I,T,o){this._manager=I;const C={onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)};this._url=I.url,this._requestId=I.requestRange(T,o,C),this._requests=[],this._queuedChunk=null,this._done=!1,this._storedError=void 0,this.onProgress=null,this.onClosed=null}_close(){var I;(I=this.onClosed)===null||I===void 0||I.call(this,this)}_onDone(I){const T=I.chunk;this._requests.length>0?this._requests.shift().resolve({value:T,done:!1}):this._queuedChunk=T,this._done=!0;for(const o of this._requests)o.resolve({value:void 0,done:!0});this._requests.length=0,this._close()}_onError(I){this._storedError=(0,u.createResponseStatusError)(I,this._url);for(const T of this._requests)T.reject(this._storedError);this._requests.length=0,this._queuedChunk=null}_onProgress(I){if(!this.isStreamingSupported){var T;(T=this.onProgress)===null||T===void 0||T.call(this,{loaded:I.loaded})}}get isStreamingSupported(){return!1}async read(){if(this._storedError)throw this._storedError;if(this._queuedChunk!==null){const T=this._queuedChunk;return this._queuedChunk=null,{value:T,done:!1}}if(this._done)return{value:void 0,done:!0};const I=new h.PromiseCapability;return this._requests.push(I),I.promise}cancel(I){this._done=!0;for(const T of this._requests)T.resolve({value:void 0,done:!0});this._requests.length=0,this._manager.isPendingRequest(this._requestId)&&this._manager.abortRequest(this._requestId),this._close()}}},(c,d,m)=>{Object.defineProperty(d,"__esModule",{value:!0}),d.PDFFetchStream=void 0;var h=m(1),u=m(157);function M(T,o,C){return{method:"GET",headers:T,signal:C.signal,mode:"cors",credentials:o?"include":"same-origin",redirect:"follow"}}function e(T){const o=new Headers;for(const C in T){const J=T[C];J!==void 0&&o.append(C,J)}return o}function n(T){return T instanceof Uint8Array?T.buffer:T instanceof ArrayBuffer?T:((0,h.warn)(`getArrayBuffer - unexpected data format: ${T}`),new Uint8Array(T).buffer)}d.PDFFetchStream=class{constructor(T){this.source=T,this.isHttp=/^https?:/i.test(T.url),this.httpHeaders=this.isHttp&&T.httpHeaders||{},this._fullRequestReader=null,this._rangeRequestReaders=[]}get _progressiveDataLength(){var T;return((T=this._fullRequestReader)===null||T===void 0?void 0:T._loaded)??0}getFullReader(){return(0,h.assert)(!this._fullRequestReader,"PDFFetchStream.getFullReader can only be called once."),this._fullRequestReader=new Y(this),this._fullRequestReader}getRangeReader(T,o){if(o<=this._progressiveDataLength)return null;const C=new I(this,T,o);return this._rangeRequestReaders.push(C),C}cancelAllRequests(T){var o;(o=this._fullRequestReader)===null||o===void 0||o.cancel(T);for(const C of this._rangeRequestReaders.slice(0))C.cancel(T)}};class Y{constructor(o){this._stream=o,this._reader=null,this._loaded=0,this._filename=null;const C=o.source;this._withCredentials=C.withCredentials||!1,this._contentLength=C.length,this._headersCapability=new h.PromiseCapability,this._disableRange=C.disableRange||!1,this._rangeChunkSize=C.rangeChunkSize,this._rangeChunkSize||this._disableRange||(this._disableRange=!0),this._abortController=new AbortController,this._isStreamingSupported=!C.disableStream,this._isRangeSupported=!C.disableRange,this._headers=e(this._stream.httpHeaders);const J=C.url;fetch(J,M(this._headers,this._withCredentials,this._abortController)).then(v=>{if(!(0,u.validateResponseStatus)(v.status))throw(0,u.createResponseStatusError)(v.status,J);this._reader=v.body.getReader(),this._headersCapability.resolve();const Q=x=>v.headers.get(x),{allowRangeRequests:$,suggestedLength:q}=(0,u.validateRangeRequestCapabilities)({getResponseHeader:Q,isHttp:this._stream.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});this._isRangeSupported=$,this._contentLength=q||this._contentLength,this._filename=(0,u.extractFilenameFromHeader)(Q),!this._isStreamingSupported&&this._isRangeSupported&&this.cancel(new h.AbortException("Streaming is disabled."))}).catch(this._headersCapability.reject),this.onProgress=null}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){var o;await this._headersCapability.promise;const{value:C,done:J}=await this._reader.read();return J?{value:C,done:J}:(this._loaded+=C.byteLength,(o=this.onProgress)===null||o===void 0||o.call(this,{loaded:this._loaded,total:this._contentLength}),{value:n(C),done:!1})}cancel(o){var C;(C=this._reader)===null||C===void 0||C.cancel(o),this._abortController.abort()}}class I{constructor(o,C,J){this._stream=o,this._reader=null,this._loaded=0;const v=o.source;this._withCredentials=v.withCredentials||!1,this._readCapability=new h.PromiseCapability,this._isStreamingSupported=!v.disableStream,this._abortController=new AbortController,this._headers=e(this._stream.httpHeaders),this._headers.append("Range",`bytes=${C}-${J-1}`);const Q=v.url;fetch(Q,M(this._headers,this._withCredentials,this._abortController)).then($=>{if(!(0,u.validateResponseStatus)($.status))throw(0,u.createResponseStatusError)($.status,Q);this._readCapability.resolve(),this._reader=$.body.getReader()}).catch(this._readCapability.reject),this.onProgress=null}get isStreamingSupported(){return this._isStreamingSupported}async read(){var o;await this._readCapability.promise;const{value:C,done:J}=await this._reader.read();return J?{value:C,done:J}:(this._loaded+=C.byteLength,(o=this.onProgress)===null||o===void 0||o.call(this,{loaded:this._loaded}),{value:n(C),done:!1})}cancel(o){var C;(C=this._reader)===null||C===void 0||C.cancel(o),this._abortController.abort()}}},(c,d,m)=>{Object.defineProperty(d,"__esModule",{value:!0}),d.TextLayerRenderTask=void 0,d.renderTextLayer=function(C){!C.textContentSource&&(C.textContent||C.textContentStream)&&((0,u.deprecated)("The TextLayerRender `textContent`/`textContentStream` parameters will be removed in the future, please use `textContentSource` instead."),C.textContentSource=C.textContent||C.textContentStream);const{container:J,viewport:v}=C,Q=getComputedStyle(J),$=Q.getPropertyValue("visibility"),q=parseFloat(Q.getPropertyValue("--scale-factor"));$==="visible"&&(!q||Math.abs(q-v.scale)>1e-5)&&console.error("The `--scale-factor` CSS-variable must be set, to the same value as `viewport.scale`, either on the `container`-element itself or higher up in the DOM.");const x=new o(C);return x._render(),x},d.updateTextLayer=function(C){let{container:J,viewport:v,textDivs:Q,textDivProperties:$,isOffscreenCanvasSupported:q,mustRotate:x=!0,mustRescale:D=!0}=C;if(x&&(0,u.setLayerDimensions)(J,{rotation:v.rotation}),D){const r=Y(0,q),w={prevFontSize:null,prevFontFamily:null,div:null,scale:v.scale*(globalThis.devicePixelRatio||1),properties:null,ctx:r};for(const j of Q)w.properties=$.get(j),w.div=j,T(w)}};var h=m(1),u=m(142);const M=30,e=.8,n=new Map;function Y(C,J){let v;if(J&&h.FeatureTest.isOffscreenCanvasSupported)v=new OffscreenCanvas(C,C).getContext("2d",{alpha:!1});else{const Q=document.createElement("canvas");Q.width=Q.height=C,v=Q.getContext("2d",{alpha:!1})}return v}function I(C,J,v){const Q=document.createElement("span"),$={angle:0,canvasWidth:0,hasText:J.str!=="",hasEOL:J.hasEOL,fontSize:0};C._textDivs.push(Q);const q=h.Util.transform(C._transform,J.transform);let x=Math.atan2(q[1],q[0]);const D=v[J.fontName];D.vertical&&(x+=Math.PI/2);const r=Math.hypot(q[2],q[3]),w=r*function(cl,al){const Tl=n.get(cl);if(Tl)return Tl;const nl=Y(M,al);nl.font=`${M}px ${cl}`;const Rl=nl.measureText("");let E=Rl.fontBoundingBoxAscent,F=Math.abs(Rl.fontBoundingBoxDescent);if(E){const P=E/(E+F);return n.set(cl,P),nl.canvas.width=nl.canvas.height=0,P}nl.strokeStyle="red",nl.clearRect(0,0,M,M),nl.strokeText("g",0,0);let H=nl.getImageData(0,0,M,M).data;F=0;for(let P=H.length-1-3;P>=0;P-=4)if(H[P]>0){F=Math.ceil(P/4/M);break}nl.clearRect(0,0,M,M),nl.strokeText("A",0,M),H=nl.getImageData(0,0,M,M).data,E=0;for(let P=0,g=H.length;P<g;P+=4)if(H[P]>0){E=M-Math.floor(P/4/M);break}if(nl.canvas.width=nl.canvas.height=0,E){const P=E/(E+F);return n.set(cl,P),P}return n.set(cl,e),e}(D.fontFamily,C._isOffscreenCanvasSupported);let j,f;x===0?(j=q[4],f=q[5]-w):(j=q[4]+w*Math.sin(x),f=q[5]-w*Math.cos(x));const sl="calc(var(--scale-factor)*",tl=Q.style;C._container===C._rootContainer?(tl.left=`${(100*j/C._pageWidth).toFixed(2)}%`,tl.top=`${(100*f/C._pageHeight).toFixed(2)}%`):(tl.left=`${sl}${j.toFixed(2)}px)`,tl.top=`${sl}${f.toFixed(2)}px)`),tl.fontSize=`${sl}${r.toFixed(2)}px)`,tl.fontFamily=D.fontFamily,$.fontSize=r,Q.setAttribute("role","presentation"),Q.textContent=J.str,Q.dir=J.dir,C._fontInspectorEnabled&&(Q.dataset.fontName=J.fontName),x!==0&&($.angle=x*(180/Math.PI));let B=!1;if(J.str.length>1)B=!0;else if(J.str!==" "&&J.transform[0]!==J.transform[3]){const cl=Math.abs(J.transform[0]),al=Math.abs(J.transform[3]);cl!==al&&Math.max(cl,al)/Math.min(cl,al)>1.5&&(B=!0)}B&&($.canvasWidth=D.vertical?J.height:J.width),C._textDivProperties.set(Q,$),C._isReadableStream&&C._layoutText(Q)}function T(C){const{div:J,scale:v,properties:Q,ctx:$,prevFontSize:q,prevFontFamily:x}=C,{style:D}=J;let r="";if(Q.canvasWidth!==0&&Q.hasText){const{fontFamily:w}=D,{canvasWidth:j,fontSize:f}=Q;(q!==f||x!==w)&&($.font=`${f*v}px ${w}`,C.prevFontSize=f,C.prevFontFamily=w);const{width:sl}=$.measureText(J.textContent);sl>0&&(r=`scaleX(${j*v/sl})`)}Q.angle!==0&&(r=`rotate(${Q.angle}deg) ${r}`),r.length>0&&(D.transform=r)}class o{constructor(J){var v;let{textContentSource:Q,container:$,viewport:q,textDivs:x,textDivProperties:D,textContentItemsStr:r,isOffscreenCanvasSupported:w}=J;this._textContentSource=Q,this._isReadableStream=Q instanceof ReadableStream,this._container=this._rootContainer=$,this._textDivs=x||[],this._textContentItemsStr=r||[],this._isOffscreenCanvasSupported=w,this._fontInspectorEnabled=!((v=globalThis.FontInspector)===null||v===void 0||!v.enabled),this._reader=null,this._textDivProperties=D||new WeakMap,this._canceled=!1,this._capability=new h.PromiseCapability,this._layoutTextParams={prevFontSize:null,prevFontFamily:null,div:null,scale:q.scale*(globalThis.devicePixelRatio||1),properties:null,ctx:Y(0,w)};const{pageWidth:j,pageHeight:f,pageX:sl,pageY:tl}=q.rawDims;this._transform=[1,0,0,-1,-sl,tl+f],this._pageWidth=j,this._pageHeight=f,(0,u.setLayerDimensions)($,q),this._capability.promise.finally(()=>{this._layoutTextParams=null}).catch(()=>{})}get promise(){return this._capability.promise}cancel(){this._canceled=!0,this._reader&&(this._reader.cancel(new h.AbortException("TextLayer task cancelled.")).catch(()=>{}),this._reader=null),this._capability.reject(new h.AbortException("TextLayer task cancelled."))}_processItems(J,v){for(const Q of J)if(Q.str!==void 0)this._textContentItemsStr.push(Q.str),I(this,Q,v);else if(Q.type==="beginMarkedContentProps"||Q.type==="beginMarkedContent"){const $=this._container;this._container=document.createElement("span"),this._container.classList.add("markedContent"),Q.id!==null&&this._container.setAttribute("id",`${Q.id}`),$.append(this._container)}else Q.type==="endMarkedContent"&&(this._container=this._container.parentNode)}_layoutText(J){const v=this._layoutTextParams.properties=this._textDivProperties.get(J);if(this._layoutTextParams.div=J,T(this._layoutTextParams),v.hasText&&this._container.append(J),v.hasEOL){const Q=document.createElement("br");Q.setAttribute("role","presentation"),this._container.append(Q)}}_render(){const J=new h.PromiseCapability;let v=Object.create(null);if(this._isReadableStream){const Q=()=>{this._reader.read().then($=>{let{value:q,done:x}=$;x?J.resolve():(Object.assign(v,q.styles),this._processItems(q.items,v),Q())},J.reject)};this._reader=this._textContentSource.getReader(),Q()}else{if(!this._textContentSource)throw new Error('No "textContentSource" parameter specified.');{const{items:Q,styles:$}=this._textContentSource;this._processItems(Q,$),J.resolve()}}J.promise.then(()=>{v=null,function(Q){if(Q._canceled)return;const $=Q._textDivs,q=Q._capability;if($.length>1e5)q.resolve();else{if(!Q._isReadableStream)for(const x of $)Q._layoutText(x);q.resolve()}}(this)},this._capability.reject)}}d.TextLayerRenderTask=o},(c,d,m)=>{var h,u,M,e,n,Y,I,T,o,C,J,v,Q,$,q,x;Object.defineProperty(d,"__esModule",{value:!0}),d.AnnotationEditorLayer=void 0;var D=m(1),r=m(141),w=m(163),j=m(164),f=m(142);const sl=class{constructor(B){Zl(this,o),Zl(this,J),Zl(this,Q),Zl(this,q),Zl(this,h,void 0),Zl(this,u,!1),Zl(this,M,this.pointerup.bind(this)),Zl(this,e,this.pointerdown.bind(this)),Zl(this,n,new Map),Zl(this,Y,!1),Zl(this,I,!1),Zl(this,T,void 0),sl._initialized||(sl._initialized=!0,w.FreeTextEditor.initialize(B.l10n),j.InkEditor.initialize(B.l10n)),B.uiManager.registerEditorTypes([w.FreeTextEditor,j.InkEditor]),hl(this,T,B.uiManager),this.pageIndex=B.pageIndex,this.div=B.div,hl(this,h,B.accessibilityManager),R(this,T).addLayer(this)}get isEmpty(){return R(this,n).size===0}updateToolbar(B){R(this,T).updateToolbar(B)}updateMode(){let B=arguments.length>0&&arguments[0]!==void 0?arguments[0]:R(this,T).getMode();bl(this,q,x).call(this),B===D.AnnotationEditorType.INK?(this.addInkEditorIfNeeded(!1),this.disableClick()):this.enableClick(),R(this,T).unselectAll(),B!==D.AnnotationEditorType.NONE&&(this.div.classList.toggle("freeTextEditing",B===D.AnnotationEditorType.FREETEXT),this.div.classList.toggle("inkEditing",B===D.AnnotationEditorType.INK),this.div.hidden=!1)}addInkEditorIfNeeded(B){if(!(!B&&R(this,T).getMode()!==D.AnnotationEditorType.INK)){if(!B){for(const cl of R(this,n).values())if(cl.isEmpty()){cl.setInBackground();return}}bl(this,Q,$).call(this,{offsetX:0,offsetY:0}).setInBackground()}}setEditingState(B){R(this,T).setEditingState(B)}addCommands(B){R(this,T).addCommands(B)}enable(){this.div.style.pointerEvents="auto";for(const B of R(this,n).values())B.enableEditing()}disable(){this.div.style.pointerEvents="none";for(const B of R(this,n).values())B.disableEditing();bl(this,q,x).call(this),this.isEmpty&&(this.div.hidden=!0)}setActiveEditor(B){R(this,T).getActive()!==B&&R(this,T).setActiveEditor(B)}enableClick(){this.div.addEventListener("pointerdown",R(this,e)),this.div.addEventListener("pointerup",R(this,M))}disableClick(){this.div.removeEventListener("pointerdown",R(this,e)),this.div.removeEventListener("pointerup",R(this,M))}attach(B){R(this,n).set(B.id,B)}detach(B){var cl;R(this,n).delete(B.id),(cl=R(this,h))===null||cl===void 0||cl.removePointerInTextLayer(B.contentDiv)}remove(B){R(this,T).removeEditor(B),this.detach(B),B.div.style.display="none",setTimeout(()=>{B.div.style.display="",B.div.remove(),B.isAttachedToDOM=!1,document.activeElement===document.body&&R(this,T).focusMainContainer()},0),R(this,I)||this.addInkEditorIfNeeded(!1)}add(B){if(bl(this,o,C).call(this,B),R(this,T).addEditor(B),this.attach(B),!B.isAttachedToDOM){const cl=B.render();this.div.append(cl),B.isAttachedToDOM=!0}this.moveEditorInDOM(B),B.onceAdded(),R(this,T).addToAnnotationStorage(B)}moveEditorInDOM(B){var cl;(cl=R(this,h))===null||cl===void 0||cl.moveElementInDOM(this.div,B.div,B.contentDiv,!0)}addOrRebuild(B){B.needsToBeRebuilt()?B.rebuild():this.add(B)}addANewEditor(B){this.addCommands({cmd:()=>{this.addOrRebuild(B)},undo:()=>{B.remove()},mustExec:!0})}addUndoableEditor(B){this.addCommands({cmd:()=>{this.addOrRebuild(B)},undo:()=>{B.remove()},mustExec:!1})}getNextId(){return R(this,T).getId()}deserialize(B){switch(B.annotationType){case D.AnnotationEditorType.FREETEXT:return w.FreeTextEditor.deserialize(B,this,R(this,T));case D.AnnotationEditorType.INK:return j.InkEditor.deserialize(B,this,R(this,T))}return null}setSelected(B){R(this,T).setSelected(B)}toggleSelected(B){R(this,T).toggleSelected(B)}isSelected(B){return R(this,T).isSelected(B)}unselect(B){R(this,T).unselect(B)}pointerup(B){const{isMac:cl}=D.FeatureTest.platform;!(B.button!==0||B.ctrlKey&&cl)&&B.target===this.div&&R(this,Y)&&(hl(this,Y,!1),R(this,u)?bl(this,Q,$).call(this,B):hl(this,u,!0))}pointerdown(B){const{isMac:cl}=D.FeatureTest.platform;if(B.button!==0||B.ctrlKey&&cl||B.target!==this.div)return;hl(this,Y,!0);const al=R(this,T).getActive();hl(this,u,!al||al.isEmpty())}drop(B){const cl=B.dataTransfer.getData("text/plain"),al=R(this,T).getEditor(cl);if(!al)return;B.preventDefault(),B.dataTransfer.dropEffect="move",bl(this,o,C).call(this,al);const Tl=this.div.getBoundingClientRect(),nl=B.clientX-Tl.x,Rl=B.clientY-Tl.y;al.translate(nl-al.startX,Rl-al.startY),this.moveEditorInDOM(al),al.div.focus()}dragover(B){B.preventDefault()}destroy(){var B;((B=R(this,T).getActive())===null||B===void 0?void 0:B.parent)===this&&R(this,T).setActiveEditor(null);for(const al of R(this,n).values()){var cl;(cl=R(this,h))===null||cl===void 0||cl.removePointerInTextLayer(al.contentDiv),al.setParent(null),al.isAttachedToDOM=!1,al.div.remove()}this.div=null,R(this,n).clear(),R(this,T).removeLayer(this)}render(B){let{viewport:cl}=B;this.viewport=cl,(0,f.setLayerDimensions)(this.div,cl),(0,r.bindEvents)(this,this.div,["dragover","drop"]);for(const al of R(this,T).getEditors(this.pageIndex))this.add(al);this.updateMode()}update(B){let{viewport:cl}=B;R(this,T).commitOrRemove(),this.viewport=cl,(0,f.setLayerDimensions)(this.div,{rotation:cl.rotation}),this.updateMode()}get pageDimensions(){const{pageWidth:B,pageHeight:cl}=this.viewport.rawDims;return[B,cl]}};let tl=sl;h=new WeakMap,u=new WeakMap,M=new WeakMap,e=new WeakMap,n=new WeakMap,Y=new WeakMap,I=new WeakMap,T=new WeakMap,o=new WeakSet,C=function(B){var cl;B.parent!==this&&(this.attach(B),(cl=B.parent)===null||cl===void 0||cl.detach(B),B.setParent(this),B.div&&B.isAttachedToDOM&&(B.div.remove(),this.div.append(B.div)))},J=new WeakSet,v=function(B){switch(R(this,T).getMode()){case D.AnnotationEditorType.FREETEXT:return new w.FreeTextEditor(B);case D.AnnotationEditorType.INK:return new j.InkEditor(B)}return null},Q=new WeakSet,$=function(B){const cl=this.getNextId(),al=bl(this,J,v).call(this,{parent:this,id:cl,x:B.offsetX,y:B.offsetY,uiManager:R(this,T)});return al&&this.add(al),al},q=new WeakSet,x=function(){hl(this,I,!0);for(const B of R(this,n).values())B.isEmpty()&&B.remove();hl(this,I,!1)},kl(tl,"_initialized",!1),d.AnnotationEditorLayer=tl},(c,d,m)=>{var h,u,M,e,n,Y,I,T,o,C,J,v,Q,$,q,x,D;Object.defineProperty(d,"__esModule",{value:!0}),d.FreeTextEditor=void 0;var r=m(1),w=m(141),j=m(140);const f=class extends j.AnnotationEditor{constructor(tl){super({...tl,name:"freeTextEditor"}),Zl(this,C),Zl(this,v),Zl(this,$),Zl(this,x),Zl(this,h,this.editorDivBlur.bind(this)),Zl(this,u,this.editorDivFocus.bind(this)),Zl(this,M,this.editorDivInput.bind(this)),Zl(this,e,this.editorDivKeydown.bind(this)),Zl(this,n,void 0),Zl(this,Y,""),Zl(this,I,`${this.id}-editor`),Zl(this,T,!1),Zl(this,o,void 0),hl(this,n,tl.color||f._defaultColor||j.AnnotationEditor._defaultLineColor),hl(this,o,tl.fontSize||f._defaultFontSize)}static initialize(tl){this._l10nPromise=new Map(["free_text2_default_content","editor_free_text2_aria_label"].map(cl=>[cl,tl.get(cl)]));const B=getComputedStyle(document.documentElement);this._internalPadding=parseFloat(B.getPropertyValue("--freetext-padding"))}static updateDefaultParams(tl,B){switch(tl){case r.AnnotationEditorParamsType.FREETEXT_SIZE:f._defaultFontSize=B;break;case r.AnnotationEditorParamsType.FREETEXT_COLOR:f._defaultColor=B}}updateParams(tl,B){switch(tl){case r.AnnotationEditorParamsType.FREETEXT_SIZE:bl(this,C,J).call(this,B);break;case r.AnnotationEditorParamsType.FREETEXT_COLOR:bl(this,v,Q).call(this,B)}}static get defaultPropertiesToUpdate(){return[[r.AnnotationEditorParamsType.FREETEXT_SIZE,f._defaultFontSize],[r.AnnotationEditorParamsType.FREETEXT_COLOR,f._defaultColor||j.AnnotationEditor._defaultLineColor]]}get propertiesToUpdate(){return[[r.AnnotationEditorParamsType.FREETEXT_SIZE,R(this,o)],[r.AnnotationEditorParamsType.FREETEXT_COLOR,R(this,n)]]}getInitialTranslation(){const tl=this.parentScale;return[-f._internalPadding*tl,-(f._internalPadding+R(this,o))*tl]}rebuild(){super.rebuild(),this.div!==null&&(this.isAttachedToDOM||this.parent.add(this))}enableEditMode(){this.isInEditMode()||(this.parent.setEditingState(!1),this.parent.updateToolbar(r.AnnotationEditorType.FREETEXT),super.enableEditMode(),this.overlayDiv.classList.remove("enabled"),this.editorDiv.contentEditable=!0,this.div.draggable=!1,this.div.removeAttribute("aria-activedescendant"),this.editorDiv.addEventListener("keydown",R(this,e)),this.editorDiv.addEventListener("focus",R(this,u)),this.editorDiv.addEventListener("blur",R(this,h)),this.editorDiv.addEventListener("input",R(this,M)))}disableEditMode(){this.isInEditMode()&&(this.parent.setEditingState(!0),super.disableEditMode(),this.overlayDiv.classList.add("enabled"),this.editorDiv.contentEditable=!1,this.div.setAttribute("aria-activedescendant",R(this,I)),this.div.draggable=!0,this.editorDiv.removeEventListener("keydown",R(this,e)),this.editorDiv.removeEventListener("focus",R(this,u)),this.editorDiv.removeEventListener("blur",R(this,h)),this.editorDiv.removeEventListener("input",R(this,M)),this.div.focus({preventScroll:!0}),this.isEditing=!1,this.parent.div.classList.add("freeTextEditing"))}focusin(tl){super.focusin(tl),tl.target!==this.editorDiv&&this.editorDiv.focus()}onceAdded(){this.width||(this.enableEditMode(),this.editorDiv.focus())}isEmpty(){return!this.editorDiv||this.editorDiv.innerText.trim()===""}remove(){this.isEditing=!1,this.parent.setEditingState(!0),this.parent.div.classList.add("freeTextEditing"),super.remove()}commit(){this.isInEditMode()&&(super.commit(),R(this,T)||(hl(this,T,!0),this.parent.addUndoableEditor(this)),this.disableEditMode(),hl(this,Y,bl(this,$,q).call(this).trimEnd()),bl(this,x,D).call(this))}shouldGetKeyboardEvents(){return this.isInEditMode()}dblclick(tl){this.enableEditMode(),this.editorDiv.focus()}keydown(tl){tl.target===this.div&&tl.key==="Enter"&&(this.enableEditMode(),this.editorDiv.focus())}editorDivKeydown(tl){f._keyboardManager.exec(this,tl)}editorDivFocus(tl){this.isEditing=!0}editorDivBlur(tl){this.isEditing=!1}editorDivInput(tl){this.parent.div.classList.toggle("freeTextEditing",this.isEmpty())}disableEditing(){this.editorDiv.setAttribute("role","comment"),this.editorDiv.removeAttribute("aria-multiline")}enableEditing(){this.editorDiv.setAttribute("role","textbox"),this.editorDiv.setAttribute("aria-multiline",!0)}render(){if(this.div)return this.div;let tl,B;this.width&&(tl=this.x,B=this.y),super.render(),this.editorDiv=document.createElement("div"),this.editorDiv.className="internal",this.editorDiv.setAttribute("id",R(this,I)),this.enableEditing(),f._l10nPromise.get("editor_free_text2_aria_label").then(al=>{var Tl;return(Tl=this.editorDiv)===null||Tl===void 0?void 0:Tl.setAttribute("aria-label",al)}),f._l10nPromise.get("free_text2_default_content").then(al=>{var Tl;return(Tl=this.editorDiv)===null||Tl===void 0?void 0:Tl.setAttribute("default-content",al)}),this.editorDiv.contentEditable=!0;const{style:cl}=this.editorDiv;if(cl.fontSize=`calc(${R(this,o)}px * var(--scale-factor))`,cl.color=R(this,n),this.div.append(this.editorDiv),this.overlayDiv=document.createElement("div"),this.overlayDiv.classList.add("overlay","enabled"),this.div.append(this.overlayDiv),(0,w.bindEvents)(this,this.div,["dblclick","keydown"]),this.width){const[al,Tl]=this.parentDimensions;this.setAt(tl*al,B*Tl,this.width*al,this.height*Tl);for(const nl of R(this,Y).split(`
`)){const Rl=document.createElement("div");Rl.append(nl?document.createTextNode(nl):document.createElement("br")),this.editorDiv.append(Rl)}this.div.draggable=!0,this.editorDiv.contentEditable=!1}else this.div.draggable=!1,this.editorDiv.contentEditable=!0;return this.div}get contentDiv(){return this.editorDiv}static deserialize(tl,B,cl){const al=super.deserialize(tl,B,cl);return hl(al,o,tl.fontSize),hl(al,n,r.Util.makeHexColor(...tl.color)),hl(al,Y,tl.value),al}serialize(){if(this.isEmpty())return null;const tl=f._internalPadding*this.parentScale,B=this.getRect(tl,tl),cl=j.AnnotationEditor._colorManager.convert(this.isAttachedToDOM?getComputedStyle(this.editorDiv).color:R(this,n));return{annotationType:r.AnnotationEditorType.FREETEXT,color:cl,fontSize:R(this,o),value:R(this,Y),pageIndex:this.pageIndex,rect:B,rotation:this.rotation}}};let sl=f;h=new WeakMap,u=new WeakMap,M=new WeakMap,e=new WeakMap,n=new WeakMap,Y=new WeakMap,I=new WeakMap,T=new WeakMap,o=new WeakMap,C=new WeakSet,J=function(tl){const B=al=>{this.editorDiv.style.fontSize=`calc(${al}px * var(--scale-factor))`,this.translate(0,-(al-R(this,o))*this.parentScale),hl(this,o,al),bl(this,x,D).call(this)},cl=R(this,o);this.addCommands({cmd:()=>{B(tl)},undo:()=>{B(cl)},mustExec:!0,type:r.AnnotationEditorParamsType.FREETEXT_SIZE,overwriteIfSameType:!0,keepUndo:!0})},v=new WeakSet,Q=function(tl){const B=R(this,n);this.addCommands({cmd:()=>{hl(this,n,this.editorDiv.style.color=tl)},undo:()=>{hl(this,n,this.editorDiv.style.color=B)},mustExec:!0,type:r.AnnotationEditorParamsType.FREETEXT_COLOR,overwriteIfSameType:!0,keepUndo:!0})},$=new WeakSet,q=function(){const tl=this.editorDiv.getElementsByTagName("div");if(tl.length===0)return this.editorDiv.innerText;const B=[];for(const cl of tl)B.push(cl.innerText.replace(/\r\n?|\n/,""));return B.join(`
`)},x=new WeakSet,D=function(){const[tl,B]=this.parentDimensions;let cl;if(this.isAttachedToDOM)cl=this.div.getBoundingClientRect();else{const{currentLayer:al,div:Tl}=this,nl=Tl.style.display;Tl.style.display="hidden",al.div.append(this.div),cl=Tl.getBoundingClientRect(),Tl.remove(),Tl.style.display=nl}this.width=cl.width/tl,this.height=cl.height/B},kl(sl,"_freeTextDefaultContent",""),kl(sl,"_l10nPromise"),kl(sl,"_internalPadding",0),kl(sl,"_defaultColor",null),kl(sl,"_defaultFontSize",10),kl(sl,"_keyboardManager",new w.KeyboardManager([[["ctrl+Enter","mac+meta+Enter","Escape","mac+Escape"],f.prototype.commitOrRemove]])),kl(sl,"_type","freetext"),d.FreeTextEditor=sl},(c,d,m)=>{var h,u,M,e,n,Y,I,T,o,C,J,v,Q,$,q,x,D,r,w,j,f,sl,tl,B,cl,al,Tl,nl,Rl,E,F,H,P,g,K,il,ml,Gl,ul,Nl,yl,Xl,Wl,Dl,Ul,ll,V,O,A,_,dl,Ml,Yl,Vl,Ll,ol,zl,Il,Sl,Jl,Cl,el,wl,gl,Hl,ZZ,vl,xl,Ql,Pl;Object.defineProperty(d,"__esModule",{value:!0}),d.InkEditor=void 0;var Al=m(1),El=m(140),uZ=m(141);const lZ=16,_l=class extends El.AnnotationEditor{constructor(pl){super({...pl,name:"inkEditor"}),Zl(this,D),Zl(this,w),Zl(this,f),Zl(this,tl),Zl(this,cl),Zl(this,Tl),Zl(this,Rl),Zl(this,F),Zl(this,P),Zl(this,K),Zl(this,ml),Zl(this,ul),Zl(this,yl),Zl(this,Wl),Zl(this,Ul),Zl(this,V),Zl(this,A),Zl(this,dl),Zl(this,Yl),Zl(this,zl),Zl(this,Sl),Zl(this,Cl),Zl(this,wl),Zl(this,Hl),Zl(this,vl),Zl(this,Ql),Zl(this,h,0),Zl(this,u,0),Zl(this,M,0),Zl(this,e,this.canvasContextMenu.bind(this)),Zl(this,n,this.canvasPointermove.bind(this)),Zl(this,Y,this.canvasPointerleave.bind(this)),Zl(this,I,this.canvasPointerup.bind(this)),Zl(this,T,this.canvasPointerdown.bind(this)),Zl(this,o,new Path2D),Zl(this,C,!1),Zl(this,J,!1),Zl(this,v,!1),Zl(this,Q,null),Zl(this,$,0),Zl(this,q,0),Zl(this,x,null),this.color=pl.color||null,this.thickness=pl.thickness||null,this.opacity=pl.opacity||null,this.paths=[],this.bezierPath2D=[],this.allRawPaths=[],this.currentPath=[],this.scaleFactor=1,this.translationX=this.translationY=0,this.x=0,this.y=0}static initialize(pl){this._l10nPromise=new Map(["editor_ink_canvas_aria_label","editor_ink2_aria_label"].map(jl=>[jl,pl.get(jl)]))}static updateDefaultParams(pl,jl){switch(pl){case Al.AnnotationEditorParamsType.INK_THICKNESS:_l._defaultThickness=jl;break;case Al.AnnotationEditorParamsType.INK_COLOR:_l._defaultColor=jl;break;case Al.AnnotationEditorParamsType.INK_OPACITY:_l._defaultOpacity=jl/100}}updateParams(pl,jl){switch(pl){case Al.AnnotationEditorParamsType.INK_THICKNESS:bl(this,D,r).call(this,jl);break;case Al.AnnotationEditorParamsType.INK_COLOR:bl(this,w,j).call(this,jl);break;case Al.AnnotationEditorParamsType.INK_OPACITY:bl(this,f,sl).call(this,jl)}}static get defaultPropertiesToUpdate(){return[[Al.AnnotationEditorParamsType.INK_THICKNESS,_l._defaultThickness],[Al.AnnotationEditorParamsType.INK_COLOR,_l._defaultColor||El.AnnotationEditor._defaultLineColor],[Al.AnnotationEditorParamsType.INK_OPACITY,Math.round(100*_l._defaultOpacity)]]}get propertiesToUpdate(){return[[Al.AnnotationEditorParamsType.INK_THICKNESS,this.thickness||_l._defaultThickness],[Al.AnnotationEditorParamsType.INK_COLOR,this.color||_l._defaultColor||El.AnnotationEditor._defaultLineColor],[Al.AnnotationEditorParamsType.INK_OPACITY,Math.round(100*(this.opacity??_l._defaultOpacity))]]}rebuild(){super.rebuild(),this.div!==null&&(this.canvas||(bl(this,Ul,ll).call(this),bl(this,V,O).call(this)),this.isAttachedToDOM||(this.parent.add(this),bl(this,A,_).call(this)),bl(this,vl,xl).call(this))}remove(){this.canvas!==null&&(this.isEmpty()||this.commit(),this.canvas.width=this.canvas.height=0,this.canvas.remove(),this.canvas=null,R(this,Q).disconnect(),hl(this,Q,null),super.remove())}setParent(pl){!this.parent&&pl?this._uiManager.removeShouldRescale(this):this.parent&&pl===null&&this._uiManager.addShouldRescale(this),super.setParent(pl)}onScaleChanging(){const[pl,jl]=this.parentDimensions,Ol=this.width*pl,Kl=this.height*jl;this.setDimensions(Ol,Kl)}enableEditMode(){!R(this,C)&&this.canvas!==null&&(super.enableEditMode(),this.div.draggable=!1,this.canvas.addEventListener("pointerdown",R(this,T)))}disableEditMode(){this.isInEditMode()&&this.canvas!==null&&(super.disableEditMode(),this.div.draggable=!this.isEmpty(),this.div.classList.remove("editing"),this.canvas.removeEventListener("pointerdown",R(this,T)))}onceAdded(){this.div.draggable=!this.isEmpty()}isEmpty(){return this.paths.length===0||this.paths.length===1&&this.paths[0].length===0}commit(){R(this,C)||(super.commit(),this.isEditing=!1,this.disableEditMode(),this.setInForeground(),hl(this,C,!0),this.div.classList.add("disabled"),bl(this,vl,xl).call(this,!0),this.parent.addInkEditorIfNeeded(!0),this.parent.moveEditorInDOM(this),this.div.focus({preventScroll:!0}))}focusin(pl){super.focusin(pl),this.enableEditMode()}canvasPointerdown(pl){pl.button===0&&this.isInEditMode()&&!R(this,C)&&(this.setInForeground(),pl.preventDefault(),pl.type!=="mouse"&&this.div.focus(),bl(this,Tl,nl).call(this,pl.offsetX,pl.offsetY))}canvasContextMenu(pl){pl.preventDefault()}canvasPointermove(pl){pl.preventDefault(),bl(this,Rl,E).call(this,pl.offsetX,pl.offsetY)}canvasPointerup(pl){pl.preventDefault(),bl(this,Wl,Dl).call(this,pl)}canvasPointerleave(pl){bl(this,Wl,Dl).call(this,pl)}render(){if(this.div)return this.div;let pl,jl;this.width&&(pl=this.x,jl=this.y),super.render(),_l._l10nPromise.get("editor_ink2_aria_label").then(Bl=>{var fl;return(fl=this.div)===null||fl===void 0?void 0:fl.setAttribute("aria-label",Bl)});const[Ol,Kl,Fl,rl]=bl(this,tl,B).call(this);if(this.setAt(Ol,Kl,0,0),this.setDims(Fl,rl),bl(this,Ul,ll).call(this),this.width){const[Bl,fl]=this.parentDimensions;this.setAt(pl*Bl,jl*fl,this.width*Bl,this.height*fl),hl(this,v,!0),bl(this,A,_).call(this),this.setDims(this.width*Bl,this.height*fl),bl(this,yl,Xl).call(this),bl(this,Ql,Pl).call(this),this.div.classList.add("disabled")}else this.div.classList.add("editing"),this.enableEditMode();return bl(this,V,O).call(this),this.div}setDimensions(pl,jl){const Ol=Math.round(pl),Kl=Math.round(jl);if(R(this,$)===Ol&&R(this,q)===Kl)return;hl(this,$,Ol),hl(this,q,Kl),this.canvas.style.visibility="hidden",R(this,h)&&Math.abs(R(this,h)-pl/jl)>.01&&(jl=Math.ceil(pl/R(this,h)),this.setDims(pl,jl));const[Fl,rl]=this.parentDimensions;this.width=pl/Fl,this.height=jl/rl,R(this,C)&&bl(this,dl,Ml).call(this,pl,jl),bl(this,A,_).call(this),bl(this,yl,Xl).call(this),this.canvas.style.visibility="visible",this.fixDims()}static deserialize(pl,jl,Ol){var Kl,Fl;const rl=super.deserialize(pl,jl,Ol);rl.thickness=pl.thickness,rl.color=Al.Util.makeHexColor(...pl.color),rl.opacity=pl.opacity;const[Bl,fl]=rl.pageDimensions,tZ=rl.width*Bl,ql=rl.height*fl,bZ=rl.parentScale,$l=pl.thickness/2;hl(rl,h,tZ/ql),hl(rl,C,!0),hl(rl,$,Math.round(tZ)),hl(rl,q,Math.round(ql));for(const{bezier:sZ}of pl.paths){const GZ=[];rl.paths.push(GZ);let mZ=bZ*(sZ[0]-$l),WZ=bZ*(ql-sZ[1]-$l);for(let aZ=2,YZ=sZ.length;aZ<YZ;aZ+=6){const XZ=bZ*(sZ[aZ]-$l),eZ=bZ*(ql-sZ[aZ+1]-$l),yZ=bZ*(sZ[aZ+2]-$l),oZ=bZ*(ql-sZ[aZ+3]-$l),LZ=bZ*(sZ[aZ+4]-$l),pZ=bZ*(ql-sZ[aZ+5]-$l);GZ.push([[mZ,WZ],[XZ,eZ],[yZ,oZ],[LZ,pZ]]),mZ=LZ,WZ=pZ}const NZ=bl(this,Ll,ol).call(this,GZ);rl.bezierPath2D.push(NZ)}const cZ=bl(Kl=rl,wl,gl).call(Kl);return hl(rl,M,Math.max(lZ,cZ[2]-cZ[0])),hl(rl,u,Math.max(lZ,cZ[3]-cZ[1])),bl(Fl=rl,dl,Ml).call(Fl,tZ,ql),rl}serialize(){if(this.isEmpty())return null;const pl=this.getRect(0,0),jl=this.rotation%180==0?pl[3]-pl[1]:pl[2]-pl[0],Ol=El.AnnotationEditor._colorManager.convert(this.ctx.strokeStyle);return{annotationType:Al.AnnotationEditorType.INK,color:Ol,thickness:this.thickness,opacity:this.opacity,paths:bl(this,zl,Il).call(this,this.scaleFactor/this.parentScale,this.translationX,this.translationY,jl),pageIndex:this.pageIndex,rect:pl,rotation:this.rotation}}};let iZ=_l;h=new WeakMap,u=new WeakMap,M=new WeakMap,e=new WeakMap,n=new WeakMap,Y=new WeakMap,I=new WeakMap,T=new WeakMap,o=new WeakMap,C=new WeakMap,J=new WeakMap,v=new WeakMap,Q=new WeakMap,$=new WeakMap,q=new WeakMap,x=new WeakMap,D=new WeakSet,r=function(pl){const jl=this.thickness;this.addCommands({cmd:()=>{this.thickness=pl,bl(this,vl,xl).call(this)},undo:()=>{this.thickness=jl,bl(this,vl,xl).call(this)},mustExec:!0,type:Al.AnnotationEditorParamsType.INK_THICKNESS,overwriteIfSameType:!0,keepUndo:!0})},w=new WeakSet,j=function(pl){const jl=this.color;this.addCommands({cmd:()=>{this.color=pl,bl(this,yl,Xl).call(this)},undo:()=>{this.color=jl,bl(this,yl,Xl).call(this)},mustExec:!0,type:Al.AnnotationEditorParamsType.INK_COLOR,overwriteIfSameType:!0,keepUndo:!0})},f=new WeakSet,sl=function(pl){pl/=100;const jl=this.opacity;this.addCommands({cmd:()=>{this.opacity=pl,bl(this,yl,Xl).call(this)},undo:()=>{this.opacity=jl,bl(this,yl,Xl).call(this)},mustExec:!0,type:Al.AnnotationEditorParamsType.INK_OPACITY,overwriteIfSameType:!0,keepUndo:!0})},tl=new WeakSet,B=function(){const{parentRotation:pl,parentDimensions:[jl,Ol]}=this;switch(pl){case 90:return[0,Ol,Ol,jl];case 180:return[jl,Ol,jl,Ol];case 270:return[jl,0,Ol,jl];default:return[0,0,jl,Ol]}},cl=new WeakSet,al=function(){const{ctx:pl,color:jl,opacity:Ol,thickness:Kl,parentScale:Fl,scaleFactor:rl}=this;pl.lineWidth=Kl*Fl/rl,pl.lineCap="round",pl.lineJoin="round",pl.miterLimit=10,pl.strokeStyle=`${jl}${(0,uZ.opacityToHex)(Ol)}`},Tl=new WeakSet,nl=function(pl,jl){this.canvas.addEventListener("contextmenu",R(this,e)),this.canvas.addEventListener("pointerleave",R(this,Y)),this.canvas.addEventListener("pointermove",R(this,n)),this.canvas.addEventListener("pointerup",R(this,I)),this.canvas.removeEventListener("pointerdown",R(this,T)),this.isEditing=!0,R(this,v)||(hl(this,v,!0),bl(this,A,_).call(this),this.thickness||(this.thickness=_l._defaultThickness),this.color||(this.color=_l._defaultColor||El.AnnotationEditor._defaultLineColor),this.opacity??(this.opacity=_l._defaultOpacity)),this.currentPath.push([pl,jl]),hl(this,J,!1),bl(this,cl,al).call(this),hl(this,x,()=>{bl(this,K,il).call(this),R(this,x)&&window.requestAnimationFrame(R(this,x))}),window.requestAnimationFrame(R(this,x))},Rl=new WeakSet,E=function(pl,jl){const[Ol,Kl]=this.currentPath.at(-1);if(this.currentPath.length>1&&pl===Ol&&jl===Kl)return;const Fl=this.currentPath;let rl=R(this,o);Fl.push([pl,jl]),hl(this,J,!0),Fl.length<=2?(rl.moveTo(...Fl[0]),rl.lineTo(pl,jl)):(Fl.length===3&&(hl(this,o,rl=new Path2D),rl.moveTo(...Fl[0])),bl(this,ml,Gl).call(this,rl,...Fl.at(-3),...Fl.at(-2),pl,jl))},F=new WeakSet,H=function(){if(this.currentPath.length===0)return;const pl=this.currentPath.at(-1);R(this,o).lineTo(...pl)},P=new WeakSet,g=function(pl,jl){hl(this,x,null),pl=Math.min(Math.max(pl,0),this.canvas.width),jl=Math.min(Math.max(jl,0),this.canvas.height),bl(this,Rl,E).call(this,pl,jl),bl(this,F,H).call(this);let Ol;if(this.currentPath.length!==1)Ol=bl(this,ul,Nl).call(this);else{const rl=[pl,jl];Ol=[[rl,rl.slice(),rl.slice(),rl]]}const Kl=R(this,o),Fl=this.currentPath;this.currentPath=[],hl(this,o,new Path2D),this.addCommands({cmd:()=>{this.allRawPaths.push(Fl),this.paths.push(Ol),this.bezierPath2D.push(Kl),this.rebuild()},undo:()=>{this.allRawPaths.pop(),this.paths.pop(),this.bezierPath2D.pop(),this.paths.length===0?this.remove():(this.canvas||(bl(this,Ul,ll).call(this),bl(this,V,O).call(this)),bl(this,vl,xl).call(this))},mustExec:!0})},K=new WeakSet,il=function(){if(!R(this,J))return;hl(this,J,!1),Math.ceil(this.thickness*this.parentScale);const pl=this.currentPath.slice(-3),jl=pl.map(Fl=>Fl[0]),Ol=pl.map(Fl=>Fl[1]),{ctx:Kl}=(Math.min(...jl),Math.max(...jl),Math.min(...Ol),Math.max(...Ol),this);Kl.save(),Kl.clearRect(0,0,this.canvas.width,this.canvas.height);for(const Fl of this.bezierPath2D)Kl.stroke(Fl);Kl.stroke(R(this,o)),Kl.restore()},ml=new WeakSet,Gl=function(pl,jl,Ol,Kl,Fl,rl,Bl){const fl=(jl+Kl)/2,tZ=(Ol+Fl)/2,ql=(Kl+rl)/2,bZ=(Fl+Bl)/2;pl.bezierCurveTo(fl+2*(Kl-fl)/3,tZ+2*(Fl-tZ)/3,ql+2*(Kl-ql)/3,bZ+2*(Fl-bZ)/3,ql,bZ)},ul=new WeakSet,Nl=function(){const pl=this.currentPath;if(pl.length<=2)return[[pl[0],pl[0],pl.at(-1),pl.at(-1)]];const jl=[];let Ol,[Kl,Fl]=pl[0];for(Ol=1;Ol<pl.length-2;Ol++){const[$l,cZ]=pl[Ol],[sZ,GZ]=pl[Ol+1],mZ=($l+sZ)/2,WZ=(cZ+GZ)/2,NZ=[Kl+2*($l-Kl)/3,Fl+2*(cZ-Fl)/3],aZ=[mZ+2*($l-mZ)/3,WZ+2*(cZ-WZ)/3];jl.push([[Kl,Fl],NZ,aZ,[mZ,WZ]]),[Kl,Fl]=[mZ,WZ]}const[rl,Bl]=pl[Ol],[fl,tZ]=pl[Ol+1],ql=[Kl+2*(rl-Kl)/3,Fl+2*(Bl-Fl)/3],bZ=[fl+2*(rl-fl)/3,tZ+2*(Bl-tZ)/3];return jl.push([[Kl,Fl],ql,bZ,[fl,tZ]]),jl},yl=new WeakSet,Xl=function(){if(this.isEmpty()){bl(this,Yl,Vl).call(this);return}bl(this,cl,al).call(this);const{canvas:pl,ctx:jl}=this;jl.setTransform(1,0,0,1,0,0),jl.clearRect(0,0,pl.width,pl.height),bl(this,Yl,Vl).call(this);for(const Ol of this.bezierPath2D)jl.stroke(Ol)},Wl=new WeakSet,Dl=function(pl){this.canvas.removeEventListener("pointerleave",R(this,Y)),this.canvas.removeEventListener("pointermove",R(this,n)),this.canvas.removeEventListener("pointerup",R(this,I)),this.canvas.addEventListener("pointerdown",R(this,T)),setTimeout(()=>{this.canvas.removeEventListener("contextmenu",R(this,e))},10),bl(this,P,g).call(this,pl.offsetX,pl.offsetY),this.addToAnnotationStorage(),this.setInBackground()},Ul=new WeakSet,ll=function(){this.canvas=document.createElement("canvas"),this.canvas.width=this.canvas.height=0,this.canvas.className="inkEditorCanvas",_l._l10nPromise.get("editor_ink_canvas_aria_label").then(pl=>{var jl;return(jl=this.canvas)===null||jl===void 0?void 0:jl.setAttribute("aria-label",pl)}),this.div.append(this.canvas),this.ctx=this.canvas.getContext("2d")},V=new WeakSet,O=function(){hl(this,Q,new ResizeObserver(pl=>{const jl=pl[0].contentRect;jl.width&&jl.height&&this.setDimensions(jl.width,jl.height)})),R(this,Q).observe(this.div)},A=new WeakSet,_=function(){if(!R(this,v))return;const[pl,jl]=this.parentDimensions;this.canvas.width=Math.ceil(this.width*pl),this.canvas.height=Math.ceil(this.height*jl),bl(this,Yl,Vl).call(this)},dl=new WeakSet,Ml=function(pl,jl){const Ol=bl(this,Hl,ZZ).call(this),Kl=(pl-Ol)/R(this,M),Fl=(jl-Ol)/R(this,u);this.scaleFactor=Math.min(Kl,Fl)},Yl=new WeakSet,Vl=function(){const pl=bl(this,Hl,ZZ).call(this)/2;this.ctx.setTransform(this.scaleFactor,0,0,this.scaleFactor,this.translationX*this.scaleFactor+pl,this.translationY*this.scaleFactor+pl)},Ll=new WeakSet,ol=function(pl){const jl=new Path2D;for(let Ol=0,Kl=pl.length;Ol<Kl;Ol++){const[Fl,rl,Bl,fl]=pl[Ol];Ol===0&&jl.moveTo(...Fl),jl.bezierCurveTo(rl[0],rl[1],Bl[0],Bl[1],fl[0],fl[1])}return jl},zl=new WeakSet,Il=function(pl,jl,Ol,Kl){const Fl=[],rl=this.thickness/2;let Bl,fl;for(const tZ of this.paths){Bl=[],fl=[];for(let ql=0,bZ=tZ.length;ql<bZ;ql++){const[$l,cZ,sZ,GZ]=tZ[ql],mZ=pl*($l[0]+jl)+rl,WZ=Kl-pl*($l[1]+Ol)-rl,NZ=pl*(cZ[0]+jl)+rl,aZ=Kl-pl*(cZ[1]+Ol)-rl,YZ=pl*(sZ[0]+jl)+rl,XZ=Kl-pl*(sZ[1]+Ol)-rl,eZ=pl*(GZ[0]+jl)+rl,yZ=Kl-pl*(GZ[1]+Ol)-rl;ql===0&&(Bl.push(mZ,WZ),fl.push(mZ,WZ)),Bl.push(NZ,aZ,YZ,XZ,eZ,yZ),bl(this,Sl,Jl).call(this,mZ,WZ,NZ,aZ,YZ,XZ,eZ,yZ,4,fl)}Fl.push({bezier:Bl,points:fl})}return Fl},Sl=new WeakSet,Jl=function(pl,jl,Ol,Kl,Fl,rl,Bl,fl,tZ,ql){if(bl(this,Cl,el).call(this,pl,jl,Ol,Kl,Fl,rl,Bl,fl))ql.push(Bl,fl);else{for(let bZ=1;bZ<tZ-1;bZ++){const $l=bZ/tZ,cZ=1-$l;let sZ=$l*pl+cZ*Ol,GZ=$l*jl+cZ*Kl,mZ=$l*Ol+cZ*Fl,WZ=$l*Kl+cZ*rl;sZ=$l*sZ+cZ*mZ,GZ=$l*GZ+cZ*WZ,mZ=$l*mZ+cZ*($l*Fl+cZ*Bl),WZ=$l*WZ+cZ*($l*rl+cZ*fl),sZ=$l*sZ+cZ*mZ,GZ=$l*GZ+cZ*WZ,ql.push(sZ,GZ)}ql.push(Bl,fl)}},Cl=new WeakSet,el=function(pl,jl,Ol,Kl,Fl,rl,Bl,fl){const tZ=(3*Ol-2*pl-Bl)**2,ql=(3*Kl-2*jl-fl)**2,bZ=(3*Fl-pl-2*Bl)**2,$l=(3*rl-jl-2*fl)**2;return Math.max(tZ,bZ)+Math.max(ql,$l)<=10},wl=new WeakSet,gl=function(){let pl=1/0,jl=-1/0,Ol=1/0,Kl=-1/0;for(const Fl of this.paths)for(const[rl,Bl,fl,tZ]of Fl){const ql=Al.Util.bezierBoundingBox(...rl,...Bl,...fl,...tZ);pl=Math.min(pl,ql[0]),Ol=Math.min(Ol,ql[1]),jl=Math.max(jl,ql[2]),Kl=Math.max(Kl,ql[3])}return[pl,Ol,jl,Kl]},Hl=new WeakSet,ZZ=function(){return R(this,C)?Math.ceil(this.thickness*this.parentScale):0},vl=new WeakSet,xl=function(){let pl=arguments.length>0&&arguments[0]!==void 0&&arguments[0];if(this.isEmpty())return;if(!R(this,C)){bl(this,yl,Xl).call(this);return}const jl=bl(this,wl,gl).call(this),Ol=bl(this,Hl,ZZ).call(this);hl(this,M,Math.max(lZ,jl[2]-jl[0])),hl(this,u,Math.max(lZ,jl[3]-jl[1]));const Kl=Math.ceil(Ol+R(this,M)*this.scaleFactor),Fl=Math.ceil(Ol+R(this,u)*this.scaleFactor),[rl,Bl]=this.parentDimensions;this.width=Kl/rl,this.height=Fl/Bl,hl(this,h,Kl/Fl),bl(this,Ql,Pl).call(this);const fl=this.translationX,tZ=this.translationY;this.translationX=-jl[0],this.translationY=-jl[1],bl(this,A,_).call(this),bl(this,yl,Xl).call(this),hl(this,$,Kl),hl(this,q,Fl),this.setDims(Kl,Fl);const ql=pl?Ol/this.scaleFactor/2:0;this.translate(fl-this.translationX-ql,tZ-this.translationY-ql)},Ql=new WeakSet,Pl=function(){const{style:pl}=this.div;R(this,h)>=1?(pl.minHeight="16px",pl.minWidth=`${Math.round(R(this,h)*lZ)}px`):(pl.minWidth="16px",pl.minHeight=`${Math.round(lZ/R(this,h))}px`)},Zl(iZ,Ll),kl(iZ,"_defaultColor",null),kl(iZ,"_defaultOpacity",1),kl(iZ,"_defaultThickness",1),kl(iZ,"_l10nPromise"),kl(iZ,"_type","ink"),d.InkEditor=iZ},(c,d,m)=>{var h,u,M,e,n,Y,I,T;Object.defineProperty(d,"__esModule",{value:!0}),d.AnnotationLayer=void 0;var o=m(1),C=m(142),J=m(139),v=m(166),Q=m(167);const $=1e3,q=new WeakSet;function x(ll){return{width:ll[2]-ll[0],height:ll[3]-ll[1]}}class D{static create(V){switch(V.data.annotationType){case o.AnnotationType.LINK:return new w(V);case o.AnnotationType.TEXT:return new j(V);case o.AnnotationType.WIDGET:switch(V.data.fieldType){case"Tx":return new sl(V);case"Btn":return V.data.radioButton?new B(V):V.data.checkBox?new tl(V):new cl(V);case"Ch":return new al(V)}return new f(V);case o.AnnotationType.POPUP:return new nl(V);case o.AnnotationType.FREETEXT:return new E(V);case o.AnnotationType.LINE:return new F(V);case o.AnnotationType.SQUARE:return new H(V);case o.AnnotationType.CIRCLE:return new P(V);case o.AnnotationType.POLYLINE:return new g(V);case o.AnnotationType.CARET:return new il(V);case o.AnnotationType.INK:return new ml(V);case o.AnnotationType.POLYGON:return new K(V);case o.AnnotationType.HIGHLIGHT:return new Gl(V);case o.AnnotationType.UNDERLINE:return new ul(V);case o.AnnotationType.SQUIGGLY:return new Nl(V);case o.AnnotationType.STRIKEOUT:return new yl(V);case o.AnnotationType.STAMP:return new Xl(V);case o.AnnotationType.FILEATTACHMENT:return new Wl(V);default:return new r(V)}}}class r{constructor(V){let{isRenderable:O=!1,ignoreBorder:A=!1,createQuadrilaterals:_=!1}=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};this.isRenderable=O,this.data=V.data,this.layer=V.layer,this.page=V.page,this.viewport=V.viewport,this.linkService=V.linkService,this.downloadManager=V.downloadManager,this.imageResourcesPath=V.imageResourcesPath,this.renderForms=V.renderForms,this.svgFactory=V.svgFactory,this.annotationStorage=V.annotationStorage,this.enableScripting=V.enableScripting,this.hasJSActions=V.hasJSActions,this._fieldObjects=V.fieldObjects,O&&(this.container=this._createContainer(A)),_&&(this.quadrilaterals=this._createQuadrilaterals(A))}_createContainer(){let V=arguments.length>0&&arguments[0]!==void 0&&arguments[0];const{data:O,page:A,viewport:_}=this,dl=document.createElement("section");dl.setAttribute("data-annotation-id",O.id),O.noRotate&&dl.classList.add("norotate");const{pageWidth:Ml,pageHeight:Yl,pageX:Vl,pageY:Ll}=_.rawDims,{width:ol,height:zl}=x(O.rect),Il=o.Util.normalizeRect([O.rect[0],A.view[3]-O.rect[1]+A.view[1],O.rect[2],A.view[3]-O.rect[3]+A.view[1]]);if(!V&&O.borderStyle.width>0){dl.style.borderWidth=`${O.borderStyle.width}px`;const Jl=O.borderStyle.horizontalCornerRadius,Cl=O.borderStyle.verticalCornerRadius;if(Jl>0||Cl>0){const wl=`calc(${Jl}px * var(--scale-factor)) / calc(${Cl}px * var(--scale-factor))`;dl.style.borderRadius=wl}else if(this instanceof B){const wl=`calc(${ol}px * var(--scale-factor)) / calc(${zl}px * var(--scale-factor))`;dl.style.borderRadius=wl}switch(O.borderStyle.style){case o.AnnotationBorderStyleType.SOLID:dl.style.borderStyle="solid";break;case o.AnnotationBorderStyleType.DASHED:dl.style.borderStyle="dashed";break;case o.AnnotationBorderStyleType.BEVELED:(0,o.warn)("Unimplemented border style: beveled");break;case o.AnnotationBorderStyleType.INSET:(0,o.warn)("Unimplemented border style: inset");break;case o.AnnotationBorderStyleType.UNDERLINE:dl.style.borderBottomStyle="solid"}const el=O.borderColor||null;el?dl.style.borderColor=o.Util.makeHexColor(0|el[0],0|el[1],0|el[2]):dl.style.borderWidth=0}dl.style.left=100*(Il[0]-Vl)/Ml+"%",dl.style.top=100*(Il[1]-Ll)/Yl+"%";const{rotation:Sl}=O;return O.hasOwnCanvas||Sl===0?(dl.style.width=100*ol/Ml+"%",dl.style.height=100*zl/Yl+"%"):this.setRotation(Sl,dl),dl}setRotation(V){let O=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.container;const{pageWidth:A,pageHeight:_}=this.viewport.rawDims,{width:dl,height:Ml}=x(this.data.rect);let Yl,Vl;V%180==0?(Yl=100*dl/A,Vl=100*Ml/_):(Yl=100*Ml/A,Vl=100*dl/_),O.style.width=`${Yl}%`,O.style.height=`${Vl}%`,O.setAttribute("data-main-rotation",(360-V)%360)}get _commonActions(){const V=(O,A,_)=>{const dl=_.detail[O];_.target.style[A]=v.ColorConverters[`${dl[0]}_HTML`](dl.slice(1))};return(0,o.shadow)(this,"_commonActions",{display:O=>{const A=O.detail.display%2==1;this.container.style.visibility=A?"hidden":"visible",this.annotationStorage.setValue(this.data.id,{hidden:A,print:O.detail.display===0||O.detail.display===3})},print:O=>{this.annotationStorage.setValue(this.data.id,{print:O.detail.print})},hidden:O=>{this.container.style.visibility=O.detail.hidden?"hidden":"visible",this.annotationStorage.setValue(this.data.id,{hidden:O.detail.hidden})},focus:O=>{setTimeout(()=>O.target.focus({preventScroll:!1}),0)},userName:O=>{O.target.title=O.detail.userName},readonly:O=>{O.detail.readonly?O.target.setAttribute("readonly",""):O.target.removeAttribute("readonly")},required:O=>{this._setRequired(O.target,O.detail.required)},bgColor:O=>{V("bgColor","backgroundColor",O)},fillColor:O=>{V("fillColor","backgroundColor",O)},fgColor:O=>{V("fgColor","color",O)},textColor:O=>{V("textColor","color",O)},borderColor:O=>{V("borderColor","borderColor",O)},strokeColor:O=>{V("strokeColor","borderColor",O)},rotation:O=>{const A=O.detail.rotation;this.setRotation(A),this.annotationStorage.setValue(this.data.id,{rotation:A})}})}_dispatchEventFromSandbox(V,O){const A=this._commonActions;for(const _ of Object.keys(O.detail)){const dl=V[_]||A[_];dl==null||dl(O)}}_setDefaultPropertiesFromJS(V){if(!this.enableScripting)return;const O=this.annotationStorage.getRawValue(this.data.id);if(!O)return;const A=this._commonActions;for(const[_,dl]of Object.entries(O)){const Ml=A[_];Ml&&(Ml({detail:{[_]:dl},target:V}),delete O[_])}}_createQuadrilaterals(){let V=arguments.length>0&&arguments[0]!==void 0&&arguments[0];if(!this.data.quadPoints)return null;const O=[],A=this.data.rect;for(const _ of this.data.quadPoints)this.data.rect=[_[2].x,_[2].y,_[1].x,_[1].y],O.push(this._createContainer(V));return this.data.rect=A,O}_createPopup(V,O){let A=this.container;this.quadrilaterals&&(V||(V=this.quadrilaterals),A=this.quadrilaterals[0]),V||((V=document.createElement("div")).classList.add("popupTriggerArea"),A.append(V));const _=new Rl({container:A,trigger:V,color:O.color,titleObj:O.titleObj,modificationDate:O.modificationDate,contentsObj:O.contentsObj,richText:O.richText,hideWrapper:!0}).render();_.style.left="100%",A.append(_)}_renderQuadrilaterals(V){for(const O of this.quadrilaterals)O.classList.add(V);return this.quadrilaterals}render(){(0,o.unreachable)("Abstract method `AnnotationElement.render` called")}_getElementsByName(V){let O=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;const A=[];if(this._fieldObjects){const _=this._fieldObjects[V];if(_)for(const{page:dl,id:Ml,exportValues:Yl}of _){if(dl===-1||Ml===O)continue;const Vl=typeof Yl=="string"?Yl:null,Ll=document.querySelector(`[data-element-id="${Ml}"]`);!Ll||q.has(Ll)?A.push({id:Ml,exportValue:Vl,domElement:Ll}):(0,o.warn)(`_getElementsByName - element not allowed: ${Ml}`)}return A}for(const _ of document.getElementsByName(V)){const{exportValue:dl}=_,Ml=_.getAttribute("data-element-id");Ml!==O&&q.has(_)&&A.push({id:Ml,exportValue:dl,domElement:_})}return A}}class w extends r{constructor(V){let O=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;super(V,{isRenderable:!0,ignoreBorder:!(O==null||!O.ignoreBorder),createQuadrilaterals:!0}),Zl(this,h),Zl(this,M),this.isTooltipOnly=V.data.isTooltipOnly}render(){const{data:V,linkService:O}=this,A=document.createElement("a");A.setAttribute("data-element-id",V.id);let _=!1;return V.url?(O.addLinkAttributes(A,V.url,V.newWindow),_=!0):V.action?(this._bindNamedAction(A,V.action),_=!0):V.attachment?(this._bindAttachment(A,V.attachment),_=!0):V.setOCGState?(bl(this,M,e).call(this,A,V.setOCGState),_=!0):V.dest?(this._bindLink(A,V.dest),_=!0):(V.actions&&(V.actions.Action||V.actions["Mouse Up"]||V.actions["Mouse Down"])&&this.enableScripting&&this.hasJSActions&&(this._bindJSAction(A,V),_=!0),V.resetForm?(this._bindResetFormAction(A,V.resetForm),_=!0):this.isTooltipOnly&&!_&&(this._bindLink(A,""),_=!0)),this.quadrilaterals?this._renderQuadrilaterals("linkAnnotation").map((dl,Ml)=>{const Yl=Ml===0?A:A.cloneNode();return dl.append(Yl),dl}):(this.container.classList.add("linkAnnotation"),_&&this.container.append(A),this.container)}_bindLink(V,O){V.href=this.linkService.getDestinationHash(O),V.onclick=()=>(O&&this.linkService.goToDestination(O),!1),(O||O==="")&&bl(this,h,u).call(this)}_bindNamedAction(V,O){V.href=this.linkService.getAnchorUrl(""),V.onclick=()=>(this.linkService.executeNamedAction(O),!1),bl(this,h,u).call(this)}_bindAttachment(V,O){V.href=this.linkService.getAnchorUrl(""),V.onclick=()=>{var A;return(A=this.downloadManager)===null||A===void 0||A.openOrDownloadData(this.container,O.content,O.filename),!1},bl(this,h,u).call(this)}_bindJSAction(V,O){V.href=this.linkService.getAnchorUrl("");const A=new Map([["Action","onclick"],["Mouse Up","onmouseup"],["Mouse Down","onmousedown"]]);for(const _ of Object.keys(O.actions)){const dl=A.get(_);dl&&(V[dl]=()=>{var Ml;return(Ml=this.linkService.eventBus)===null||Ml===void 0||Ml.dispatch("dispatcheventinsandbox",{source:this,detail:{id:O.id,name:_}}),!1})}V.onclick||(V.onclick=()=>!1),bl(this,h,u).call(this)}_bindResetFormAction(V,O){const A=V.onclick;A||(V.href=this.linkService.getAnchorUrl("")),bl(this,h,u).call(this),this._fieldObjects?V.onclick=()=>{A==null||A();const{fields:_,refs:dl,include:Ml}=O,Yl=[];if(_.length!==0||dl.length!==0){const zl=new Set(dl);for(const Il of _){const Sl=this._fieldObjects[Il]||[];for(const{id:Jl}of Sl)zl.add(Jl)}for(const Il of Object.values(this._fieldObjects))for(const Sl of Il)zl.has(Sl.id)===Ml&&Yl.push(Sl)}else for(const zl of Object.values(this._fieldObjects))Yl.push(...zl);const Vl=this.annotationStorage,Ll=[];for(const zl of Yl){const{id:Il}=zl;switch(Ll.push(Il),zl.type){case"text":{const Jl=zl.defaultValue||"";Vl.setValue(Il,{value:Jl});break}case"checkbox":case"radiobutton":{const Jl=zl.defaultValue===zl.exportValues;Vl.setValue(Il,{value:Jl});break}case"combobox":case"listbox":{const Jl=zl.defaultValue||"";Vl.setValue(Il,{value:Jl});break}default:continue}const Sl=document.querySelector(`[data-element-id="${Il}"]`);Sl&&(q.has(Sl)?Sl.dispatchEvent(new Event("resetform")):(0,o.warn)(`_bindResetFormAction - element not allowed: ${Il}`))}if(this.enableScripting){var ol;(ol=this.linkService.eventBus)===null||ol===void 0||ol.dispatch("dispatcheventinsandbox",{source:this,detail:{id:"app",ids:Ll,name:"ResetForm"}})}return!1}:((0,o.warn)('_bindResetFormAction - "resetForm" action not supported, ensure that the `fieldObjects` parameter is provided.'),A||(V.onclick=()=>!1))}}h=new WeakSet,u=function(){this.container.setAttribute("data-internal-link","")},M=new WeakSet,e=function(ll,V){ll.href=this.linkService.getAnchorUrl(""),ll.onclick=()=>(this.linkService.executeSetOCGState(V),!1),bl(this,h,u).call(this)};class j extends r{constructor(V){var O,A,_;super(V,{isRenderable:!!(V.data.hasPopup||(O=V.data.titleObj)!==null&&O!==void 0&&O.str||(A=V.data.contentsObj)!==null&&A!==void 0&&A.str||(_=V.data.richText)!==null&&_!==void 0&&_.str)})}render(){this.container.classList.add("textAnnotation");const V=document.createElement("img");return V.src=this.imageResourcesPath+"annotation-"+this.data.name.toLowerCase()+".svg",V.alt="[{{type}} Annotation]",V.dataset.l10nId="text_annotation_type",V.dataset.l10nArgs=JSON.stringify({type:this.data.name}),this.data.hasPopup||this._createPopup(V,this.data),this.container.append(V),this.container}}class f extends r{render(){return this.data.alternativeText&&(this.container.title=this.data.alternativeText),this.container}showElementAndHideCanvas(V){if(this.data.hasOwnCanvas){var O;((O=V.previousSibling)===null||O===void 0?void 0:O.nodeName)==="CANVAS"&&(V.previousSibling.hidden=!0),V.hidden=!1}}_getKeyModifier(V){const{isWin:O,isMac:A}=o.FeatureTest.platform;return O&&V.ctrlKey||A&&V.metaKey}_setEventListener(V,O,A,_){O.includes("mouse")?V.addEventListener(O,dl=>{var Ml;(Ml=this.linkService.eventBus)===null||Ml===void 0||Ml.dispatch("dispatcheventinsandbox",{source:this,detail:{id:this.data.id,name:A,value:_(dl),shift:dl.shiftKey,modifier:this._getKeyModifier(dl)}})}):V.addEventListener(O,dl=>{var Ml;(Ml=this.linkService.eventBus)===null||Ml===void 0||Ml.dispatch("dispatcheventinsandbox",{source:this,detail:{id:this.data.id,name:A,value:_(dl)}})})}_setEventListeners(V,O,A){for(const[dl,Ml]of O){var _;(Ml==="Action"||(_=this.data.actions)!==null&&_!==void 0&&_[Ml])&&this._setEventListener(V,dl,Ml,A)}}_setBackgroundColor(V){const O=this.data.backgroundColor||null;V.style.backgroundColor=O===null?"transparent":o.Util.makeHexColor(O[0],O[1],O[2])}_setTextStyle(V){const O=["left","center","right"],{fontColor:A}=this.data.defaultAppearanceData,_=this.data.defaultAppearanceData.fontSize||9,dl=V.style;let Ml;const Yl=Vl=>Math.round(10*Vl)/10;if(this.data.multiLine){const Vl=Math.abs(this.data.rect[3]-this.data.rect[1]-2),Ll=Vl/(Math.round(Vl/(o.LINE_FACTOR*_))||1);Ml=Math.min(_,Yl(Ll/o.LINE_FACTOR))}else{const Vl=Math.abs(this.data.rect[3]-this.data.rect[1]-2);Ml=Math.min(_,Yl(Vl/o.LINE_FACTOR))}dl.fontSize=`calc(${Ml}px * var(--scale-factor))`,dl.color=o.Util.makeHexColor(A[0],A[1],A[2]),this.data.textAlignment!==null&&(dl.textAlign=O[this.data.textAlignment])}_setRequired(V,O){O?V.setAttribute("required",!0):V.removeAttribute("required"),V.setAttribute("aria-required",O)}}class sl extends f{constructor(V){super(V,{isRenderable:V.renderForms||!V.data.hasAppearance&&!!V.data.fieldValue})}setPropertyOnSiblings(V,O,A,_){const dl=this.annotationStorage;for(const Ml of this._getElementsByName(V.name,V.id))Ml.domElement&&(Ml.domElement[O]=A),dl.setValue(Ml.id,{[_]:A})}render(){const V=this.annotationStorage,O=this.data.id;this.container.classList.add("textWidgetAnnotation");let A=null;if(this.renderForms){var _;const Ml=V.getValue(O,{value:this.data.fieldValue});let Yl=Ml.value||"";const Vl=V.getValue(O,{charLimit:this.data.maxLen}).charLimit;Vl&&Yl.length>Vl&&(Yl=Yl.slice(0,Vl));let Ll=Ml.formattedValue||((_=this.data.textContent)===null||_===void 0?void 0:_.join(`
`))||null;Ll&&this.data.comb&&(Ll=Ll.replaceAll(/\s+/g,""));const ol={userValue:Yl,formattedValue:Ll,lastCommittedValue:null,commitKey:1};this.data.multiLine?(A=document.createElement("textarea"),A.textContent=Ll??Yl,this.data.doNotScroll&&(A.style.overflowY="hidden")):(A=document.createElement("input"),A.type="text",A.setAttribute("value",Ll??Yl),this.data.doNotScroll&&(A.style.overflowX="hidden")),this.data.hasOwnCanvas&&(A.hidden=!0),q.add(A),A.setAttribute("data-element-id",O),A.disabled=this.data.readOnly,A.name=this.data.fieldName,A.tabIndex=$,this._setRequired(A,this.data.required),Vl&&(A.maxLength=Vl),A.addEventListener("input",Il=>{V.setValue(O,{value:Il.target.value}),this.setPropertyOnSiblings(A,"value",Il.target.value,"value"),ol.formattedValue=null}),A.addEventListener("resetform",Il=>{const Sl=this.data.defaultFieldValue??"";A.value=ol.userValue=Sl,ol.formattedValue=null});let zl=Il=>{const{formattedValue:Sl}=ol;Sl!=null&&(Il.target.value=Sl),Il.target.scrollLeft=0};if(this.enableScripting&&this.hasJSActions){var dl;A.addEventListener("focus",Sl=>{const{target:Jl}=Sl;ol.userValue&&(Jl.value=ol.userValue),ol.lastCommittedValue=Jl.value,ol.commitKey=1}),A.addEventListener("updatefromsandbox",Sl=>{this.showElementAndHideCanvas(Sl.target);const Jl={value(Cl){ol.userValue=Cl.detail.value??"",V.setValue(O,{value:ol.userValue.toString()}),Cl.target.value=ol.userValue},formattedValue(Cl){const{formattedValue:el}=Cl.detail;ol.formattedValue=el,el!=null&&Cl.target!==document.activeElement&&(Cl.target.value=el),V.setValue(O,{formattedValue:el})},selRange(Cl){Cl.target.setSelectionRange(...Cl.detail.selRange)},charLimit:Cl=>{var el;const{charLimit:wl}=Cl.detail,{target:gl}=Cl;if(wl===0){gl.removeAttribute("maxLength");return}gl.setAttribute("maxLength",wl);let Hl=ol.userValue;Hl&&!(Hl.length<=wl)&&(Hl=Hl.slice(0,wl),gl.value=ol.userValue=Hl,V.setValue(O,{value:Hl}),(el=this.linkService.eventBus)===null||el===void 0||el.dispatch("dispatcheventinsandbox",{source:this,detail:{id:O,name:"Keystroke",value:Hl,willCommit:!0,commitKey:1,selStart:gl.selectionStart,selEnd:gl.selectionEnd}}))}};this._dispatchEventFromSandbox(Jl,Sl)}),A.addEventListener("keydown",Sl=>{var Jl;ol.commitKey=1;let Cl=-1;if(Sl.key==="Escape"?Cl=0:Sl.key!=="Enter"||this.data.multiLine?Sl.key==="Tab"&&(ol.commitKey=3):Cl=2,Cl===-1)return;const{value:el}=Sl.target;ol.lastCommittedValue!==el&&(ol.lastCommittedValue=el,ol.userValue=el,(Jl=this.linkService.eventBus)===null||Jl===void 0||Jl.dispatch("dispatcheventinsandbox",{source:this,detail:{id:O,name:"Keystroke",value:el,willCommit:!0,commitKey:Cl,selStart:Sl.target.selectionStart,selEnd:Sl.target.selectionEnd}}))});const Il=zl;zl=null,A.addEventListener("blur",Sl=>{if(!Sl.relatedTarget)return;const{value:Jl}=Sl.target;if(ol.userValue=Jl,ol.lastCommittedValue!==Jl){var Cl;(Cl=this.linkService.eventBus)===null||Cl===void 0||Cl.dispatch("dispatcheventinsandbox",{source:this,detail:{id:O,name:"Keystroke",value:Jl,willCommit:!0,commitKey:ol.commitKey,selStart:Sl.target.selectionStart,selEnd:Sl.target.selectionEnd}})}Il(Sl)}),(dl=this.data.actions)!==null&&dl!==void 0&&dl.Keystroke&&A.addEventListener("beforeinput",Sl=>{var Jl;ol.lastCommittedValue=null;const{data:Cl,target:el}=Sl,{value:wl,selectionStart:gl,selectionEnd:Hl}=el;let ZZ=gl,vl=Hl;switch(Sl.inputType){case"deleteWordBackward":{const xl=wl.substring(0,gl).match(/\w*[^\w]*$/);xl&&(ZZ-=xl[0].length);break}case"deleteWordForward":{const xl=wl.substring(gl).match(/^[^\w]*\w*/);xl&&(vl+=xl[0].length);break}case"deleteContentBackward":gl===Hl&&(ZZ-=1);break;case"deleteContentForward":gl===Hl&&(vl+=1)}Sl.preventDefault(),(Jl=this.linkService.eventBus)===null||Jl===void 0||Jl.dispatch("dispatcheventinsandbox",{source:this,detail:{id:O,name:"Keystroke",value:wl,change:Cl||"",willCommit:!1,selStart:ZZ,selEnd:vl}})}),this._setEventListeners(A,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],Sl=>Sl.target.value)}if(zl&&A.addEventListener("blur",zl),this.data.comb){const Il=(this.data.rect[2]-this.data.rect[0])/Vl;A.classList.add("comb"),A.style.letterSpacing=`calc(${Il}px * var(--scale-factor) - 1ch)`}}else A=document.createElement("div"),A.textContent=this.data.fieldValue,A.style.verticalAlign="middle",A.style.display="table-cell";return this._setTextStyle(A),this._setBackgroundColor(A),this._setDefaultPropertiesFromJS(A),this.container.append(A),this.container}}class tl extends f{constructor(V){super(V,{isRenderable:V.renderForms})}render(){const V=this.annotationStorage,O=this.data,A=O.id;let _=V.getValue(A,{value:O.exportValue===O.fieldValue}).value;typeof _=="string"&&(_=_!=="Off",V.setValue(A,{value:_})),this.container.classList.add("buttonWidgetAnnotation","checkBox");const dl=document.createElement("input");return q.add(dl),dl.setAttribute("data-element-id",A),dl.disabled=O.readOnly,this._setRequired(dl,this.data.required),dl.type="checkbox",dl.name=O.fieldName,_&&dl.setAttribute("checked",!0),dl.setAttribute("exportValue",O.exportValue),dl.tabIndex=$,dl.addEventListener("change",Ml=>{const{name:Yl,checked:Vl}=Ml.target;for(const Ll of this._getElementsByName(Yl,A)){const ol=Vl&&Ll.exportValue===O.exportValue;Ll.domElement&&(Ll.domElement.checked=ol),V.setValue(Ll.id,{value:ol})}V.setValue(A,{value:Vl})}),dl.addEventListener("resetform",Ml=>{const Yl=O.defaultFieldValue||"Off";Ml.target.checked=Yl===O.exportValue}),this.enableScripting&&this.hasJSActions&&(dl.addEventListener("updatefromsandbox",Ml=>{const Yl={value(Vl){Vl.target.checked=Vl.detail.value!=="Off",V.setValue(A,{value:Vl.target.checked})}};this._dispatchEventFromSandbox(Yl,Ml)}),this._setEventListeners(dl,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],Ml=>Ml.target.checked)),this._setBackgroundColor(dl),this._setDefaultPropertiesFromJS(dl),this.container.append(dl),this.container}}class B extends f{constructor(V){super(V,{isRenderable:V.renderForms})}render(){this.container.classList.add("buttonWidgetAnnotation","radioButton");const V=this.annotationStorage,O=this.data,A=O.id;let _=V.getValue(A,{value:O.fieldValue===O.buttonValue}).value;typeof _=="string"&&(_=_!==O.buttonValue,V.setValue(A,{value:_}));const dl=document.createElement("input");if(q.add(dl),dl.setAttribute("data-element-id",A),dl.disabled=O.readOnly,this._setRequired(dl,this.data.required),dl.type="radio",dl.name=O.fieldName,_&&dl.setAttribute("checked",!0),dl.tabIndex=$,dl.addEventListener("change",Ml=>{const{name:Yl,checked:Vl}=Ml.target;for(const Ll of this._getElementsByName(Yl,A))V.setValue(Ll.id,{value:!1});V.setValue(A,{value:Vl})}),dl.addEventListener("resetform",Ml=>{const Yl=O.defaultFieldValue;Ml.target.checked=Yl!=null&&Yl===O.buttonValue}),this.enableScripting&&this.hasJSActions){const Ml=O.buttonValue;dl.addEventListener("updatefromsandbox",Yl=>{const Vl={value:Ll=>{const ol=Ml===Ll.detail.value;for(const zl of this._getElementsByName(Ll.target.name)){const Il=ol&&zl.id===A;zl.domElement&&(zl.domElement.checked=Il),V.setValue(zl.id,{value:Il})}}};this._dispatchEventFromSandbox(Vl,Yl)}),this._setEventListeners(dl,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],Yl=>Yl.target.checked)}return this._setBackgroundColor(dl),this._setDefaultPropertiesFromJS(dl),this.container.append(dl),this.container}}class cl extends w{constructor(V){super(V,{ignoreBorder:V.data.hasAppearance})}render(){const V=super.render();V.classList.add("buttonWidgetAnnotation","pushButton"),this.data.alternativeText&&(V.title=this.data.alternativeText);const O=V.lastChild;return this.enableScripting&&this.hasJSActions&&O&&(this._setDefaultPropertiesFromJS(O),O.addEventListener("updatefromsandbox",A=>{this._dispatchEventFromSandbox({},A)})),V}}class al extends f{constructor(V){super(V,{isRenderable:V.renderForms})}render(){this.container.classList.add("choiceWidgetAnnotation");const V=this.annotationStorage,O=this.data.id,A=V.getValue(O,{value:this.data.fieldValue}),_=document.createElement("select");q.add(_),_.setAttribute("data-element-id",O),_.disabled=this.data.readOnly,this._setRequired(_,this.data.required),_.name=this.data.fieldName,_.tabIndex=$;let dl=this.data.combo&&this.data.options.length>0;this.data.combo||(_.size=this.data.options.length,this.data.multiSelect&&(_.multiple=!0)),_.addEventListener("resetform",ol=>{const zl=this.data.defaultFieldValue;for(const Il of _.options)Il.selected=Il.value===zl});for(const ol of this.data.options){const zl=document.createElement("option");zl.textContent=ol.displayValue,zl.value=ol.exportValue,A.value.includes(ol.exportValue)&&(zl.setAttribute("selected",!0),dl=!1),_.append(zl)}let Ml=null;if(dl){const ol=document.createElement("option");ol.value=" ",ol.setAttribute("hidden",!0),ol.setAttribute("selected",!0),_.prepend(ol),Ml=()=>{ol.remove(),_.removeEventListener("input",Ml),Ml=null},_.addEventListener("input",Ml)}const Yl=ol=>{const zl=ol?"value":"textContent",{options:Il,multiple:Sl}=_;return Sl?Array.prototype.filter.call(Il,Jl=>Jl.selected).map(Jl=>Jl[zl]):Il.selectedIndex===-1?null:Il[Il.selectedIndex][zl]};let Vl=Yl(!1);const Ll=ol=>{const zl=ol.target.options;return Array.prototype.map.call(zl,Il=>({displayValue:Il.textContent,exportValue:Il.value}))};return this.enableScripting&&this.hasJSActions?(_.addEventListener("updatefromsandbox",ol=>{const zl={value(Il){var Sl;(Sl=Ml)===null||Sl===void 0||Sl();const Jl=Il.detail.value,Cl=new Set(Array.isArray(Jl)?Jl:[Jl]);for(const el of _.options)el.selected=Cl.has(el.value);V.setValue(O,{value:Yl(!0)}),Vl=Yl(!1)},multipleSelection(Il){_.multiple=!0},remove(Il){const Sl=_.options,Jl=Il.detail.remove;Sl[Jl].selected=!1,_.remove(Jl),Sl.length>0&&Array.prototype.findIndex.call(Sl,Cl=>Cl.selected)===-1&&(Sl[0].selected=!0),V.setValue(O,{value:Yl(!0),items:Ll(Il)}),Vl=Yl(!1)},clear(Il){for(;_.length!==0;)_.remove(0);V.setValue(O,{value:null,items:[]}),Vl=Yl(!1)},insert(Il){const{index:Sl,displayValue:Jl,exportValue:Cl}=Il.detail.insert,el=_.children[Sl],wl=document.createElement("option");wl.textContent=Jl,wl.value=Cl,el?el.before(wl):_.append(wl),V.setValue(O,{value:Yl(!0),items:Ll(Il)}),Vl=Yl(!1)},items(Il){const{items:Sl}=Il.detail;for(;_.length!==0;)_.remove(0);for(const Jl of Sl){const{displayValue:Cl,exportValue:el}=Jl,wl=document.createElement("option");wl.textContent=Cl,wl.value=el,_.append(wl)}_.options.length>0&&(_.options[0].selected=!0),V.setValue(O,{value:Yl(!0),items:Ll(Il)}),Vl=Yl(!1)},indices(Il){const Sl=new Set(Il.detail.indices);for(const Jl of Il.target.options)Jl.selected=Sl.has(Jl.index);V.setValue(O,{value:Yl(!0)}),Vl=Yl(!1)},editable(Il){Il.target.disabled=!Il.detail.editable}};this._dispatchEventFromSandbox(zl,ol)}),_.addEventListener("input",ol=>{var zl;const Il=Yl(!0);V.setValue(O,{value:Il}),ol.preventDefault(),(zl=this.linkService.eventBus)===null||zl===void 0||zl.dispatch("dispatcheventinsandbox",{source:this,detail:{id:O,name:"Keystroke",value:Vl,changeEx:Il,willCommit:!1,commitKey:1,keyDown:!1}})}),this._setEventListeners(_,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"],["input","Action"],["input","Validate"]],ol=>ol.target.value)):_.addEventListener("input",function(ol){V.setValue(O,{value:Yl(!0)})}),this.data.combo&&this._setTextStyle(_),this._setBackgroundColor(_),this._setDefaultPropertiesFromJS(_),this.container.append(_),this.container}}const Tl=class extends r{constructor(ll){var V,O,A;const{data:_}=ll;super(ll,{isRenderable:!Tl.IGNORE_TYPES.has(_.parentType)&&!!((V=_.titleObj)!==null&&V!==void 0&&V.str||(O=_.contentsObj)!==null&&O!==void 0&&O.str||(A=_.richText)!==null&&A!==void 0&&A.str)})}render(){this.container.classList.add("popupAnnotation");const ll=this.layer.querySelectorAll(`[data-annotation-id="${this.data.parentId}"]`);if(ll.length===0)return this.container;const V=new Rl({container:this.container,trigger:Array.from(ll),color:this.data.color,titleObj:this.data.titleObj,modificationDate:this.data.modificationDate,contentsObj:this.data.contentsObj,richText:this.data.richText}),O=this.page,A=o.Util.normalizeRect([this.data.parentRect[0],O.view[3]-this.data.parentRect[1]+O.view[1],this.data.parentRect[2],O.view[3]-this.data.parentRect[3]+O.view[1]]),_=A[0]+this.data.parentRect[2]-this.data.parentRect[0],dl=A[1],{pageWidth:Ml,pageHeight:Yl,pageX:Vl,pageY:Ll}=this.viewport.rawDims;return this.container.style.left=100*(_-Vl)/Ml+"%",this.container.style.top=100*(dl-Ll)/Yl+"%",this.container.append(V.render()),this.container}};let nl=Tl;kl(nl,"IGNORE_TYPES",new Set(["Line","Square","Circle","PolyLine","Polygon","Ink"]));class Rl{constructor(V){this.container=V.container,this.trigger=V.trigger,this.color=V.color,this.titleObj=V.titleObj,this.modificationDate=V.modificationDate,this.contentsObj=V.contentsObj,this.richText=V.richText,this.hideWrapper=V.hideWrapper||!1,this.pinned=!1}render(){var V,O;const A=document.createElement("div");A.classList.add("popupWrapper"),this.hideElement=this.hideWrapper?A:this.container,this.hideElement.hidden=!0;const _=document.createElement("div");_.classList.add("popup");const dl=this.color;if(dl){const Vl=.7*(255-dl[0])+dl[0],Ll=.7*(255-dl[1])+dl[1],ol=.7*(255-dl[2])+dl[2];_.style.backgroundColor=o.Util.makeHexColor(0|Vl,0|Ll,0|ol)}const Ml=document.createElement("h1");Ml.dir=this.titleObj.dir,Ml.textContent=this.titleObj.str,_.append(Ml);const Yl=C.PDFDateString.toDateObject(this.modificationDate);if(Yl){const Vl=document.createElement("span");Vl.classList.add("popupDate"),Vl.textContent="{{date}}, {{time}}",Vl.dataset.l10nId="annotation_date_string",Vl.dataset.l10nArgs=JSON.stringify({date:Yl.toLocaleDateString(),time:Yl.toLocaleTimeString()}),_.append(Vl)}if((V=this.richText)===null||V===void 0||!V.str||(O=this.contentsObj)!==null&&O!==void 0&&O.str&&this.contentsObj.str!==this.richText.str){const Vl=this._formatContents(this.contentsObj);_.append(Vl)}else Q.XfaLayer.render({xfaHtml:this.richText.html,intent:"richText",div:_}),_.lastChild.classList.add("richText","popupContent");Array.isArray(this.trigger)||(this.trigger=[this.trigger]);for(const Vl of this.trigger)Vl.addEventListener("click",this._toggle.bind(this)),Vl.addEventListener("mouseover",this._show.bind(this,!1)),Vl.addEventListener("mouseout",this._hide.bind(this,!1));return _.addEventListener("click",this._hide.bind(this,!0)),A.append(_),A}_formatContents(V){let{str:O,dir:A}=V;const _=document.createElement("p");_.classList.add("popupContent"),_.dir=A;const dl=O.split(/(?:\r\n?|\n)/);for(let Ml=0,Yl=dl.length;Ml<Yl;++Ml){const Vl=dl[Ml];_.append(document.createTextNode(Vl)),Ml<Yl-1&&_.append(document.createElement("br"))}return _}_toggle(){this.pinned?this._hide(!0):this._show(!0)}_show(){arguments.length>0&&arguments[0]!==void 0&&arguments[0]&&(this.pinned=!0),this.hideElement.hidden&&(this.hideElement.hidden=!1,this.container.style.zIndex=parseInt(this.container.style.zIndex)+1e3)}_hide(){(!(arguments.length>0&&arguments[0]!==void 0)||arguments[0])&&(this.pinned=!1),!this.hideElement.hidden&&!this.pinned&&(this.hideElement.hidden=!0,this.container.style.zIndex=parseInt(this.container.style.zIndex)-1e3)}}class E extends r{constructor(V){var O,A,_;super(V,{isRenderable:!!(V.data.hasPopup||(O=V.data.titleObj)!==null&&O!==void 0&&O.str||(A=V.data.contentsObj)!==null&&A!==void 0&&A.str||(_=V.data.richText)!==null&&_!==void 0&&_.str),ignoreBorder:!0}),this.textContent=V.data.textContent}render(){if(this.container.classList.add("freeTextAnnotation"),this.textContent){const V=document.createElement("div");V.classList.add("annotationTextContent"),V.setAttribute("role","comment");for(const O of this.textContent){const A=document.createElement("span");A.textContent=O,V.append(A)}this.container.append(V)}return this.data.hasPopup||this._createPopup(null,this.data),this.container}}class F extends r{constructor(V){var O,A,_;super(V,{isRenderable:!!(V.data.hasPopup||(O=V.data.titleObj)!==null&&O!==void 0&&O.str||(A=V.data.contentsObj)!==null&&A!==void 0&&A.str||(_=V.data.richText)!==null&&_!==void 0&&_.str),ignoreBorder:!0})}render(){this.container.classList.add("lineAnnotation");const V=this.data,{width:O,height:A}=x(V.rect),_=this.svgFactory.create(O,A,!0),dl=this.svgFactory.createElement("svg:line");return dl.setAttribute("x1",V.rect[2]-V.lineCoordinates[0]),dl.setAttribute("y1",V.rect[3]-V.lineCoordinates[1]),dl.setAttribute("x2",V.rect[2]-V.lineCoordinates[2]),dl.setAttribute("y2",V.rect[3]-V.lineCoordinates[3]),dl.setAttribute("stroke-width",V.borderStyle.width||1),dl.setAttribute("stroke","transparent"),dl.setAttribute("fill","transparent"),_.append(dl),this.container.append(_),this._createPopup(dl,V),this.container}}class H extends r{constructor(V){var O,A,_;super(V,{isRenderable:!!(V.data.hasPopup||(O=V.data.titleObj)!==null&&O!==void 0&&O.str||(A=V.data.contentsObj)!==null&&A!==void 0&&A.str||(_=V.data.richText)!==null&&_!==void 0&&_.str),ignoreBorder:!0})}render(){this.container.classList.add("squareAnnotation");const V=this.data,{width:O,height:A}=x(V.rect),_=this.svgFactory.create(O,A,!0),dl=V.borderStyle.width,Ml=this.svgFactory.createElement("svg:rect");return Ml.setAttribute("x",dl/2),Ml.setAttribute("y",dl/2),Ml.setAttribute("width",O-dl),Ml.setAttribute("height",A-dl),Ml.setAttribute("stroke-width",dl||1),Ml.setAttribute("stroke","transparent"),Ml.setAttribute("fill","transparent"),_.append(Ml),this.container.append(_),this._createPopup(Ml,V),this.container}}class P extends r{constructor(V){var O,A,_;super(V,{isRenderable:!!(V.data.hasPopup||(O=V.data.titleObj)!==null&&O!==void 0&&O.str||(A=V.data.contentsObj)!==null&&A!==void 0&&A.str||(_=V.data.richText)!==null&&_!==void 0&&_.str),ignoreBorder:!0})}render(){this.container.classList.add("circleAnnotation");const V=this.data,{width:O,height:A}=x(V.rect),_=this.svgFactory.create(O,A,!0),dl=V.borderStyle.width,Ml=this.svgFactory.createElement("svg:ellipse");return Ml.setAttribute("cx",O/2),Ml.setAttribute("cy",A/2),Ml.setAttribute("rx",O/2-dl/2),Ml.setAttribute("ry",A/2-dl/2),Ml.setAttribute("stroke-width",dl||1),Ml.setAttribute("stroke","transparent"),Ml.setAttribute("fill","transparent"),_.append(Ml),this.container.append(_),this._createPopup(Ml,V),this.container}}class g extends r{constructor(V){var O,A,_;super(V,{isRenderable:!!(V.data.hasPopup||(O=V.data.titleObj)!==null&&O!==void 0&&O.str||(A=V.data.contentsObj)!==null&&A!==void 0&&A.str||(_=V.data.richText)!==null&&_!==void 0&&_.str),ignoreBorder:!0}),this.containerClassName="polylineAnnotation",this.svgElementName="svg:polyline"}render(){this.container.classList.add(this.containerClassName);const V=this.data,{width:O,height:A}=x(V.rect),_=this.svgFactory.create(O,A,!0);let dl=[];for(const Yl of V.vertices){const Vl=Yl.x-V.rect[0],Ll=V.rect[3]-Yl.y;dl.push(Vl+","+Ll)}dl=dl.join(" ");const Ml=this.svgFactory.createElement(this.svgElementName);return Ml.setAttribute("points",dl),Ml.setAttribute("stroke-width",V.borderStyle.width||1),Ml.setAttribute("stroke","transparent"),Ml.setAttribute("fill","transparent"),_.append(Ml),this.container.append(_),this._createPopup(Ml,V),this.container}}class K extends g{constructor(V){super(V),this.containerClassName="polygonAnnotation",this.svgElementName="svg:polygon"}}class il extends r{constructor(V){var O,A,_;super(V,{isRenderable:!!(V.data.hasPopup||(O=V.data.titleObj)!==null&&O!==void 0&&O.str||(A=V.data.contentsObj)!==null&&A!==void 0&&A.str||(_=V.data.richText)!==null&&_!==void 0&&_.str),ignoreBorder:!0})}render(){return this.container.classList.add("caretAnnotation"),this.data.hasPopup||this._createPopup(null,this.data),this.container}}class ml extends r{constructor(V){var O,A,_;super(V,{isRenderable:!!(V.data.hasPopup||(O=V.data.titleObj)!==null&&O!==void 0&&O.str||(A=V.data.contentsObj)!==null&&A!==void 0&&A.str||(_=V.data.richText)!==null&&_!==void 0&&_.str),ignoreBorder:!0}),this.containerClassName="inkAnnotation",this.svgElementName="svg:polyline"}render(){this.container.classList.add(this.containerClassName);const V=this.data,{width:O,height:A}=x(V.rect),_=this.svgFactory.create(O,A,!0);for(const dl of V.inkLists){let Ml=[];for(const Vl of dl){const Ll=Vl.x-V.rect[0],ol=V.rect[3]-Vl.y;Ml.push(`${Ll},${ol}`)}Ml=Ml.join(" ");const Yl=this.svgFactory.createElement(this.svgElementName);Yl.setAttribute("points",Ml),Yl.setAttribute("stroke-width",V.borderStyle.width||1),Yl.setAttribute("stroke","transparent"),Yl.setAttribute("fill","transparent"),this._createPopup(Yl,V),_.append(Yl)}return this.container.append(_),this.container}}class Gl extends r{constructor(V){var O,A,_;super(V,{isRenderable:!!(V.data.hasPopup||(O=V.data.titleObj)!==null&&O!==void 0&&O.str||(A=V.data.contentsObj)!==null&&A!==void 0&&A.str||(_=V.data.richText)!==null&&_!==void 0&&_.str),ignoreBorder:!0,createQuadrilaterals:!0})}render(){return this.data.hasPopup||this._createPopup(null,this.data),this.quadrilaterals?this._renderQuadrilaterals("highlightAnnotation"):(this.container.classList.add("highlightAnnotation"),this.container)}}class ul extends r{constructor(V){var O,A,_;super(V,{isRenderable:!!(V.data.hasPopup||(O=V.data.titleObj)!==null&&O!==void 0&&O.str||(A=V.data.contentsObj)!==null&&A!==void 0&&A.str||(_=V.data.richText)!==null&&_!==void 0&&_.str),ignoreBorder:!0,createQuadrilaterals:!0})}render(){return this.data.hasPopup||this._createPopup(null,this.data),this.quadrilaterals?this._renderQuadrilaterals("underlineAnnotation"):(this.container.classList.add("underlineAnnotation"),this.container)}}class Nl extends r{constructor(V){var O,A,_;super(V,{isRenderable:!!(V.data.hasPopup||(O=V.data.titleObj)!==null&&O!==void 0&&O.str||(A=V.data.contentsObj)!==null&&A!==void 0&&A.str||(_=V.data.richText)!==null&&_!==void 0&&_.str),ignoreBorder:!0,createQuadrilaterals:!0})}render(){return this.data.hasPopup||this._createPopup(null,this.data),this.quadrilaterals?this._renderQuadrilaterals("squigglyAnnotation"):(this.container.classList.add("squigglyAnnotation"),this.container)}}class yl extends r{constructor(V){var O,A,_;super(V,{isRenderable:!!(V.data.hasPopup||(O=V.data.titleObj)!==null&&O!==void 0&&O.str||(A=V.data.contentsObj)!==null&&A!==void 0&&A.str||(_=V.data.richText)!==null&&_!==void 0&&_.str),ignoreBorder:!0,createQuadrilaterals:!0})}render(){return this.data.hasPopup||this._createPopup(null,this.data),this.quadrilaterals?this._renderQuadrilaterals("strikeoutAnnotation"):(this.container.classList.add("strikeoutAnnotation"),this.container)}}class Xl extends r{constructor(V){var O,A,_;super(V,{isRenderable:!!(V.data.hasPopup||(O=V.data.titleObj)!==null&&O!==void 0&&O.str||(A=V.data.contentsObj)!==null&&A!==void 0&&A.str||(_=V.data.richText)!==null&&_!==void 0&&_.str),ignoreBorder:!0})}render(){return this.container.classList.add("stampAnnotation"),this.data.hasPopup||this._createPopup(null,this.data),this.container}}class Wl extends r{constructor(V){var O;super(V,{isRenderable:!0});const{filename:A,content:_}=this.data.file;this.filename=(0,C.getFilenameFromUrl)(A,!0),this.content=_,(O=this.linkService.eventBus)===null||O===void 0||O.dispatch("fileattachmentannotation",{source:this,filename:A,content:_})}render(){var V,O;this.container.classList.add("fileAttachmentAnnotation");let A;return this.data.hasAppearance?A=document.createElement("div"):(A=document.createElement("img"),A.src=`${this.imageResourcesPath}annotation-${/paperclip/i.test(this.data.name)?"paperclip":"pushpin"}.svg`),A.classList.add("popupTriggerArea"),A.addEventListener("dblclick",this._download.bind(this)),!this.data.hasPopup&&((V=this.data.titleObj)!==null&&V!==void 0&&V.str||(O=this.data.contentsObj)!==null&&O!==void 0&&O.str||this.data.richText)&&this._createPopup(A,this.data),this.container.append(A),this.container}_download(){var V;(V=this.downloadManager)===null||V===void 0||V.openOrDownloadData(this.container,this.content,this.filename)}}const Dl=class{static render(ll){var V,O;const{annotations:A,div:_,viewport:dl,accessibilityManager:Ml}=ll;(0,C.setLayerDimensions)(_,dl);const Yl={data:null,layer:_,page:ll.page,viewport:dl,linkService:ll.linkService,downloadManager:ll.downloadManager,imageResourcesPath:ll.imageResourcesPath||"",renderForms:ll.renderForms!==!1,svgFactory:new C.DOMSVGFactory,annotationStorage:ll.annotationStorage||new J.AnnotationStorage,enableScripting:ll.enableScripting===!0,hasJSActions:ll.hasJSActions,fieldObjects:ll.fieldObjects};let Vl=0;for(const Ll of A){if(Ll.noHTML)continue;if(Ll.annotationType!==o.AnnotationType.POPUP){const{width:Il,height:Sl}=x(Ll.rect);if(Il<=0||Sl<=0)continue}Yl.data=Ll;const ol=D.create(Yl);if(!ol.isRenderable)continue;const zl=ol.render();if(Ll.hidden&&(zl.style.visibility="hidden"),Array.isArray(zl))for(const Il of zl)Il.style.zIndex=Vl++,bl(V=Dl,n,Y).call(V,Il,Ll.id,_,Ml);else zl.style.zIndex=Vl++,ol instanceof nl?_.prepend(zl):bl(O=Dl,n,Y).call(O,zl,Ll.id,_,Ml)}bl(this,I,T).call(this,_,ll.annotationCanvasMap)}static update(ll){const{annotationCanvasMap:V,div:O,viewport:A}=ll;(0,C.setLayerDimensions)(O,{rotation:A.rotation}),bl(this,I,T).call(this,O,V),O.hidden=!1}};let Ul=Dl;n=new WeakSet,Y=function(ll,V,O,A){const _=ll.firstChild||ll;_.id=`${C.AnnotationPrefix}${V}`,O.append(ll),A==null||A.moveElementInDOM(O,ll,_,!1)},I=new WeakSet,T=function(ll,V){if(V){for(const[O,A]of V){const _=ll.querySelector(`[data-annotation-id="${O}"]`);if(!_)continue;const{firstChild:dl}=_;dl?dl.nodeName==="CANVAS"?dl.replaceWith(A):dl.before(A):_.append(A)}V.clear()}},Zl(Ul,n),Zl(Ul,I),d.AnnotationLayer=Ul},(c,d)=>{Object.defineProperty(d,"__esModule",{value:!0}),d.ColorConverters=void 0;function m(h){return Math.floor(255*Math.max(0,Math.min(1,h))).toString(16).padStart(2,"0")}d.ColorConverters=class{static CMYK_G(h){let[u,M,e,n]=h;return["G",1-Math.min(1,.3*u+.59*e+.11*M+n)]}static G_CMYK(h){let[u]=h;return["CMYK",0,0,0,1-u]}static G_RGB(h){let[u]=h;return["RGB",u,u,u]}static G_HTML(h){let[u]=h;const M=m(u);return`#${M}${M}${M}`}static RGB_G(h){let[u,M,e]=h;return["G",.3*u+.59*M+.11*e]}static RGB_HTML(h){let[u,M,e]=h;return`#${m(u)}${m(M)}${m(e)}`}static T_HTML(){return"#00000000"}static CMYK_RGB(h){let[u,M,e,n]=h;return["RGB",1-Math.min(1,u+n),1-Math.min(1,e+n),1-Math.min(1,M+n)]}static CMYK_HTML(h){const u=this.CMYK_RGB(h).slice(1);return this.RGB_HTML(u)}static RGB_CMYK(h){let[u,M,e]=h;const n=1-u,Y=1-M,I=1-e;return["CMYK",n,Y,I,Math.min(n,Y,I)]}}},(c,d,m)=>{Object.defineProperty(d,"__esModule",{value:!0}),d.XfaLayer=void 0;var h=m(154);d.XfaLayer=class{static setupStorage(u,M,e,n,Y){const I=n.getValue(M,{value:null});switch(e.name){case"textarea":if(I.value!==null&&(u.textContent=I.value),Y==="print")break;u.addEventListener("input",T=>{n.setValue(M,{value:T.target.value})});break;case"input":if(e.attributes.type==="radio"||e.attributes.type==="checkbox"){if(I.value===e.attributes.xfaOn?u.setAttribute("checked",!0):I.value===e.attributes.xfaOff&&u.removeAttribute("checked"),Y==="print")break;u.addEventListener("change",T=>{n.setValue(M,{value:T.target.checked?T.target.getAttribute("xfaOn"):T.target.getAttribute("xfaOff")})})}else{if(I.value!==null&&u.setAttribute("value",I.value),Y==="print")break;u.addEventListener("input",T=>{n.setValue(M,{value:T.target.value})})}break;case"select":if(I.value!==null)for(const T of e.children)T.attributes.value===I.value&&(T.attributes.selected=!0);u.addEventListener("input",T=>{const o=T.target.options,C=o.selectedIndex===-1?"":o[o.selectedIndex].value;n.setValue(M,{value:C})})}}static setAttributes(u){let{html:M,element:e,storage:n=null,intent:Y,linkService:I}=u;const{attributes:T}=e,o=M instanceof HTMLAnchorElement;T.type==="radio"&&(T.name=`${T.name}-${Y}`);for(const[C,J]of Object.entries(T))if(J!=null)switch(C){case"class":J.length&&M.setAttribute(C,J.join(" "));break;case"dataId":break;case"id":M.setAttribute("data-element-id",J);break;case"style":Object.assign(M.style,J);break;case"textContent":M.textContent=J;break;default:(!o||C!=="href"&&C!=="newWindow")&&M.setAttribute(C,J)}o&&I.addLinkAttributes(M,T.href,T.newWindow),n&&T.dataId&&this.setupStorage(M,T.dataId,e,n)}static render(u){const M=u.annotationStorage,e=u.linkService,n=u.xfaHtml,Y=u.intent||"display",I=document.createElement(n.name);n.attributes&&this.setAttributes({html:I,element:n,intent:Y,linkService:e});const T=[[n,-1,I]],o=u.div;if(o.append(I),u.viewport){const v=`matrix(${u.viewport.transform.join(",")})`;o.style.transform=v}Y!=="richText"&&o.setAttribute("class","xfaLayer xfaFont");const C=[];for(;T.length>0;){var J;const[v,Q,$]=T.at(-1);if(Q+1===v.children.length){T.pop();continue}const q=v.children[++T.at(-1)[1]];if(q===null)continue;const{name:x}=q;if(x==="#text"){const r=document.createTextNode(q.value);C.push(r),$.append(r);continue}let D;if(D=q!=null&&(J=q.attributes)!==null&&J!==void 0&&J.xmlns?document.createElementNS(q.attributes.xmlns,x):document.createElement(x),$.append(D),q.attributes&&this.setAttributes({html:D,element:q,storage:M,intent:Y,linkService:e}),q.children&&q.children.length>0)T.push([q,-1,D]);else if(q.value){const r=document.createTextNode(q.value);h.XfaText.shouldBuildText(x)&&C.push(r),D.append(r)}}for(const v of o.querySelectorAll(".xfaNonInteractive input, .xfaNonInteractive textarea"))v.setAttribute("readOnly",!0);return{textDivs:C}}static update(u){const M=`matrix(${u.viewport.transform.join(",")})`;u.div.style.transform=M,u.div.hidden=!1}}},(c,d,m)=>{Object.defineProperty(d,"__esModule",{value:!0}),d.SVGGraphics=void 0;var h=m(142),u=m(1),M=m(3);let e=class{constructor(){(0,u.unreachable)("Not implemented: SVGGraphics")}};d.SVGGraphics=e;{let n=function(w){let j=[];const f=[];for(const sl of w)sl.fn!=="save"?sl.fn==="restore"?j=f.pop():j.push(sl):(j.push({fnId:92,fn:"group",items:[]}),f.push(j),j=j.at(-1).items);return j},Y=function(w){if(Number.isInteger(w))return w.toString();const j=w.toFixed(10);let f=j.length-1;if(j[f]!=="0")return j;do f--;while(j[f]==="0");return j.substring(0,j[f]==="."?f:f+1)},I=function(w){if(w[4]===0&&w[5]===0){if(w[1]===0&&w[2]===0)return w[0]===1&&w[3]===1?"":`scale(${Y(w[0])} ${Y(w[3])})`;if(w[0]===w[3]&&w[1]===-w[2])return`rotate(${Y(180*Math.acos(w[0])/Math.PI)})`}else if(w[0]===1&&w[1]===0&&w[2]===0&&w[3]===1)return`translate(${Y(w[4])} ${Y(w[5])})`;return`matrix(${Y(w[0])} ${Y(w[1])} ${Y(w[2])} ${Y(w[3])} ${Y(w[4])} ${Y(w[5])})`};const T={fontStyle:"normal",fontWeight:"normal",fillColor:"#000000"},o="http://www.w3.org/XML/1998/namespace",C="http://www.w3.org/1999/xlink",J=["butt","round","square"],v=["miter","round","bevel"],Q=function(w){let j=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"",f=arguments.length>2&&arguments[2]!==void 0&&arguments[2];if(URL.createObjectURL&&typeof Blob<"u"&&!f)return URL.createObjectURL(new Blob([w],{type:j}));const sl="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";let tl=`data:${j};base64,`;for(let B=0,cl=w.length;B<cl;B+=3){const al=255&w[B],Tl=255&w[B+1],nl=255&w[B+2];tl+=sl[al>>2]+sl[(3&al)<<4|Tl>>4]+sl[B+1<cl?(15&Tl)<<2|nl>>6:64]+sl[B+2<cl?63&nl:64]}return tl},$=function(){const w=new Uint8Array([137,80,78,71,13,10,26,10]),j=new Int32Array(256);for(let B=0;B<256;B++){let cl=B;for(let al=0;al<8;al++)cl=1&cl?3988292384^cl>>1&2147483647:cl>>1&2147483647;j[B]=cl}function f(B,cl,al,Tl){let nl=Tl;const Rl=cl.length;al[nl]=Rl>>24&255,al[nl+1]=Rl>>16&255,al[nl+2]=Rl>>8&255,al[nl+3]=255&Rl,nl+=4,al[nl]=255&B.charCodeAt(0),al[nl+1]=255&B.charCodeAt(1),al[nl+2]=255&B.charCodeAt(2),al[nl+3]=255&B.charCodeAt(3),nl+=4,al.set(cl,nl),nl+=cl.length;const E=function(F,H,P){let g=-1;for(let K=H;K<P;K++){const il=255&(g^F[K]);g=g>>>8^j[il]}return-1^g}(al,Tl+4,nl);al[nl]=E>>24&255,al[nl+1]=E>>16&255,al[nl+2]=E>>8&255,al[nl+3]=255&E}function sl(B){let cl=B.length;const al=65535,Tl=Math.ceil(cl/al),nl=new Uint8Array(2+cl+5*Tl+4);let Rl=0;nl[Rl++]=120,nl[Rl++]=156;let E=0;for(;cl>al;)nl[Rl++]=0,nl[Rl++]=255,nl[Rl++]=255,nl[Rl++]=0,nl[Rl++]=0,nl.set(B.subarray(E,E+al),Rl),Rl+=al,E+=al,cl-=al;nl[Rl++]=1,nl[Rl++]=255&cl,nl[Rl++]=cl>>8&255,nl[Rl++]=255&~cl,nl[Rl++]=(65535&~cl)>>8&255,nl.set(B.subarray(E),Rl),Rl+=B.length-E;const F=function(H,P,g){let K=1,il=0;for(let ml=P;ml<g;++ml)K=(K+(255&H[ml]))%65521,il=(il+K)%65521;return il<<16|K}(B,0,B.length);return nl[Rl++]=F>>24&255,nl[Rl++]=F>>16&255,nl[Rl++]=F>>8&255,nl[Rl++]=255&F,nl}function tl(B,cl,al,Tl){const nl=B.width,Rl=B.height;let E,F,H;const P=B.data;switch(cl){case u.ImageKind.GRAYSCALE_1BPP:F=0,E=1,H=nl+7>>3;break;case u.ImageKind.RGB_24BPP:F=2,E=8,H=3*nl;break;case u.ImageKind.RGBA_32BPP:F=6,E=8,H=4*nl;break;default:throw new Error("invalid format")}const g=new Uint8Array((1+H)*Rl);let K=0,il=0;for(let Xl=0;Xl<Rl;++Xl)g[K++]=0,g.set(P.subarray(il,il+H),K),il+=H,K+=H;if(cl===u.ImageKind.GRAYSCALE_1BPP&&Tl){K=0;for(let Xl=0;Xl<Rl;Xl++){K++;for(let Wl=0;Wl<H;Wl++)g[K++]^=255}}const ml=new Uint8Array([nl>>24&255,nl>>16&255,nl>>8&255,255&nl,Rl>>24&255,Rl>>16&255,Rl>>8&255,255&Rl,E,F,0,0,0]),Gl=function(Xl){if(!M.isNodeJS)return sl(Xl);try{let Wl;Wl=parseInt(process.versions.node)>=8?Xl:Buffer.from(Xl);const Dl=require$$6.deflateSync(Wl,{level:9});return Dl instanceof Uint8Array?Dl:new Uint8Array(Dl)}catch(Wl){(0,u.warn)("Not compressing PNG because zlib.deflateSync is unavailable: "+Wl)}return sl(Xl)}(g),ul=w.length+36+ml.length+Gl.length,Nl=new Uint8Array(ul);let yl=0;return Nl.set(w,yl),yl+=w.length,f("IHDR",ml,Nl,yl),yl+=12+ml.length,f("IDATA",Gl,Nl,yl),yl+=12+Gl.length,f("IEND",new Uint8Array(0),Nl,yl),Q(Nl,"image/png",al)}return function(B,cl,al){return tl(B,B.kind===void 0?u.ImageKind.GRAYSCALE_1BPP:B.kind,cl,al)}}();class q{constructor(){this.fontSizeScale=1,this.fontWeight=T.fontWeight,this.fontSize=0,this.textMatrix=u.IDENTITY_MATRIX,this.fontMatrix=u.FONT_IDENTITY_MATRIX,this.leading=0,this.textRenderingMode=u.TextRenderingMode.FILL,this.textMatrixScale=1,this.x=0,this.y=0,this.lineX=0,this.lineY=0,this.charSpacing=0,this.wordSpacing=0,this.textHScale=1,this.textRise=0,this.fillColor=T.fillColor,this.strokeColor="#000000",this.fillAlpha=1,this.strokeAlpha=1,this.lineWidth=1,this.lineJoin="",this.lineCap="",this.miterLimit=0,this.dashArray=[],this.dashPhase=0,this.dependencies=[],this.activeClipUrl=null,this.clipGroup=null,this.maskId=""}clone(){return Object.create(this)}setCurrentPoint(j,f){this.x=j,this.y=f}}let x=0,D=0,r=0;d.SVGGraphics=e=class{constructor(w,j){let f=arguments.length>2&&arguments[2]!==void 0&&arguments[2];(0,h.deprecated)("The SVG back-end is no longer maintained and *may* be removed in the future."),this.svgFactory=new h.DOMSVGFactory,this.current=new q,this.transformMatrix=u.IDENTITY_MATRIX,this.transformStack=[],this.extraStack=[],this.commonObjs=w,this.objs=j,this.pendingClip=null,this.pendingEOFill=!1,this.embedFonts=!1,this.embeddedFonts=Object.create(null),this.cssStyle=null,this.forceDataSchema=!!f,this._operatorIdMapping=[];for(const sl in u.OPS)this._operatorIdMapping[u.OPS[sl]]=sl}getObject(w){let j=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;return typeof w=="string"?w.startsWith("g_")?this.commonObjs.get(w):this.objs.get(w):j}save(){this.transformStack.push(this.transformMatrix);const w=this.current;this.extraStack.push(w),this.current=w.clone()}restore(){this.transformMatrix=this.transformStack.pop(),this.current=this.extraStack.pop(),this.pendingClip=null,this.tgrp=null}group(w){this.save(),this.executeOpTree(w),this.restore()}loadDependencies(w){const j=w.fnArray,f=w.argsArray;for(let sl=0,tl=j.length;sl<tl;sl++)if(j[sl]===u.OPS.dependency)for(const B of f[sl]){const cl=B.startsWith("g_")?this.commonObjs:this.objs,al=new Promise(Tl=>{cl.get(B,Tl)});this.current.dependencies.push(al)}return Promise.all(this.current.dependencies)}transform(w,j,f,sl,tl,B){const cl=[w,j,f,sl,tl,B];this.transformMatrix=u.Util.transform(this.transformMatrix,cl),this.tgrp=null}getSVG(w,j){this.viewport=j;const f=this._initialize(j);return this.loadDependencies(w).then(()=>(this.transformMatrix=u.IDENTITY_MATRIX,this.executeOpTree(this.convertOpList(w)),f))}convertOpList(w){const j=this._operatorIdMapping,f=w.argsArray,sl=w.fnArray,tl=[];for(let B=0,cl=sl.length;B<cl;B++){const al=sl[B];tl.push({fnId:al,fn:j[al],args:f[B]})}return n(tl)}executeOpTree(w){for(const j of w){const f=j.fn,sl=j.fnId,tl=j.args;switch(0|sl){case u.OPS.beginText:this.beginText();break;case u.OPS.dependency:break;case u.OPS.setLeading:this.setLeading(tl);break;case u.OPS.setLeadingMoveText:this.setLeadingMoveText(tl[0],tl[1]);break;case u.OPS.setFont:this.setFont(tl);break;case u.OPS.showText:case u.OPS.showSpacedText:this.showText(tl[0]);break;case u.OPS.endText:this.endText();break;case u.OPS.moveText:this.moveText(tl[0],tl[1]);break;case u.OPS.setCharSpacing:this.setCharSpacing(tl[0]);break;case u.OPS.setWordSpacing:this.setWordSpacing(tl[0]);break;case u.OPS.setHScale:this.setHScale(tl[0]);break;case u.OPS.setTextMatrix:this.setTextMatrix(tl[0],tl[1],tl[2],tl[3],tl[4],tl[5]);break;case u.OPS.setTextRise:this.setTextRise(tl[0]);break;case u.OPS.setTextRenderingMode:this.setTextRenderingMode(tl[0]);break;case u.OPS.setLineWidth:this.setLineWidth(tl[0]);break;case u.OPS.setLineJoin:this.setLineJoin(tl[0]);break;case u.OPS.setLineCap:this.setLineCap(tl[0]);break;case u.OPS.setMiterLimit:this.setMiterLimit(tl[0]);break;case u.OPS.setFillRGBColor:this.setFillRGBColor(tl[0],tl[1],tl[2]);break;case u.OPS.setStrokeRGBColor:this.setStrokeRGBColor(tl[0],tl[1],tl[2]);break;case u.OPS.setStrokeColorN:this.setStrokeColorN(tl);break;case u.OPS.setFillColorN:this.setFillColorN(tl);break;case u.OPS.shadingFill:this.shadingFill(tl[0]);break;case u.OPS.setDash:this.setDash(tl[0],tl[1]);break;case u.OPS.setRenderingIntent:this.setRenderingIntent(tl[0]);break;case u.OPS.setFlatness:this.setFlatness(tl[0]);break;case u.OPS.setGState:this.setGState(tl[0]);break;case u.OPS.fill:this.fill();break;case u.OPS.eoFill:this.eoFill();break;case u.OPS.stroke:this.stroke();break;case u.OPS.fillStroke:this.fillStroke();break;case u.OPS.eoFillStroke:this.eoFillStroke();break;case u.OPS.clip:this.clip("nonzero");break;case u.OPS.eoClip:this.clip("evenodd");break;case u.OPS.paintSolidColorImageMask:this.paintSolidColorImageMask();break;case u.OPS.paintImageXObject:this.paintImageXObject(tl[0]);break;case u.OPS.paintInlineImageXObject:this.paintInlineImageXObject(tl[0]);break;case u.OPS.paintImageMaskXObject:this.paintImageMaskXObject(tl[0]);break;case u.OPS.paintFormXObjectBegin:this.paintFormXObjectBegin(tl[0],tl[1]);break;case u.OPS.paintFormXObjectEnd:this.paintFormXObjectEnd();break;case u.OPS.closePath:this.closePath();break;case u.OPS.closeStroke:this.closeStroke();break;case u.OPS.closeFillStroke:this.closeFillStroke();break;case u.OPS.closeEOFillStroke:this.closeEOFillStroke();break;case u.OPS.nextLine:this.nextLine();break;case u.OPS.transform:this.transform(tl[0],tl[1],tl[2],tl[3],tl[4],tl[5]);break;case u.OPS.constructPath:this.constructPath(tl[0],tl[1]);break;case u.OPS.endPath:this.endPath();break;case 92:this.group(j.items);break;default:(0,u.warn)(`Unimplemented operator ${f}`)}}}setWordSpacing(w){this.current.wordSpacing=w}setCharSpacing(w){this.current.charSpacing=w}nextLine(){this.moveText(0,this.current.leading)}setTextMatrix(w,j,f,sl,tl,B){const cl=this.current;cl.textMatrix=cl.lineMatrix=[w,j,f,sl,tl,B],cl.textMatrixScale=Math.hypot(w,j),cl.x=cl.lineX=0,cl.y=cl.lineY=0,cl.xcoords=[],cl.ycoords=[],cl.tspan=this.svgFactory.createElement("svg:tspan"),cl.tspan.setAttributeNS(null,"font-family",cl.fontFamily),cl.tspan.setAttributeNS(null,"font-size",`${Y(cl.fontSize)}px`),cl.tspan.setAttributeNS(null,"y",Y(-cl.y)),cl.txtElement=this.svgFactory.createElement("svg:text"),cl.txtElement.append(cl.tspan)}beginText(){const w=this.current;w.x=w.lineX=0,w.y=w.lineY=0,w.textMatrix=u.IDENTITY_MATRIX,w.lineMatrix=u.IDENTITY_MATRIX,w.textMatrixScale=1,w.tspan=this.svgFactory.createElement("svg:tspan"),w.txtElement=this.svgFactory.createElement("svg:text"),w.txtgrp=this.svgFactory.createElement("svg:g"),w.xcoords=[],w.ycoords=[]}moveText(w,j){const f=this.current;f.x=f.lineX+=w,f.y=f.lineY+=j,f.xcoords=[],f.ycoords=[],f.tspan=this.svgFactory.createElement("svg:tspan"),f.tspan.setAttributeNS(null,"font-family",f.fontFamily),f.tspan.setAttributeNS(null,"font-size",`${Y(f.fontSize)}px`),f.tspan.setAttributeNS(null,"y",Y(-f.y))}showText(w){const j=this.current,f=j.font,sl=j.fontSize;if(sl===0)return;const tl=j.fontSizeScale,B=j.charSpacing,cl=j.wordSpacing,al=j.fontDirection,Tl=j.textHScale*al,nl=f.vertical,Rl=nl?1:-1,E=f.defaultVMetrics,F=sl*j.fontMatrix[0];let H=0;for(const K of w){if(K===null){H+=al*cl;continue}if(typeof K=="number"){H+=Rl*K*sl/1e3;continue}const il=(K.isSpace?cl:0)+B,ml=K.fontChar;let Gl,ul,Nl,yl=K.width;if(nl){let Xl;const Wl=K.vmetric||E;Xl=K.vmetric?Wl[1]:.5*yl,Xl=-Xl*F;const Dl=Wl[2]*F;yl=Wl?-Wl[0]:yl,Gl=Xl/tl,ul=(H+Dl)/tl}else Gl=H/tl,ul=0;(K.isInFont||f.missingFile)&&(j.xcoords.push(j.x+Gl),nl&&j.ycoords.push(-j.y+ul),j.tspan.textContent+=ml),Nl=nl?yl*F-il*al:yl*F+il*al,H+=Nl}j.tspan.setAttributeNS(null,"x",j.xcoords.map(Y).join(" ")),nl?j.tspan.setAttributeNS(null,"y",j.ycoords.map(Y).join(" ")):j.tspan.setAttributeNS(null,"y",Y(-j.y)),nl?j.y-=H:j.x+=H*Tl,j.tspan.setAttributeNS(null,"font-family",j.fontFamily),j.tspan.setAttributeNS(null,"font-size",`${Y(j.fontSize)}px`),j.fontStyle!==T.fontStyle&&j.tspan.setAttributeNS(null,"font-style",j.fontStyle),j.fontWeight!==T.fontWeight&&j.tspan.setAttributeNS(null,"font-weight",j.fontWeight);const P=j.textRenderingMode&u.TextRenderingMode.FILL_STROKE_MASK;if(P===u.TextRenderingMode.FILL||P===u.TextRenderingMode.FILL_STROKE?(j.fillColor!==T.fillColor&&j.tspan.setAttributeNS(null,"fill",j.fillColor),j.fillAlpha<1&&j.tspan.setAttributeNS(null,"fill-opacity",j.fillAlpha)):j.textRenderingMode===u.TextRenderingMode.ADD_TO_PATH?j.tspan.setAttributeNS(null,"fill","transparent"):j.tspan.setAttributeNS(null,"fill","none"),P===u.TextRenderingMode.STROKE||P===u.TextRenderingMode.FILL_STROKE){const K=1/(j.textMatrixScale||1);this._setStrokeAttributes(j.tspan,K)}let g=j.textMatrix;j.textRise!==0&&(g=g.slice(),g[5]+=j.textRise),j.txtElement.setAttributeNS(null,"transform",`${I(g)} scale(${Y(Tl)}, -1)`),j.txtElement.setAttributeNS(o,"xml:space","preserve"),j.txtElement.append(j.tspan),j.txtgrp.append(j.txtElement),this._ensureTransformGroup().append(j.txtElement)}setLeadingMoveText(w,j){this.setLeading(-j),this.moveText(w,j)}addFontStyle(w){if(!w.data)throw new Error('addFontStyle: No font data available, ensure that the "fontExtraProperties" API parameter is set.');this.cssStyle||(this.cssStyle=this.svgFactory.createElement("svg:style"),this.cssStyle.setAttributeNS(null,"type","text/css"),this.defs.append(this.cssStyle));const j=Q(w.data,w.mimetype,this.forceDataSchema);this.cssStyle.textContent+=`@font-face { font-family: "${w.loadedName}"; src: url(${j}); }
`}setFont(w){const j=this.current,f=this.commonObjs.get(w[0]);let sl=w[1];j.font=f,this.embedFonts&&!f.missingFile&&!this.embeddedFonts[f.loadedName]&&(this.addFontStyle(f),this.embeddedFonts[f.loadedName]=f),j.fontMatrix=f.fontMatrix||u.FONT_IDENTITY_MATRIX;let tl="normal";f.black?tl="900":f.bold&&(tl="bold");const B=f.italic?"italic":"normal";sl<0?(sl=-sl,j.fontDirection=-1):j.fontDirection=1,j.fontSize=sl,j.fontFamily=f.loadedName,j.fontWeight=tl,j.fontStyle=B,j.tspan=this.svgFactory.createElement("svg:tspan"),j.tspan.setAttributeNS(null,"y",Y(-j.y)),j.xcoords=[],j.ycoords=[]}endText(){var w;const j=this.current;j.textRenderingMode&u.TextRenderingMode.ADD_TO_PATH_FLAG&&(w=j.txtElement)!==null&&w!==void 0&&w.hasChildNodes()&&(j.element=j.txtElement,this.clip("nonzero"),this.endPath())}setLineWidth(w){w>0&&(this.current.lineWidth=w)}setLineCap(w){this.current.lineCap=J[w]}setLineJoin(w){this.current.lineJoin=v[w]}setMiterLimit(w){this.current.miterLimit=w}setStrokeAlpha(w){this.current.strokeAlpha=w}setStrokeRGBColor(w,j,f){this.current.strokeColor=u.Util.makeHexColor(w,j,f)}setFillAlpha(w){this.current.fillAlpha=w}setFillRGBColor(w,j,f){this.current.fillColor=u.Util.makeHexColor(w,j,f),this.current.tspan=this.svgFactory.createElement("svg:tspan"),this.current.xcoords=[],this.current.ycoords=[]}setStrokeColorN(w){this.current.strokeColor=this._makeColorN_Pattern(w)}setFillColorN(w){this.current.fillColor=this._makeColorN_Pattern(w)}shadingFill(w){const j=this.viewport.width,f=this.viewport.height,sl=u.Util.inverseTransform(this.transformMatrix),tl=u.Util.applyTransform([0,0],sl),B=u.Util.applyTransform([0,f],sl),cl=u.Util.applyTransform([j,0],sl),al=u.Util.applyTransform([j,f],sl),Tl=Math.min(tl[0],B[0],cl[0],al[0]),nl=Math.min(tl[1],B[1],cl[1],al[1]),Rl=Math.max(tl[0],B[0],cl[0],al[0]),E=Math.max(tl[1],B[1],cl[1],al[1]),F=this.svgFactory.createElement("svg:rect");F.setAttributeNS(null,"x",Tl),F.setAttributeNS(null,"y",nl),F.setAttributeNS(null,"width",Rl-Tl),F.setAttributeNS(null,"height",E-nl),F.setAttributeNS(null,"fill",this._makeShadingPattern(w)),this.current.fillAlpha<1&&F.setAttributeNS(null,"fill-opacity",this.current.fillAlpha),this._ensureTransformGroup().append(F)}_makeColorN_Pattern(w){return w[0]==="TilingPattern"?this._makeTilingPattern(w):this._makeShadingPattern(w)}_makeTilingPattern(w){const j=w[1],f=w[2],sl=w[3]||u.IDENTITY_MATRIX,[tl,B,cl,al]=w[4],Tl=w[5],nl=w[6],Rl=w[7],E="shading"+r++,[F,H,P,g]=u.Util.normalizeRect([...u.Util.applyTransform([tl,B],sl),...u.Util.applyTransform([cl,al],sl)]),[K,il]=u.Util.singularValueDecompose2dScale(sl),ml=Tl*K,Gl=nl*il,ul=this.svgFactory.createElement("svg:pattern");ul.setAttributeNS(null,"id",E),ul.setAttributeNS(null,"patternUnits","userSpaceOnUse"),ul.setAttributeNS(null,"width",ml),ul.setAttributeNS(null,"height",Gl),ul.setAttributeNS(null,"x",`${F}`),ul.setAttributeNS(null,"y",`${H}`);const Nl=this.svg,yl=this.transformMatrix,Xl=this.current.fillColor,Wl=this.current.strokeColor,Dl=this.svgFactory.create(P-F,g-H);if(this.svg=Dl,this.transformMatrix=sl,Rl===2){const Ul=u.Util.makeHexColor(...j);this.current.fillColor=Ul,this.current.strokeColor=Ul}return this.executeOpTree(this.convertOpList(f)),this.svg=Nl,this.transformMatrix=yl,this.current.fillColor=Xl,this.current.strokeColor=Wl,ul.append(Dl.childNodes[0]),this.defs.append(ul),`url(#${E})`}_makeShadingPattern(w){switch(typeof w=="string"&&(w=this.objs.get(w)),w[0]){case"RadialAxial":const j="shading"+r++,f=w[3];let sl;switch(w[1]){case"axial":const tl=w[4],B=w[5];sl=this.svgFactory.createElement("svg:linearGradient"),sl.setAttributeNS(null,"id",j),sl.setAttributeNS(null,"gradientUnits","userSpaceOnUse"),sl.setAttributeNS(null,"x1",tl[0]),sl.setAttributeNS(null,"y1",tl[1]),sl.setAttributeNS(null,"x2",B[0]),sl.setAttributeNS(null,"y2",B[1]);break;case"radial":const cl=w[4],al=w[5],Tl=w[6],nl=w[7];sl=this.svgFactory.createElement("svg:radialGradient"),sl.setAttributeNS(null,"id",j),sl.setAttributeNS(null,"gradientUnits","userSpaceOnUse"),sl.setAttributeNS(null,"cx",al[0]),sl.setAttributeNS(null,"cy",al[1]),sl.setAttributeNS(null,"r",nl),sl.setAttributeNS(null,"fx",cl[0]),sl.setAttributeNS(null,"fy",cl[1]),sl.setAttributeNS(null,"fr",Tl);break;default:throw new Error(`Unknown RadialAxial type: ${w[1]}`)}for(const tl of f){const B=this.svgFactory.createElement("svg:stop");B.setAttributeNS(null,"offset",tl[0]),B.setAttributeNS(null,"stop-color",tl[1]),sl.append(B)}return this.defs.append(sl),`url(#${j})`;case"Mesh":return(0,u.warn)("Unimplemented pattern Mesh"),null;case"Dummy":return"hotpink";default:throw new Error(`Unknown IR type: ${w[0]}`)}}setDash(w,j){this.current.dashArray=w,this.current.dashPhase=j}constructPath(w,j){const f=this.current;let sl=f.x,tl=f.y,B=[],cl=0;for(const al of w)switch(0|al){case u.OPS.rectangle:sl=j[cl++],tl=j[cl++];const Tl=sl+j[cl++],nl=tl+j[cl++];B.push("M",Y(sl),Y(tl),"L",Y(Tl),Y(tl),"L",Y(Tl),Y(nl),"L",Y(sl),Y(nl),"Z");break;case u.OPS.moveTo:sl=j[cl++],tl=j[cl++],B.push("M",Y(sl),Y(tl));break;case u.OPS.lineTo:sl=j[cl++],tl=j[cl++],B.push("L",Y(sl),Y(tl));break;case u.OPS.curveTo:sl=j[cl+4],tl=j[cl+5],B.push("C",Y(j[cl]),Y(j[cl+1]),Y(j[cl+2]),Y(j[cl+3]),Y(sl),Y(tl)),cl+=6;break;case u.OPS.curveTo2:B.push("C",Y(sl),Y(tl),Y(j[cl]),Y(j[cl+1]),Y(j[cl+2]),Y(j[cl+3])),sl=j[cl+2],tl=j[cl+3],cl+=4;break;case u.OPS.curveTo3:sl=j[cl+2],tl=j[cl+3],B.push("C",Y(j[cl]),Y(j[cl+1]),Y(sl),Y(tl),Y(sl),Y(tl)),cl+=4;break;case u.OPS.closePath:B.push("Z")}B=B.join(" "),f.path&&w.length>0&&w[0]!==u.OPS.rectangle&&w[0]!==u.OPS.moveTo?B=f.path.getAttributeNS(null,"d")+B:(f.path=this.svgFactory.createElement("svg:path"),this._ensureTransformGroup().append(f.path)),f.path.setAttributeNS(null,"d",B),f.path.setAttributeNS(null,"fill","none"),f.element=f.path,f.setCurrentPoint(sl,tl)}endPath(){const w=this.current;if(w.path=null,!this.pendingClip)return;if(!w.element){this.pendingClip=null;return}const j="clippath"+x++,f=this.svgFactory.createElement("svg:clipPath");f.setAttributeNS(null,"id",j),f.setAttributeNS(null,"transform",I(this.transformMatrix));const sl=w.element.cloneNode(!0);if(this.pendingClip==="evenodd"?sl.setAttributeNS(null,"clip-rule","evenodd"):sl.setAttributeNS(null,"clip-rule","nonzero"),this.pendingClip=null,f.append(sl),this.defs.append(f),w.activeClipUrl){w.clipGroup=null;for(const tl of this.extraStack)tl.clipGroup=null;f.setAttributeNS(null,"clip-path",w.activeClipUrl)}w.activeClipUrl=`url(#${j})`,this.tgrp=null}clip(w){this.pendingClip=w}closePath(){const w=this.current;if(w.path){const j=`${w.path.getAttributeNS(null,"d")}Z`;w.path.setAttributeNS(null,"d",j)}}setLeading(w){this.current.leading=-w}setTextRise(w){this.current.textRise=w}setTextRenderingMode(w){this.current.textRenderingMode=w}setHScale(w){this.current.textHScale=w/100}setRenderingIntent(w){}setFlatness(w){}setGState(w){for(const[j,f]of w)switch(j){case"LW":this.setLineWidth(f);break;case"LC":this.setLineCap(f);break;case"LJ":this.setLineJoin(f);break;case"ML":this.setMiterLimit(f);break;case"D":this.setDash(f[0],f[1]);break;case"RI":this.setRenderingIntent(f);break;case"FL":this.setFlatness(f);break;case"Font":this.setFont(f);break;case"CA":this.setStrokeAlpha(f);break;case"ca":this.setFillAlpha(f);break;default:(0,u.warn)(`Unimplemented graphic state operator ${j}`)}}fill(){const w=this.current;w.element&&(w.element.setAttributeNS(null,"fill",w.fillColor),w.element.setAttributeNS(null,"fill-opacity",w.fillAlpha),this.endPath())}stroke(){const w=this.current;w.element&&(this._setStrokeAttributes(w.element),w.element.setAttributeNS(null,"fill","none"),this.endPath())}_setStrokeAttributes(w){let j=arguments.length>1&&arguments[1]!==void 0?arguments[1]:1;const f=this.current;let sl=f.dashArray;j!==1&&sl.length>0&&(sl=sl.map(function(tl){return j*tl})),w.setAttributeNS(null,"stroke",f.strokeColor),w.setAttributeNS(null,"stroke-opacity",f.strokeAlpha),w.setAttributeNS(null,"stroke-miterlimit",Y(f.miterLimit)),w.setAttributeNS(null,"stroke-linecap",f.lineCap),w.setAttributeNS(null,"stroke-linejoin",f.lineJoin),w.setAttributeNS(null,"stroke-width",Y(j*f.lineWidth)+"px"),w.setAttributeNS(null,"stroke-dasharray",sl.map(Y).join(" ")),w.setAttributeNS(null,"stroke-dashoffset",Y(j*f.dashPhase)+"px")}eoFill(){var w;(w=this.current.element)===null||w===void 0||w.setAttributeNS(null,"fill-rule","evenodd"),this.fill()}fillStroke(){this.stroke(),this.fill()}eoFillStroke(){var w;(w=this.current.element)===null||w===void 0||w.setAttributeNS(null,"fill-rule","evenodd"),this.fillStroke()}closeStroke(){this.closePath(),this.stroke()}closeFillStroke(){this.closePath(),this.fillStroke()}closeEOFillStroke(){this.closePath(),this.eoFillStroke()}paintSolidColorImageMask(){const w=this.svgFactory.createElement("svg:rect");w.setAttributeNS(null,"x","0"),w.setAttributeNS(null,"y","0"),w.setAttributeNS(null,"width","1px"),w.setAttributeNS(null,"height","1px"),w.setAttributeNS(null,"fill",this.current.fillColor),this._ensureTransformGroup().append(w)}paintImageXObject(w){const j=this.getObject(w);j?this.paintInlineImageXObject(j):(0,u.warn)(`Dependent image with object ID ${w} is not ready yet`)}paintInlineImageXObject(w,j){const f=w.width,sl=w.height,tl=$(w,this.forceDataSchema,!!j),B=this.svgFactory.createElement("svg:rect");B.setAttributeNS(null,"x","0"),B.setAttributeNS(null,"y","0"),B.setAttributeNS(null,"width",Y(f)),B.setAttributeNS(null,"height",Y(sl)),this.current.element=B,this.clip("nonzero");const cl=this.svgFactory.createElement("svg:image");cl.setAttributeNS(C,"xlink:href",tl),cl.setAttributeNS(null,"x","0"),cl.setAttributeNS(null,"y",Y(-sl)),cl.setAttributeNS(null,"width",Y(f)+"px"),cl.setAttributeNS(null,"height",Y(sl)+"px"),cl.setAttributeNS(null,"transform",`scale(${Y(1/f)} ${Y(-1/sl)})`),j?j.append(cl):this._ensureTransformGroup().append(cl)}paintImageMaskXObject(w){const j=this.getObject(w.data,w);if(j.bitmap){(0,u.warn)("paintImageMaskXObject: ImageBitmap support is not implemented, ensure that the `isOffscreenCanvasSupported` API parameter is disabled.");return}const f=this.current,sl=j.width,tl=j.height,B=f.fillColor;f.maskId="mask"+D++;const cl=this.svgFactory.createElement("svg:mask");cl.setAttributeNS(null,"id",f.maskId);const al=this.svgFactory.createElement("svg:rect");al.setAttributeNS(null,"x","0"),al.setAttributeNS(null,"y","0"),al.setAttributeNS(null,"width",Y(sl)),al.setAttributeNS(null,"height",Y(tl)),al.setAttributeNS(null,"fill",B),al.setAttributeNS(null,"mask",`url(#${f.maskId})`),this.defs.append(cl),this._ensureTransformGroup().append(al),this.paintInlineImageXObject(j,cl)}paintFormXObjectBegin(w,j){if(Array.isArray(w)&&w.length===6&&this.transform(w[0],w[1],w[2],w[3],w[4],w[5]),j){const f=j[2]-j[0],sl=j[3]-j[1],tl=this.svgFactory.createElement("svg:rect");tl.setAttributeNS(null,"x",j[0]),tl.setAttributeNS(null,"y",j[1]),tl.setAttributeNS(null,"width",Y(f)),tl.setAttributeNS(null,"height",Y(sl)),this.current.element=tl,this.clip("nonzero"),this.endPath()}}paintFormXObjectEnd(){}_initialize(w){const j=this.svgFactory.create(w.width,w.height),f=this.svgFactory.createElement("svg:defs");j.append(f),this.defs=f;const sl=this.svgFactory.createElement("svg:g");return sl.setAttributeNS(null,"transform",I(w.transform)),j.append(sl),this.svg=sl,j}_ensureClipGroup(){if(!this.current.clipGroup){const w=this.svgFactory.createElement("svg:g");w.setAttributeNS(null,"clip-path",this.current.activeClipUrl),this.svg.append(w),this.current.clipGroup=w}return this.current.clipGroup}_ensureTransformGroup(){return this.tgrp||(this.tgrp=this.svgFactory.createElement("svg:g"),this.tgrp.setAttributeNS(null,"transform",I(this.transformMatrix)),this.current.activeClipUrl?this._ensureClipGroup().append(this.tgrp):this.svg.append(this.tgrp)),this.tgrp}}}}],__webpack_module_cache__={};function __w_pdfjs_require__(c){var d=__webpack_module_cache__[c];if(d!==void 0)return d.exports;var m=__webpack_module_cache__[c]={exports:{}};return __webpack_modules__[c].call(m.exports,m,m.exports,__w_pdfjs_require__),m.exports}var __webpack_exports__={};return(()=>{var c=__webpack_exports__;Object.defineProperty(c,"__esModule",{value:!0}),Object.defineProperty(c,"AbortException",{enumerable:!0,get:function(){return d.AbortException}}),Object.defineProperty(c,"AnnotationEditorLayer",{enumerable:!0,get:function(){return M.AnnotationEditorLayer}}),Object.defineProperty(c,"AnnotationEditorParamsType",{enumerable:!0,get:function(){return d.AnnotationEditorParamsType}}),Object.defineProperty(c,"AnnotationEditorType",{enumerable:!0,get:function(){return d.AnnotationEditorType}}),Object.defineProperty(c,"AnnotationEditorUIManager",{enumerable:!0,get:function(){return e.AnnotationEditorUIManager}}),Object.defineProperty(c,"AnnotationLayer",{enumerable:!0,get:function(){return n.AnnotationLayer}}),Object.defineProperty(c,"AnnotationMode",{enumerable:!0,get:function(){return d.AnnotationMode}}),Object.defineProperty(c,"CMapCompressionType",{enumerable:!0,get:function(){return d.CMapCompressionType}}),Object.defineProperty(c,"FeatureTest",{enumerable:!0,get:function(){return d.FeatureTest}}),Object.defineProperty(c,"GlobalWorkerOptions",{enumerable:!0,get:function(){return Y.GlobalWorkerOptions}}),Object.defineProperty(c,"InvalidPDFException",{enumerable:!0,get:function(){return d.InvalidPDFException}}),Object.defineProperty(c,"MissingPDFException",{enumerable:!0,get:function(){return d.MissingPDFException}}),Object.defineProperty(c,"OPS",{enumerable:!0,get:function(){return d.OPS}}),Object.defineProperty(c,"PDFDataRangeTransport",{enumerable:!0,get:function(){return m.PDFDataRangeTransport}}),Object.defineProperty(c,"PDFDateString",{enumerable:!0,get:function(){return h.PDFDateString}}),Object.defineProperty(c,"PDFWorker",{enumerable:!0,get:function(){return m.PDFWorker}}),Object.defineProperty(c,"PasswordResponses",{enumerable:!0,get:function(){return d.PasswordResponses}}),Object.defineProperty(c,"PermissionFlag",{enumerable:!0,get:function(){return d.PermissionFlag}}),Object.defineProperty(c,"PixelsPerInch",{enumerable:!0,get:function(){return h.PixelsPerInch}}),Object.defineProperty(c,"PromiseCapability",{enumerable:!0,get:function(){return d.PromiseCapability}}),Object.defineProperty(c,"RenderingCancelledException",{enumerable:!0,get:function(){return h.RenderingCancelledException}}),Object.defineProperty(c,"SVGGraphics",{enumerable:!0,get:function(){return I.SVGGraphics}}),Object.defineProperty(c,"UnexpectedResponseException",{enumerable:!0,get:function(){return d.UnexpectedResponseException}}),Object.defineProperty(c,"Util",{enumerable:!0,get:function(){return d.Util}}),Object.defineProperty(c,"VerbosityLevel",{enumerable:!0,get:function(){return d.VerbosityLevel}}),Object.defineProperty(c,"XfaLayer",{enumerable:!0,get:function(){return T.XfaLayer}}),Object.defineProperty(c,"build",{enumerable:!0,get:function(){return m.build}}),Object.defineProperty(c,"createValidAbsoluteUrl",{enumerable:!0,get:function(){return d.createValidAbsoluteUrl}}),Object.defineProperty(c,"getDocument",{enumerable:!0,get:function(){return m.getDocument}}),Object.defineProperty(c,"getFilenameFromUrl",{enumerable:!0,get:function(){return h.getFilenameFromUrl}}),Object.defineProperty(c,"getPdfFilenameFromUrl",{enumerable:!0,get:function(){return h.getPdfFilenameFromUrl}}),Object.defineProperty(c,"getXfaPageViewport",{enumerable:!0,get:function(){return h.getXfaPageViewport}}),Object.defineProperty(c,"isDataScheme",{enumerable:!0,get:function(){return h.isDataScheme}}),Object.defineProperty(c,"isPdfFile",{enumerable:!0,get:function(){return h.isPdfFile}}),Object.defineProperty(c,"loadScript",{enumerable:!0,get:function(){return h.loadScript}}),Object.defineProperty(c,"normalizeUnicode",{enumerable:!0,get:function(){return d.normalizeUnicode}}),Object.defineProperty(c,"renderTextLayer",{enumerable:!0,get:function(){return u.renderTextLayer}}),Object.defineProperty(c,"setLayerDimensions",{enumerable:!0,get:function(){return h.setLayerDimensions}}),Object.defineProperty(c,"shadow",{enumerable:!0,get:function(){return d.shadow}}),Object.defineProperty(c,"updateTextLayer",{enumerable:!0,get:function(){return u.updateTextLayer}}),Object.defineProperty(c,"version",{enumerable:!0,get:function(){return m.version}});var d=__w_pdfjs_require__(1),m=__w_pdfjs_require__(138),h=__w_pdfjs_require__(142),u=__w_pdfjs_require__(161),M=__w_pdfjs_require__(162),e=__w_pdfjs_require__(141),n=__w_pdfjs_require__(165),Y=__w_pdfjs_require__(149),I=__w_pdfjs_require__(168),T=__w_pdfjs_require__(167)})(),__webpack_exports__})())})(pdf_min);var pdf_minExports=pdf_min.exports;const _hoisted_1$1={class:"pdf-vue3-main",style:{height:"100%",position:"relative","min-height":"10px"}},_hoisted_2={class:"pdf-vue3-container",style:{height:"100%"}},_hoisted_3={key:0,class:"pdf-vue3-progress",style:{position:"absolute",left:"0",top:"0",width:"100%","user-select":"none","pointer-events":"none"}},_hoisted_4={key:1,class:"pdf-vue3-pageTooltip",style:{position:"absolute",left:"12px",top:"12px",width:"calc(100% - 12px)","user-select":"none","pointer-events":"none"}},_hoisted_5={key:1,style:{width:"50px",height:"50px",background:"rgba(0, 0, 0, 0.4)",color:"#ffffff","font-size":"16px","border-radius":"50%",display:"flex","justify-content":"center","align-items":"center"}},_hoisted_6=createBaseVNode("svg",{width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"},[createBaseVNode("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M11.0001 22.2877H13.0001V7.80237L16.2428 11.045L17.657 9.63079L12.0001 3.97394L6.34326 9.63079L7.75748 11.045L11.0001 7.80236V22.2877ZM18 3H6V1H18V3Z",fill:"currentColor"})],-1),_hoisted_7=[_hoisted_6],_sfc_main$1=defineComponent({__name:"pdf-vue3",props:{src:{default:void 0},httpHeaders:{default:void 0},withCredentials:{type:Boolean,default:void 0},password:{default:void 0},useSystemFonts:{type:Boolean,default:void 0},stopAtErrors:{type:Boolean,default:void 0},disableFontFace:{type:Boolean,default:void 0},disableRange:{type:Boolean,default:void 0},disableStream:{type:Boolean,default:void 0},disableAutoFetch:{type:Boolean,default:void 0},showProgress:{type:Boolean,default:!0},progressColor:{default:"#87ceeb"},showPageTooltip:{type:Boolean,default:!0},showBackToTopBtn:{type:Boolean,default:!0},scrollThreshold:{default:300},pdfWidth:{default:"100%"},rowGap:{default:8}},emits:["onProgress","onComplete","onScroll"],setup(c,{emit:d}){const m=c,h=new URL("data:application/javascript;base64,",self.location).href;pdf_minExports.GlobalWorkerOptions.workerSrc=h;const u=ref(1),M=computed(()=>parseInt(String(m.rowGap))),e=useSlots(),n=ref([]),Y={httpHeaders:m.httpHeaders,withCredentials:m.withCredentials,password:m.password,useSystemFonts:m.useSystemFonts,stopAtErrors:m.stopAtErrors,disableFontFace:m.disableFontFace,disableRange:m.disableRange,disableStream:m.disableStream,disableAutoFetch:m.disableAutoFetch};if(m.src instanceof Uint8Array)Y.data=m.src;else if(m.src.endsWith(".pdf"))Y.url=m.src;else{const F=atob(m.src.includes(",")?m.src.split(",")[1]:m.src),H=new Uint8Array(F.length);for(let P=0;P<F.length;P++)H[P]=F.charCodeAt(P);Y.data=H}for(const F in Y)Y[F]===void 0&&delete Y[F];const I=pdf_minExports.getDocument(Y),T=ref(0);I.onProgress=F=>{T.value=F.loaded/F.total*100,d("onProgress",T.value)},I.promise.then(()=>{d("onComplete")});const o=ref(0),C=ref(1),J=ref(0),v=ref([]),Q=ref(),$=ref();let q;const x=ref(!1),D=ref(!1),r=async()=>{D.value=!1;try{if(!q){q=await I.promise;const g=[];for(let K=0;K<q.numPages;K++)g.push(ref());n.value=g,o.value=q.numPages}}catch(g){console.error("Error loadingTask PDF:",g)}let F=0;for(let g=0;g<o.value;g++){try{const K=await q.getPage(g+1);if(x.value){x.value=!1,r();break}const il=n.value[g].value[0];var H=K.getViewport({scale:1}),P=(il.parentNode.clientWidth-4)/H.width;const ml=il.getContext("2d"),Gl=K.getViewport({scale:P*u.value});il.width=Gl.width,il.height=Gl.height,v.value[g]=F+=Gl.height/u.value+M.value,await K.render({canvasContext:ml,viewport:Gl})}catch(K){console.error("Error rendering PDF:",K)}g===o.value-1&&(D.value=!0)}},w=ref(0),j=ref(!1);let f;const sl=F=>{if(j.value=!0,clearTimeout(f),f=setTimeout(()=>{j.value=!1},1e3),J.value=F.target.scrollTop,d("onScroll",F.target.scrollTop),Q.value.scrollTop+Q.value.offsetHeight>=Q.value.scrollHeight-10){C.value=v.value.length;return}for(let H=0;H<v.value.length;H++)if(v.value[H]>F.target.scrollTop){C.value=H+1;break}};let tl;const B=()=>{if(w.value=window.innerHeight,Math.abs(cl.value-window.innerWidth)>1&&Math.abs(al.value-$.value.offsetWidth)>1)Tl();else{Tl();return}x.value=!0,clearTimeout(tl),tl=setTimeout(()=>{D.value&&r()},500)},cl=ref(0),al=ref(0),Tl=()=>{cl.value=window.innerWidth,al.value=$.value.offsetWidth};onMounted(()=>{u.value=window.devicePixelRatio||1,w.value=window.innerHeight,Tl(),r(),window.addEventListener("resize",B)}),onUnmounted(()=>{clearTimeout(tl),clearTimeout(f),cancelAnimationFrame(nl),window.removeEventListener("resize",B)});let nl;const Rl=F=>1-Math.pow(1-F,3),E=()=>{const F=Q.value.scrollTop,H=performance.now(),P=g=>{const K=g-H,il=Math.min(K/500,1),ml=Rl(il),Gl=F*(1-ml);Q.value.scrollTo(0,Gl),il<1&&(nl=requestAnimationFrame(P))};cancelAnimationFrame(nl),requestAnimationFrame(P)};return(F,H)=>(openBlock(),createElementBlock("div",_hoisted_1$1,[createBaseVNode("div",_hoisted_2,[createBaseVNode("div",{ref_key:"scroller",ref:Q,class:"pdf-vue3-scroller",style:normalizeStyle([{height:"100%","overflow-y":"auto"},{maxHeight:`${w.value}px`}]),onScroll:sl},[createBaseVNode("div",{class:"pdf-vue3-canvas-container",ref_key:"container",ref:$,style:normalizeStyle([{margin:"0 auto"},{width:isNaN(Number(m.pdfWidth))?m.pdfWidth:`${m.pdfWidth}px`}])},[(openBlock(!0),createElementBlock(Fragment,null,renderList(o.value,P=>(openBlock(),createElementBlock("canvas",{style:normalizeStyle([{display:"block","box-shadow":"#a9a9a9 0px 1px 3px 0px","margin-left":"auto","margin-right":"auto",width:"calc(100% - 4px)"},{marginBottom:`${M.value}px`}]),key:P,ref_for:!0,ref:n.value[P-1]},null,4))),128))],4)],36)]),m.showProgress?(openBlock(),createElementBlock("div",_hoisted_3,[unref(e).progress?renderSlot(F.$slots,"progress",{key:0,loadRatio:T.value}):(openBlock(),createElementBlock("div",{key:1,style:normalizeStyle([{width:"0%",height:"4px",transition:"width 0.2s"},{width:`${T.value}%`,opacity:T.value<100?"1":"0",backgroundColor:m.progressColor}])},null,4))])):createCommentVNode("",!0),m.showPageTooltip?(openBlock(),createElementBlock("div",_hoisted_4,[unref(e).pageTooltip?renderSlot(F.$slots,"pageTooltip",{key:0,currentPage:C.value,totalPages:o.value}):(openBlock(),createElementBlock("div",{key:1,style:normalizeStyle([{padding:"4px 8px",background:"rgba(0, 0, 0, 0.5)",color:"#ffffff","font-size":"16px","border-radius":"6px",display:"inline-block",transition:"opacity 0.3s"},{opacity:j.value&&o.value>0?"1":"0"}])},toDisplayString(C.value)+"/"+toDisplayString(o.value),5))])):createCommentVNode("",!0),m.showBackToTopBtn?(openBlock(),createElementBlock("div",{key:2,class:"pdf-vue3-backToTopBtn",onClick:E,style:normalizeStyle([{position:"absolute",right:"16px",bottom:"16px",display:"inline-block","user-select":"none","pointer-events":"none",opacity:"0",transition:"opacity 0.3s"},J.value>m.scrollThreshold?{opacity:"1",pointerEvents:"initial"}:void 0])},[unref(e).backToTopBtn?renderSlot(F.$slots,"backToTopBtn",{key:0,scrollOffset:J.value}):(openBlock(),createElementBlock("div",_hoisted_5,_hoisted_7))],4)):createCommentVNode("",!0)]))}}),App_vue_vue_type_style_index_0_scoped_355503ff_lang="",_export_sfc=(c,d)=>{const m=c.__vccOpts||c;for(const[h,u]of d)m[h]=u;return m},_hoisted_1={style:{width:"100%"}},_sfc_main={__name:"App",setup(c){const d=ref(!1),m=()=>{d.value=window.innerWidth<768};return watchEffect(()=>(m(),window.addEventListener("resize",m),()=>{window.removeEventListener("resize",m)})),(h,u)=>(openBlock(),createElementBlock("div",_hoisted_1,[createVNode(unref(_sfc_main$1),{"pdf-width":d.value?"100%":"768","row-gap":d.value?4:8,src:"/pdf-vue3/mastering_javascript_design_patterns_fragment.pdf"},null,8,["pdf-width","row-gap"])]))}},App=_export_sfc(_sfc_main,[["__scopeId","data-v-355503ff"]]);console.log("main.js in");console.log("Creating");createApp(App).mount("#app");console.log("App mounted");
